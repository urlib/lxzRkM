<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, user-scalable=yes" />
<meta name="description" content="Authorize.Net API Documentation">
<meta name="keywords" content="AIM ARB CIM Reporting">
<title>Authorize.Net API Documentation</title>

<link href="dist/css/bootstrap.min.css" rel="stylesheet">
<link href="dist/css/bootstrap-tourist.css" rel="stylesheet">

<link href="dist/css/main.css" rel="stylesheet" type="text/css" />
<link href="dist/css/docs.min.css" rel="stylesheet" type="text/css" />

<link href="dist/css/AnetNew.css" rel="stylesheet" type="text/css" />
<link href="dist/css/codemirror.min.css" rel="stylesheet" type="text/css" />
<link href="dist/css/show-hint.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="dist/css/font-awesome.min.css">
<link rel="stylesheet" href="dist/css/foundation.min.css">
<script src="external/highlight.min.js"></script>
<script>
		hljs.initHighlightingOnLoad();
		//hljs.initLineNumbersOnLoad();
	</script>
<script>
        function LhsStylePos() {
            var navElement = $('#apiRefGuideNavID');
            var element = document.getElementById('apiRefGuideNavID');
            element.style.position = null;
            element.style.top = null;
            
            }
    </script>
<link href="http://developer.authorize.net/content/dam/developer/images/favicon.ico" rel="shortcut icon" />
</head>
<body data-spy="scroll" data-target="#apiRefGuideNavID">





<div class="conatiner no-padding  developer no-margin">
<div class="wrap">
<div class="col-md-12 no-padding developerwrapper">
<div class="developer-inner">

<header class="container utility-bar" id="Header-Bar">
<div class="wrap">
<div class="row">
<div id="logo" class="col-md-3">
<div class="logo">
<a href="/" tabindex="1">
<img src="https://developer.authorize.net/content/dam/developer/images/anet-logo-white.png" alt="Developer.Authorize.Net" class="LogoWidth" />
</a>
</div>
</div>
<nav class="col-md-7 main-menu-wrapper">
<ul class="main-menu full-width no-margin">
<li class="api main-menu-item">
<a href="javascript:void(0)" class="main-menu-link" data-dev-submenu="dev-submenu-1" tabindex="2" data-href="/api/" onmousemove="LhsStylePos()">API</a>
</li>
<li class="hello-world main-menu-item" id=helloWorld>
<a href="javascript:void(0)" class="main-menu-link" data-dev-submenu="dev-submenu-2" tabindex="10" data-href="/hello_world/" onmousemove="LhsStylePos()">Hello World</a>
</li>
<li class="support main-menu-item">
<a href="javascript:void(0)" data-dev-submenu="dev-submenu-3" tabindex="16" data-href="developer-support.html" onmousemove="LhsStylePos()">Support</a>
</li>
</ul>
</nav>
<div class="col-md-1 sign-in no-padding main-menu-item" id="signIn">
<span class="btn-blue-dark border-white text-white sign-in-button" data-dev-submenu="dev-submenu-4" onmousemove="LhsStylePos()">
<a href="javascript:void()" tabindex="26">Sign in</a>
</span>
</div>
<div class="col-md-1 search main-menu-item">
<a href="javascript:void(0)" class="search-cta" data-dev-submenu="dev-submenu-5" tabindex="27" onmousemove="LhsStylePos()">
<img src="dist/imgs/developer/icons/icon-search.png" alt="Search" />
</a>
 </div>
</div>
</div>
</header>
<div class="container-outter">
<div class="container utility-bar dev-submenu dev-submenu-1">
<div class="wrap">
<div class="row">
<div class="col-md-3">
<h3>OUR API</h3>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="/api/" tabindex="3">API Developer Guides</a>
<a href="/api/reference/" tabindex="4">API Reference </a>
<a href="/samplecode/" target="_blank" rel="noopener noreferrer" tabindex="5">Sample Code [on GitHub]</a>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="https://github.com/AuthorizeNet" tabindex="6">SDKs [on GitHub]</a>
<a href="/api/changes/" tabindex="7">API Change Log</a>
<a href="/api/system_changes/" tabindex="8">System Change Log</a>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="/api/upgrade_guide/" tabindex="9">Upgrade Guide</a>
</div>
</div>
</div>
</div>
<div class="container utility-bar dev-submenu dev-submenu-2">
<div class="wrap">
<div class="row">
<div class="col-md-3">
<h3>Hello World</h3>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="/hello_world/" tabindex="11">Get Started</a>
<a href="https://www.authorize.net/resources/howitworksdiagram/" tabindex="12">How Payments Work </a>
<a href="/hello_world/common_setup_questions/" tabindex="13">Common Setup Questions</a>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="/hello_world/testing_guide/" tabindex="14">Testing Guide</a>
<a href="https://developer.authorize.net/hello_world/go-live.html" tabindex="15">Go-Live Checklist</a>
</div>
</div>
</div>
</div>
<div class="container utility-bar dev-submenu dev-submenu-3">
<div class="wrap">
<div class="row">
<div class="col-md-3">
<h3>Support</h3>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="/support/" tabindex="17">Get Support</a>
<a href="https://community.developer.authorize.net/t5/News-and-Announcements/bd-p/News_Annoucements" tabindex="18">News and Announcements</a>
<a href="https://community.developer.authorize.net/t5/Integration-and-Testing/bd-p/Integration01" tabindex="19">Forums</a>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="https://github.com/AuthorizeNet" tabindex="20">Authorize.Net on GitHub</a>
<a href="https://stackoverflow.com/questions/tagged/authorize.net" tabindex="21">Authorize.Net on Stack Overflow</a>
<a href="https://community.developer.authorize.net/t5/The-Authorize-Net-Developer-Blog/bg-p/DeveloperBlog" tabindex="22">Developer Blog</a>
</div>
<div class="col-md-3 dev-submenu-links-col last">
<a href="/api/reference/responseCodes.html" tabindex="23">Response (Error) Codes</a>
<a href="/support/faqs/" tabindex="24">FAQs</a>
<a href="https://support.authorize.net/s/" tabindex="25">Knowledge Base</a>
</div>
</div>
</div>
</div>
<div class="container utility-bar dev-submenu dev-submenu-4">
<div class="wrap">
<div class="row">
<div class="col-md-3">
<h3>Sign In</h3>
</div>
<div class="col-md-3 dev-submenu-links-col">
<a href="https://sandbox.authorize.net" tabindex="28">Sandbox</a>
<a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx" tabindex="29">Affiliate</a>
</div>
</div>
</div>
</div>
<div class="container utility-bar dev-submenu dev-submenu-5">
<div class="wrap">
<div class="row">
<div class="col-md-4">
<h3>Search Developer Site</h3>
</div>
<div class="col-md-8">
 <form class="dev-menu-search-form" action="https://developer.authorize.net/search" method="GET">
<input type="text" tabindex="30" placeholder="Enter questions, specific items, or Document IDs" class="dev-menu-search-textfield placeholder" name="q" id="q">
<input id="client" type="hidden" value="developer-anet-frontend" name="client"> <input id="proxystylesheet" type="hidden" value="developer-anet-frontend" name="proxystylesheet"> <input id="site" type="hidden" value="developer-anet" name="site">
<input id="output" type="hidden" value="xml_no_dtd" name="output">
<input type="submit" tabindex="31" text="" class="dev-menu-search-cta" name="dev-menu-search-cta" id="dev-menu-search-cta" alt="">
</form>
</div>
</div>
</div>
</div>



<div class="container api-reference-header-bar bs-docs-container pagetop-section">
<div class="wrap" id="APIRefPageID">
<div class="col-md-3" id="rightMenuList">
<div class="bs-docs-sidebar hidden-print vertical-scrollbar grey-rounded-scrollbar " role="complementary" id="apiRefGuideNavID">
<ul class="nav bs-docs-sidenav vertical-Menu">
<li>
<a class="apiHeaderClass rightMenuSlider rightMenuHeader L1Link" href="#apireferenceheader" id="expand" data-toggle="tooltip" title="EXPAND ALL">
<span class="apiHeader" id="spanExpand">EXPAND ALL</span>
</a>
</li>
<li id="familyHeaderID">
<a class="apiHeaderClass L1Link familyHeaderIDClass" href="#gettingstarted-section-section-header">
API Endpoints & Authentication
</a>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#payment-transactions">
Payment Transactions
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-charge-a-credit-card">Charge a Credit Card</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-authorize-a-credit-card">Authorize a Credit Card</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-capture-a-previously-authorized-amount">Capture a Previously Authorized Amount</a>
</li>
<li class="L2ListInNav">
 <a class="api-action-font L2Link" href="#payment-transactions-capture-funds-authorized-through-another-channel">Capture Funds Authorized Through Another Channel</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-refund-a-transaction">Refund a Transaction</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-void-a-transaction">Void a Transaction</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-update-split-tender-group">Update Split Tender Group</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-debit-a-bank-account">Debit a Bank Account</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-credit-a-bank-account">Credit a Bank Account</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-charge-a-customer-profile">Charge a Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-charge-a-tokenized-credit-card">Charge a Tokenized Credit Card</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#payment-transactions-create-a-chase-pay-transaction">Create a Chase Pay Transaction</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#mobile-in-app-transactions">
Mobile In-App Transactions
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#mobile-in-app-transactions-create-an-apple-pay-transaction">Create an Apple Pay Transaction</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#mobile-in-app-transactions-create-a-google-pay-transaction">Create a Google Pay Transaction</a>
</li>
</ul>
 </li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#visa-secure-remote-commerce">
Visa Secure Remote Commerce
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#visa-secure-remote-commerce-decrypt-visa-src-data">Decrypt Visa SRC Data</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#visa-secure-remote-commerce-create-a-visa-src-transaction">Create a Visa SRC Transaction</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#PayPal-express-checkout">
PayPal Express Checkout
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-authorization-only">Authorization Only</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-authorization-and-capture">Authorization and Capture</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-get-details">Get Details</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-authorization-only-continued">Authorization Only, Continued</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-prior-authorization-capture">Prior Authorization Capture</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-authorization-and-capture-continued">Authorization and Capture, Continued</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-void">Void</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#PayPal-express-checkout-credit">Credit</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#fraud-management">
Fraud Management
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#fraud-management-get-held-transaction-list">Get Held Transaction List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#fraud-management-approve-or-decline-held-transaction">Approve or Decline Held Transaction</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#recurring-billing">
Recurring Billing
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-create-a-subscription">Create a Subscription</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-create-a-subscription-from-customer-profile">Create a Subscription from Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-get-subscription">Get Subscription</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-get-subscription-status">Get Subscription Status</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-update-a-subscription">Update a Subscription</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#recurring-billing-cancel-a-subscription">Cancel a Subscription</a>
</li>
<li class="L2ListInNav">
 <a class="api-action-font L2Link" href="#recurring-billing-get-a-list-of-subscriptions">Get a List of Subscriptions</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#customer-profiles">
Customer Profiles
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-create-customer-profile">Create Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-get-customer-profile">Get Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-get-customer-profile-ids">Get Customer Profile IDs</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-update-customer-profile">Update Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-delete-customer-profile">Delete Customer Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-create-customer-payment-profile">Create Customer Payment Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-get-customer-payment-profile">Get Customer Payment Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-get-customer-payment-profile-list">Get Customer Payment Profile List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-validate-customer-payment-profile">Validate Customer Payment Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-update-customer-payment-profile">Update Customer Payment Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-delete-customer-payment-profile">Delete Customer Payment Profile</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-create-customer-shipping-address">Create Customer Shipping Address</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-get-customer-shipping-address">Get Customer Shipping Address</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-update-customer-shipping-address">Update Customer Shipping Address</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-delete-customer-shipping-address">Delete Customer Shipping Address</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#customer-profiles-create-a-customer-profile-from-a-transaction">Create a Customer Profile from a Transaction</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#transaction-reporting">
Transaction Reporting
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-settled-batch-list">Get Settled Batch List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-transaction-list">Get Transaction List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-unsettled-transaction-list">Get Unsettled Transaction List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-customer-profile-transaction-list">Get Customer Profile Transaction List</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-transaction-details">Get Transaction Details</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-batch-statistics">Get Batch Statistics</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-merchant-details">Get Merchant Details</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-account-updater-job-summary">Get Account Updater Job Summary</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#transaction-reporting-get-account-updater-job-details">Get Account Updater Job Details</a>
</li>
</ul>
</li>
<li class="ApiFamilyHeader">
<a class="L1Link apifamily-list" href="#accept-suite">
Accept Suite
</a>
<ul class="nav ApiFamilyHeader-sublist">
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#accept-suite-create-an-accept-payment-transaction">Create an Accept Payment Transaction</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#accept-suite-get-accept-customer-profile-page">Get Accept Customer Profile Page</a>
</li>
<li class="L2ListInNav">
<a class="api-action-font L2Link" href="#accept-suite-get-an-accept-payment-page">Get an Accept Payment Page</a>
</li>
</ul>
</li>
<li>
<a class=" L1Link">
</a>
</li>
</ul>
</div>
</div>
<div class="col-md-9" role="main" style="background: white">
<div class="col-md-12">
<div class="wrap">
<div class="col-md-2" style="margin-left: 77%">
<span class="btnCont">
<a href="javascript:void(0)" class="btnHelp btnpopup text-white">Help</a>
</span>
</div>
</div>
</div>
<div class="featurehighlights-section cybs-bodycopy col-md-12">
<div class="featurehighlights-section" id="endpoints-and-authentication">
<h1 id="apireferenceheader" class="subsection-title">API Reference</h1>
<div class="highlighted-feature-section">
<div class="highlighted-feature-container col-md-4">
<a href="#payment-transactions">
<div class="highlighted-feature">
<div class="highlighted-feature-icon-container">
<img src="dist/img/icon-payment-transactions.png" alt="Cybersource is a BBB Accredited Credit Card Payment Processor." class="highlighted-feature-icon" />
</div>
<div class="highlighted-feature-text">
<div class="highlighted-feature-heading">
Payments
</div>
<div class="highlighted-feature-description">
Authorize.Net API for accepting transactions.
</div>
</div>
</div>
</a>
</div>
<div class="highlighted-feature-container col-md-4">
<a href="#accept-suite">
<div class="highlighted-feature">
<div class="highlighted-feature-icon-container">
<img src="dist/img/icon-shopping-cart.png" alt="CyberSource is a BBB Accredited Credit Card Payment Processor." class="highlighted-feature-icon" />
</div>
<div class="highlighted-feature-text">
<div class="highlighted-feature-heading">
Accept Suite
</div>
<div class="highlighted-feature-description">
Libraries and forms for sites and apps. Apple Pay and Android Pay.
</div>
</div>
</div>
</a>
</div>
<div class="highlighted-feature-container col-md-4">
<a href="#customer-profiles">
<div class="highlighted-feature">
<div class="highlighted-feature-icon-container">
<img src="dist/img/icon-manage-customers.png" alt="CyberSource is a BBB Accredited Credit Card Payment Processor." class="highlighted-feature-icon" />
</div>
<div class="highlighted-feature-text">
<div class="highlighted-feature-heading">
Customer Profiles
</div>
<div class="highlighted-feature-description">
Store customers' sensitive data for quick retrieval on return purchases.
</div>
</div>
</div>
</a>
</div>
</div>
</div>
</div>
<div class="gettingstarted-section cybs-bodycopy col-md-12">
<div class="section-header collapsible active" id="gettingstarted-section-section-header">
<span class="section-header-text">
FIRST TIME USER? Click here for <strong>API Endpoints & Authentication</strong> details
</span>
</div>

<div class="section-body" style="display:none">
<div class="subsection-title">API Endpoints & Authentication</div>
<div class="subsection-text col-md-12">
<p>All requests to the Authorize.Net API are sent via the HTTP POST method to one of our API endpoint URLs.</p>
<p>HTTP Request Method: <code>POST</code></p>
<br />
<p>Sandbox API Endpoint: <code>https://apitest.authorize.net/xml/v1/request.api</code></p>
<p>Production API Endpoint: <code>https://api.authorize.net/xml/v1/request.api</code></p>
<br />
<p>XML Content-Type: <code>text/xml</code></p>
<p>JSON Content-Type: <code>application/json</code></p>
<br />
<p>API Schema (XSD): <a target="_blank" rel="noopener noreferrer" href="https://api.authorize.net/xml/v1/schema/AnetApiSchema.xsd">https://api.authorize.net/xml/v1/schema/AnetApiSchema.xsd</a></p>
<br>
<p>All calls to the Authorize.Net API require merchant authentication. <a href="https://developer.authorize.net/hello_world/sandbox/" target="_blank" rel="noopener noreferrer">Sign up for a sandbox account</a> to quickly get started.</p>
<h3>A Note Regarding JSON Support</h3>
<p>The Authorize.Net API, which is not based on REST, offers JSON support through a translation of JSON elements to XML elements. While JSON does not typically require a set order to the elements in an object, XML requires strict ordering. Developers using the Authorize.Net API should force the ordering of elements to match this API Reference.</p>
<p>Alternately, consider using the <a href="https://github.com/AuthorizeNet" target="_blank" rel="noopener noreferrer">Authorize.Net SDKs</a> for a seamless integration.</p>
<h3>Test Your Authentication Credentials</h3>
<p>Use this method to test that your authentication credentials are valid and that they are being received successfully by the Authorize.Net API.</p>
</div>
<div class="Enter-Sandbox-Credential-Tab">
<ul id="myTab" class="nav test-credentials nav-tabs">
<li><a href="#homereq-test-your-authentication-credentials" data-toggle="tab">Request</a></li>
<li><a href="#homeresp-test-your-authentication-credentials" data-toggle="tab">Response</a></li>
<li class="active"><a href="#authentication-keys" data-toggle="tab">Enter Sandbox Credentials</a></li>
<li><a id="test-your-authentication-credentialsTryIt" href="#console-test-your-authentication-credentials" data-toggle="tab">API Live Console</a></li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in" id="homereq-test-your-authentication-credentials">
<p><em>authenticateTestRequest</em></p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong>
<br />Contains merchant authentication information.
<br /></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /></br>
The merchant API Login ID is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>20-character maximum.</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>16-character maximum.</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>Up to 20 characters.</div></td>
</tr>
</tbody>
</table>
</div>
<div class="tab-pane fade in" id="homeresp-test-your-authentication-credentials">
<p><em>authenticateTestResponse</em></p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
 <td><div>Up to 20 characters.</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td><code>Ok</code> or <code>Error</code>.<br /><br />
States whether the request was handled successfully, or ended with an error.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
</td>
<td><div>Up to six characters. The first character is either an I for informational responses, or E for error responses. The remaining characters are numerical and indicate the type of informational or error response. For example, <code>I00001</code> or <code>E00001</code>. For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html " target="_blank" rel="noopener noreferrer">the Response Code Tool.</a></div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div></div></td>
</tr>
</tbody>
</table>
</div>
<div class="tab-pane fade" id="console-test-your-authentication-credentials">
 <form method="post" action="">
<div class="toggleButton-cont">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn  btn-xs showJSONAPI btn-inner-tab" textareaid="test-your-authentication-credentials">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="test-your-authentication-credentials">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
                                                                                    <code contentEditable="true" id="txtReqXml-test-your-authentication-credentials" spellcheck="false" class="XML XMLRequest">&lt;authenticateTestRequest xmlns=&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
&lt;/authenticateTestRequest&gt</code>
                                                                                    <code contentEditable="true" id="txtReqXml-Demo-test-your-authentication-credentials" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;authenticateTestRequest xmlns=&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
&lt;/authenticateTestRequest&gt</code>
                                                                                </pre>
<pre class="sample-json-request" name="txtReqJsn">
                                                                                    <code contentEditable="true" id="txtReqJsn-test-your-authentication-credentials" spellcheck="false" class="JSON JSONRequest">{
"authenticateTestRequest": {
    "merchantAuthentication": {
        "name": "API_LOGIN_ID",
        "transactionKey": "API_TRANSACTION_KEY"  
        }
    }
}</code>
                                                                                    <code contentEditable="true" id="txtReqJsn-Demo-test-your-authentication-credentials" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
"authenticateTestRequest": {
    "merchantAuthentication": {
        "name": "API_LOGIN_ID",
        "transactionKey": "API_TRANSACTION_KEY"  
        }
    }
}</code>
                                                                                </pre>

<p>
<button type="button" id="btnSend-test-your-authentication-credentials" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-test-your-authentication-credentials" name="btnReset" class="btn " onclick="">Reset</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div class="authenticationDiv" id="auth-test-your-authentication-credentials">
<p class="bg-danger required btn" style="display:none;cursor: auto">Both fields are required</p>
<p>
<span class="msgSandbox">Okay, you're in a real hurry right now... We understand.
</span>
<br />
<a class="btn button-secondary btn-primary btnSandbox" href="javascript:useDefaultCredentials();void(0);"> Use Default Sandbox Credentials</a>
</p>
<p>Enter your sandbox credentials below to automatically insert them into all of the sample requests in this API Reference page. You can quickly sign up for a sandbox account <a href="https://developer.authorize.net/hello_world/sandbox/" target="_blank" rel="noopener noreferrer">here.</a></p>
<form class="form-inline" id="populateKeyForm-test-your-authentication-credentials" role="form" onsubmit="return btnPopulateKeys_onclick(this)">
<div class="form-group">
<label class="sr-only" for="loginID">API Login ID</label>
<input type="text" class="form-control" id="txtLoginID-test-your-authentication-credentials" placeholder="API Login ID">
</div>
<div class="form-group">
<label class="sr-only" for="transactionKey">Transaction Key</label>
<input type="text" class="form-control" id="txtTransactionKey-test-your-authentication-credentials" placeholder="Transaction Key" autocomplete="off">
</div>
<button type="submit" class="btn button-secondary btn-primary" style="margin-left: 20px;">Populate Sample Requests</button>
</form>
</div>
<div> <span id="spnStatusCode-test-your-authentication-credentials"></span>

 
<div class="errorDetails" id="detailsDiv-test-your-authentication-credentials">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                                                <code class="XML" id="txtRespXml-test-your-authentication-credentials">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;authenticateTestResponse xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode>Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code>I00001&lt;/code&gt;
            &lt;text>Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
&lt;/authenticateTestResponse&gt;</code>
                                                                                <code class="XML" id="txtRespXml-Demo-test-your-authentication-credentials" style="display: none !important">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;authenticateTestResponse xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode>Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code>I00001&lt;/code&gt;
            &lt;text>Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
&lt;/authenticateTestResponse&gt;</code>
                                                                            </pre>
<pre class="sample-json-response" name="txtRespJsn">
                                                                                <code class="JSON" id="txtRespJsn-test-your-authentication-credentials">{
"messages": {                                                                                        
    "resultCode": "Ok",
    "message": [
        {
            "code": "I00001",
            "text": "Successful."
        }
    ]
}
</code>
                                                                                <code class="JSON" id="txtRespJsn-Demo-test-your-authentication-credentials" style="display: none !important">{
   "messages": {                                                                                       
       "resultCode": "Ok",
       "message": [
           {
               "code": "I00001",
               "text": "Successful."
           }
       ]
   }
}</code>
                                                                            </pre>

<div id="txtRespLoader-test-your-authentication-credentials" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade in active" id="authentication-keys">
<p class="custom-message" style="display: none">You are using your own sandbox account.<a class="populateDefaultCredential" href="#payment-transactions">Click here to reset to default credentials.</a></p>
<p class="default-message">Enter your sandbox credentials below to automatically insert them into all of the sample requests in this API Reference page. You can quickly sign up for a sandbox account <a href="https://developer.authorize.net/hello_world/sandbox/" target="_blank" rel="noopener noreferrer">here.</a></p>
<form class="form-inline" id="populateKeyForm-main" role="form" onsubmit="return btnPopulateKeys_onclick(this)">
<div class="form-group">
<label class="sr-only" for="loginID">API Login ID</label>
<input type="text" class="form-control" id="txtLoginID-main" placeholder="API Login ID">
</div>
<div class="form-group">
<label class="sr-only" for="transactionKey">Transaction Key</label>
<input type="text" class="form-control" id="txtTransactionKey-main" placeholder="Transaction Key" autocomplete="off">
</div>
<button type="submit" class="btn button-secondary btn-primary buttonForCresentials" style="margin-left: 20px;">Populate Sample Requests</button>
<p class="bg-danger required btn" style="display:none;cursor: auto">Both fields are required</p>
</form>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="payment-transactions" class="section-title">Payment Transactions</h2>
<p class="lead">The createTransactionRequest function enables you to submit a wide variety of transaction requests, depending on how you structure it. For example, differences in the <code>transactionType</code> field or the payment field can create different types of transactions.<br /><br />For more information about the different types of transactions, see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html">Payment Transactions</a> page.</p>
<h3 id="payment-transactions-charge-a-credit-card">Charge a Credit Card</h3>
<p>Use this method to authorize and capture a credit card payment. </p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="charge-a-credit-cardTryIt" href="#console-charge-a-credit-card" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="charge-a-credit-cardphp" href="#php-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="charge-a-credit-cardcs" href="#cs-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="charge-a-credit-cardjava" href="#java-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="charge-a-credit-cardrb" href="#ruby-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="charge-a-credit-cardpy" href="#python-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="charge-a-credit-cardjs" href="#node-charge-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-charge-a-credit-card">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="charge-a-credit-card">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="charge-a-credit-card">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-charge-a-credit-card" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;customer&gt;
      &lt;id&gt;99999456654&lt;/id&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-charge-a-credit-card" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;customer&gt;
      &lt;id&gt;99999456654&lt;/id&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-charge-a-credit-card" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;transactionSettings&quot;: {
                &quot;setting&quot;: {
                    &quot;settingName&quot;: &quot;testRequest&quot;,
                    &quot;settingValue&quot;: &quot;false&quot;
                }
            },
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-charge-a-credit-card" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;transactionSettings&quot;: {
                &quot;setting&quot;: {
                    &quot;settingName&quot;: &quot;testRequest&quot;,
                    &quot;settingValue&quot;: &quot;false&quot;
                }
            },
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-charge-a-credit-card" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-charge-a-credit-card" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-charge-a-credit-card"></span>


<div class="errorDetails" id="detailsDiv-charge-a-credit-card">
<div class="tblErrors">
</div>
</div>
 <span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-charge-a-credit-card">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt; </code>
                                                	<code class="XML" id="txtRespXml-Demo-charge-a-credit-card" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt; </code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-charge-a-credit-card">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HW617E&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2157047189&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E7CEB0A9F1BECA32A02493E1B31D5955&quot;,
        &quot;testRequest&quot;: &quot;0&quot;,
        &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
        &quot;accountType&quot;: &quot;Visa&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;D0C4FFF5648511A5862B917CFD9BB78ABF8A6E1D90C119CBBC4C0B454F4FF40DED15B204E042F36ECA5FB15D02588E4E4A7B85B94E7279599CE6020462CB7DEE&quot;,
        &quot;SupplementalDataQualificationIndicator&quot;: 0
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-charge-a-credit-card" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HW617E&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2157047189&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E7CEB0A9F1BECA32A02493E1B31D5955&quot;,
        &quot;testRequest&quot;: &quot;0&quot;,
        &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
        &quot;accountType&quot;: &quot;Visa&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;D0C4FFF5648511A5862B917CFD9BB78ABF8A6E1D90C119CBBC4C0B454F4FF40DED15B204E042F36ECA5FB15D02588E4E4A7B85B94E7279599CE6020462CB7DEE&quot;,
        &quot;SupplementalDataQualificationIndicator&quot;: 0
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-charge-a-credit-card" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-charge-a-credit-card">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-charge-a-credit-card"></div>
<div id="showCode-php-charge-a-credit-card">
<p>
 This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-credit-card"></a>
</p>
<textarea class="php" id="textarea-php-charge-a-credit-card" name="textarea-php-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-charge-a-credit-card">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-charge-a-credit-card"></div>
<div id="showCode-cs-charge-a-credit-card">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-credit-card"></a>
</p>
<textarea class="cs" id="textarea-cs-charge-a-credit-card" name="textarea-cs-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-charge-a-credit-card">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-charge-a-credit-card"></div>
<div id="showCode-java-charge-a-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-credit-card"></a>
</p>
<textarea class="java" id="textarea-java-charge-a-credit-card" name="textarea-java-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-charge-a-credit-card">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-charge-a-credit-card"></div>
<div id="showCode-rb-charge-a-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-credit-card"></a>
</p>
<textarea class="ruby" id="textarea-rb-charge-a-credit-card" name="textarea-rb-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-charge-a-credit-card">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-charge-a-credit-card"></div>
<div id="showCode-py-charge-a-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-credit-card"></a>
</p>
<textarea class="python" id="textarea-py-charge-a-credit-card" name="textarea-py-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-charge-a-credit-card">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="charge-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-charge-a-credit-card"></div>
<div id="showCode-js-charge-a-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-credit-card"></a>
</p>
<textarea class="node" id="textarea-js-charge-a-credit-card" name="textarea-js-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-charge-a-credit-card">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="charge-a-credit-card">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="charge-a-credit-card">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="charge-a-credit-card">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="charge-a-credit-card">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="charge-a-credit-card">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="charge-a-credit-card">Node</button>
 </div>
<div class="showCodeCont" id="showCode-charge-a-credit-card">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-charge-a-credit-card"></div>
<div id="showCode-php-charge-a-credit-card">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-php-charge-a-credit-card" name="textarea-php-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-charge-a-credit-card"></div>
<div id="showCode-cs-charge-a-credit-card">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-cs-charge-a-credit-card" name="textarea-cs-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-charge-a-credit-card"></div>
<div id="showCode-java-charge-a-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-java-charge-a-credit-card" name="textarea-java-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-charge-a-credit-card"></div>
<div id="showCode-rb-charge-a-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-rb-charge-a-credit-card" name="textarea-rb-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-charge-a-credit-card"></div>
<div id="showCode-py-charge-a-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-py-charge-a-credit-card" name="textarea-py-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-charge-a-credit-card"></div>
<div id="showCode-js-charge-a-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-credit-card"></a>
</p>
 <textarea class="sample-code" id="textarea-js-charge-a-credit-card" name="textarea-js-charge-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-charge-a-credit-card" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-charge-a-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-charge-a-credit-card">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-charge-a-credit-card" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-charge-a-credit-card">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>Contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>trackData</td>
<td><strong><br /><br /></strong><br /><br />Applies to Card Present transactions only.<br /><br />Contains track data read from the customer's card.<br /><br />
Track data contains the full card number and expiration date by default. If you use the <code>trackData</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>track1</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Present transactions only.<br /><br />
Track data includes the full card number and expiration date by default. If you send the <code>track1</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div>String, 76 characters.<br /><br />Do not include the start sentinel (percent sign), end sentinel (question mark), or Longitudinal Redundancy Check.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>track2</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Present transactions only.<br /><br />
Track data includes the full card number and expiration date by default. If you use the <code>track2</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div>String, 37 characters.<br /><br />Do not include the start sentinel (semicolon), end sentinel (question mark), or Longitudinal Redundancy Check.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td>The following field enables you to create a customer profile from the data sent to make the transaction.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>createProfile</td>
<td>Indicates whether to create a customer profile.<br /><br />
If set to true, a customer profile and payment profile will be generated from the customer and payment data.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
 <td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
 <td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
 Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>Postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type of the transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
 </div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-charge-a-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-charge-a-credit-card">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-charge-a-credit-card">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
 </tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
 </tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>profileResponse</td>
 <td>Contains result of attempt to create a customer payment profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileIdList</td>
<td>Contains the Customer Payment Profile ID element<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>numericString</td>
<td>The ID number associated with the customer payment profile.<br /><br />
This is only included if the original transaction included a billing address.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerShippingProfileIdList</td>
<td>Contains the Customer Shipping Profile ID element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>numericString</td>
<td>The ID number associated with the customer shipping profile.<br /><br />
This value is only included if the original transaction included a shipping address.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-authorize-a-credit-card">Authorize a Credit Card</h3>
<p>Use this method to authorize a credit card payment. To actually charge the funds you will need to follow up with a capture transaction.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="authorize-a-credit-cardTryIt" href="#console-authorize-a-credit-card" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="authorize-a-credit-cardphp" href="#php-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="authorize-a-credit-cardcs" href="#cs-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="authorize-a-credit-cardjava" href="#java-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="authorize-a-credit-cardrb" href="#ruby-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="authorize-a-credit-cardpy" href="#python-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="authorize-a-credit-cardjs" href="#node-authorize-a-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-authorize-a-credit-card">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="authorize-a-credit-card">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="authorize-a-credit-card">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-authorize-a-credit-card" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;customer&gt;
      &lt;id&gt;99999456654&lt;/id&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-authorize-a-credit-card" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;customer&gt;
      &lt;id&gt;99999456654&lt;/id&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-authorize-a-credit-card" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-authorize-a-credit-card" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-authorize-a-credit-card" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-authorize-a-credit-card" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-authorize-a-credit-card"></span>


<div class="errorDetails" id="detailsDiv-authorize-a-credit-card">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-authorize-a-credit-card">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-authorize-a-credit-card" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-authorize-a-credit-card">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;6&quot;,
        &quot;transId&quot;: &quot;2149186848&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;FE3CE11E9F7670D3ECD606E455B7C222&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-authorize-a-credit-card" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;6&quot;,
        &quot;transId&quot;: &quot;2149186848&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;FE3CE11E9F7670D3ECD606E455B7C222&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-authorize-a-credit-card" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-authorize-a-credit-card">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="authorize-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-authorize-a-credit-card"></div>
<div id="showCode-php-authorize-a-credit-card">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorize-a-credit-card"></a>
</p>
<textarea class="php" id="textarea-php-authorize-a-credit-card" name="textarea-php-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
 </div>
<div class="tab-pane fade" id="cs-authorize-a-credit-card">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="authorize-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-authorize-a-credit-card"></div>
<div id="showCode-cs-authorize-a-credit-card">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorize-a-credit-card"></a>
</p>
<textarea class="cs" id="textarea-cs-authorize-a-credit-card" name="textarea-cs-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-authorize-a-credit-card">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="authorize-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-authorize-a-credit-card"></div>
<div id="showCode-java-authorize-a-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorize-a-credit-card"></a>
</p>
<textarea class="java" id="textarea-java-authorize-a-credit-card" name="textarea-java-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-authorize-a-credit-card">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="authorize-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-authorize-a-credit-card"></div>
<div id="showCode-rb-authorize-a-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorize-a-credit-card"></a>
</p>
<textarea class="ruby" id="textarea-rb-authorize-a-credit-card" name="textarea-rb-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-authorize-a-credit-card">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="authorize-a-credit-card">
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-authorize-a-credit-card"></div>
<div id="showCode-py-authorize-a-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorize-a-credit-card"></a>
</p>
<textarea class="python" id="textarea-py-authorize-a-credit-card" name="textarea-py-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-authorize-a-credit-card">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="authorize-a-credit-card">
</div>
 <div class="showCodeCont" id="showCode-authorize-a-credit-card">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-authorize-a-credit-card"></div>
<div id="showCode-js-authorize-a-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorize-a-credit-card"></a>
</p>
<textarea class="node" id="textarea-js-authorize-a-credit-card" name="textarea-js-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-authorize-a-credit-card">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="authorize-a-credit-card">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="authorize-a-credit-card">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="authorize-a-credit-card">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="authorize-a-credit-card">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="authorize-a-credit-card">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="authorize-a-credit-card">Node</button>
</div>
<div class="showCodeCont" id="showCode-authorize-a-credit-card">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-authorize-a-credit-card"></div>
<div id="showCode-php-authorize-a-credit-card">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-php-authorize-a-credit-card" name="textarea-php-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-authorize-a-credit-card"></div>
<div id="showCode-cs-authorize-a-credit-card">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-cs-authorize-a-credit-card" name="textarea-cs-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-authorize-a-credit-card"></div>
<div id="showCode-java-authorize-a-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-java-authorize-a-credit-card" name="textarea-java-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-authorize-a-credit-card"></div>
<div id="showCode-rb-authorize-a-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-rb-authorize-a-credit-card" name="textarea-rb-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-authorize-a-credit-card"></div>
<div id="showCode-py-authorize-a-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-py-authorize-a-credit-card" name="textarea-py-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-authorize-a-credit-card"></div>
<div id="showCode-js-authorize-a-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorize-a-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-js-authorize-a-credit-card" name="textarea-js-authorize-a-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-authorize-a-credit-card" role="tablist" aria-multiselectable="true">
<div class="panel">
 <div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-authorize-a-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-authorize-a-credit-card">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-authorize-a-credit-card" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-authorize-a-credit-card">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>trackData</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Present transactions only.<br /><br />Contains track data read from the customer's card.<br /><br />
Track data contains the full card number and expiration date by default. If you use the <code>trackData</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>track1</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Present transactions only.<br /><br />
Track data includes the full card number and expiration date by default. If you send the <code>track1</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div>String, 76 characters.<br /><br />Do not include the start sentinel (percent sign), end sentinel (question mark), or Longitudinal Redundancy Check.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>track2</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Present transactions only.<br /><br />
Track data includes the full card number and expiration date by default. If you use the <code>track2</code> element, do not send the <code>creditCard</code> element. Sending both elements may result in Response Reason Code 153.</td>
<td><div>String, 37 characters.<br /><br />Do not include the start sentinel (semicolon), end sentinel (question mark), or Longitudinal Redundancy Check.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td>The following field enables you to create a customer profile from the data sent to make the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>createProfile</td>
<td>Indicates whether to create a customer profile.<br /><br />
If set to true, a customer profile and payment profile will be generated from the customer and payment data.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
 <td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
 The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
 <td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
 </td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
 This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-authorize-a-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-authorize-a-credit-card">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-authorize-a-credit-card">
<div class="panel-body">
<p><em>createTransactionResponse</em>
 </p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
 </td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
 <td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
 </td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
 <tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>profileResponse</td>
<td>Contains result of attempt to create a customer payment profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-capture-a-previously-authorized-amount">Capture a Previously Authorized Amount</h3>
<p>Use this method to capture funds reserved with a previous <code>authOnlyTransaction</code> transaction request.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="capture-a-previously-authorized-amountTryIt" href="#console-capture-a-previously-authorized-amount" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="capture-a-previously-authorized-amountphp" href="#php-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="capture-a-previously-authorized-amountcs" href="#cs-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="capture-a-previously-authorized-amountjava" href="#java-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="capture-a-previously-authorized-amountrb" href="#ruby-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="capture-a-previously-authorized-amountpy" href="#python-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="capture-a-previously-authorized-amountjs" href="#node-capture-a-previously-authorized-amount" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-capture-a-previously-authorized-amount">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="capture-a-previously-authorized-amount">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="capture-a-previously-authorized-amount">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-capture-a-previously-authorized-amount" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;priorAuthCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;refTransId&gt;1234567890&lt;/refTransId&gt;
   &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
   &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-capture-a-previously-authorized-amount" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;priorAuthCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;refTransId&gt;1234567890&lt;/refTransId&gt;
   &lt;order&gt;
     &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
     &lt;description&gt;Product Description&lt;/description&gt;
   &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-capture-a-previously-authorized-amount" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;priorAuthCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-capture-a-previously-authorized-amount" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;priorAuthCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-capture-a-previously-authorized-amount" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-capture-a-previously-authorized-amount" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-capture-a-previously-authorized-amount"></span>


<div class="errorDetails" id="detailsDiv-capture-a-previously-authorized-amount">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-capture-a-previously-authorized-amount">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;ROHNFQ&lt;/authCode&gt;
    &lt;avsResultCode&gt;P&lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2214480791&lt;/transId&gt;
    &lt;refTransID&gt;2214480791&lt;/refTransID&gt;
    &lt;transHash&gt;492E8E689EBD28D07749848B7C1E49D3&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-capture-a-previously-authorized-amount" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;ROHNFQ&lt;/authCode&gt;
    &lt;avsResultCode&gt;P&lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2214480791&lt;/transId&gt;
    &lt;refTransID&gt;2214480791&lt;/refTransID&gt;
    &lt;transHash&gt;492E8E689EBD28D07749848B7C1E49D3&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-capture-a-previously-authorized-amount">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234567890&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;FE3CE11E9F7670D3ECD606E455B7C222&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-capture-a-previously-authorized-amount" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234567890&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;FE3CE11E9F7670D3ECD606E455B7C222&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-capture-a-previously-authorized-amount" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-capture-a-previously-authorized-amount">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="capture-a-previously-authorized-amount">
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-capture-a-previously-authorized-amount"></div>
<div id="showCode-php-capture-a-previously-authorized-amount">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="php" id="textarea-php-capture-a-previously-authorized-amount" name="textarea-php-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-capture-a-previously-authorized-amount">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="capture-a-previously-authorized-amount">
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-capture-a-previously-authorized-amount"></div>
<div id="showCode-cs-capture-a-previously-authorized-amount">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="cs" id="textarea-cs-capture-a-previously-authorized-amount" name="textarea-cs-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-capture-a-previously-authorized-amount">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="capture-a-previously-authorized-amount">
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-capture-a-previously-authorized-amount"></div>
<div id="showCode-java-capture-a-previously-authorized-amount">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="java" id="textarea-java-capture-a-previously-authorized-amount" name="textarea-java-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-capture-a-previously-authorized-amount">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="capture-a-previously-authorized-amount">
</div>
 <div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-capture-a-previously-authorized-amount"></div>
<div id="showCode-rb-capture-a-previously-authorized-amount">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="ruby" id="textarea-rb-capture-a-previously-authorized-amount" name="textarea-rb-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-capture-a-previously-authorized-amount">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="capture-a-previously-authorized-amount">
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-capture-a-previously-authorized-amount"></div>
<div id="showCode-py-capture-a-previously-authorized-amount">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="python" id="textarea-py-capture-a-previously-authorized-amount" name="textarea-py-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-capture-a-previously-authorized-amount">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="capture-a-previously-authorized-amount">
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-capture-a-previously-authorized-amount"></div>
<div id="showCode-js-capture-a-previously-authorized-amount">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="node" id="textarea-js-capture-a-previously-authorized-amount" name="textarea-js-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-capture-a-previously-authorized-amount">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="capture-a-previously-authorized-amount">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="capture-a-previously-authorized-amount">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="capture-a-previously-authorized-amount">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="capture-a-previously-authorized-amount">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="capture-a-previously-authorized-amount">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="capture-a-previously-authorized-amount">Node</button>
</div>
<div class="showCodeCont" id="showCode-capture-a-previously-authorized-amount">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-capture-a-previously-authorized-amount"></div>
<div id="showCode-php-capture-a-previously-authorized-amount">
 <p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-php-capture-a-previously-authorized-amount" name="textarea-php-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-capture-a-previously-authorized-amount"></div>
<div id="showCode-cs-capture-a-previously-authorized-amount">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-cs-capture-a-previously-authorized-amount" name="textarea-cs-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-capture-a-previously-authorized-amount"></div>
<div id="showCode-java-capture-a-previously-authorized-amount">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-java-capture-a-previously-authorized-amount" name="textarea-java-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-capture-a-previously-authorized-amount"></div>
<div id="showCode-rb-capture-a-previously-authorized-amount">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-rb-capture-a-previously-authorized-amount" name="textarea-rb-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-capture-a-previously-authorized-amount"></div>
<div id="showCode-py-capture-a-previously-authorized-amount">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-py-capture-a-previously-authorized-amount" name="textarea-py-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-capture-a-previously-authorized-amount"></div>
<div id="showCode-js-capture-a-previously-authorized-amount">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-capture-a-previously-authorized-amount"></a>
</p>
<textarea class="sample-code" id="textarea-js-capture-a-previously-authorized-amount" name="textarea-js-capture-a-previously-authorized-amount" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-capture-a-previously-authorized-amount" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-capture-a-previously-authorized-amount">
<h4 class="panel-title">
<a data-parent="#accordion-capture-a-previously-authorized-amount">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-capture-a-previously-authorized-amount" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-capture-a-previously-authorized-amount">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>priorAuthCaptureTransaction</code> to capture a previous <code>authOnlyTransaction</code> transaction request.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td><strong>Required.</strong><br />
Transaction ID of the original <code>authOnlyTransaction</code> request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
This field is currently supported through Chase Paymentech and Elavon during Prior Authorization Capture.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
This field is currently supported through Chase Paymentech and Elavon during Prior Authorization Capture.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-capture-a-previously-authorized-amount">
<h4 class="panel-title">
<a data-parent="#accordion-capture-a-previously-authorized-amount">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-capture-a-previously-authorized-amount">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
 <td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-capture-funds-authorized-through-another-channel">Capture Funds Authorized Through Another Channel</h3>
<p>Use this method to capture funds which have been authorized through another channel, such as phone authorization. If you need to capture an <a href="https://developer.authorize.net/api/reference/#payment-transactions-authorize-a-credit-card">authorizeOnlyTransaction</a>, use <a href="https://developer.authorize.net/api/reference/#payment-transactions-capture-a-previously-authorized-amount">priorAuthCaptureTransaction</a> instead.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="capture-funds-authorized-through-another-channelTryIt" href="#console-capture-funds-authorized-through-another-channel" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="capture-funds-authorized-through-another-channelphp" href="#php-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="capture-funds-authorized-through-another-channelcs" href="#cs-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="capture-funds-authorized-through-another-channeljava" href="#java-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="capture-funds-authorized-through-another-channelrb" href="#ruby-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="capture-funds-authorized-through-another-channelpy" href="#python-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="capture-funds-authorized-through-another-channeljs" href="#node-capture-funds-authorized-through-another-channel" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-capture-funds-authorized-through-another-channel">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="capture-funds-authorized-through-another-channel">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="capture-funds-authorized-through-another-channel">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-capture-funds-authorized-through-another-channel" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;captureOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;authCode&gt;ROHNFQ&lt;/authCode&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-capture-funds-authorized-through-another-channel" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;captureOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;5424000000000015&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
        &lt;cardCode&gt;999&lt;/cardCode&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;authCode&gt;ROHNFQ&lt;/authCode&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-capture-funds-authorized-through-another-channel" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;captureOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;authCode&quot;: &quot;ROHNFQ&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-capture-funds-authorized-through-another-channel" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;captureOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;cardCode&quot;: &quot;999&quot;
                }
            },
            &quot;authCode&quot;: &quot;ROHNFQ&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-capture-funds-authorized-through-another-channel" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-capture-funds-authorized-through-another-channel" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-capture-funds-authorized-through-another-channel"></span>


<div class="errorDetails" id="detailsDiv-capture-funds-authorized-through-another-channel">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
 <div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-capture-funds-authorized-through-another-channel">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;
    123456
  &lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;
      1
    &lt;/responseCode&gt;
    &lt;authCode&gt;
      ROHNFQ
    &lt;/authCode&gt;
    &lt;avsResultCode&gt;
      P
    &lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;
      2214480791
    &lt;/transId&gt;
    &lt;refTransID&gt;
      2214480791
    &lt;/refTransID&gt;
    &lt;transHash&gt;
      492E8E689EBD28D07749848B7C1E49D3
    &lt;/transHash&gt;
    &lt;accountNumber&gt;
      XXXX0015
    &lt;/accountNumber&gt;
    &lt;accountType&gt;
      Mastercard
    &lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;
          1
        &lt;/code&gt;
        &lt;description&gt;
          This transaction has been approved.
        &lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-capture-funds-authorized-through-another-channel" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;
    123456
  &lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;
      1
    &lt;/responseCode&gt;
    &lt;authCode&gt;
      ROHNFQ
    &lt;/authCode&gt;
    &lt;avsResultCode&gt;
      P
    &lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;
      2214480791
    &lt;/transId&gt;
    &lt;refTransID&gt;
      2214480791
    &lt;/refTransID&gt;
    &lt;transHash&gt;
      492E8E689EBD28D07749848B7C1E49D3
    &lt;/transHash&gt;
    &lt;accountNumber&gt;
      XXXX0015
    &lt;/accountNumber&gt;
    &lt;accountType&gt;
      Mastercard
    &lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;
          1
        &lt;/code&gt;
        &lt;description&gt;
          This transaction has been approved.
        &lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-capture-funds-authorized-through-another-channel">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;ROHNFQ&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186851&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E385C13A873EC470BB9AD7C2C9D02D13&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-capture-funds-authorized-through-another-channel" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;ROHNFQ&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186851&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E385C13A873EC470BB9AD7C2C9D02D13&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-capture-funds-authorized-through-another-channel" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-capture-funds-authorized-through-another-channel">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-php-capture-funds-authorized-through-another-channel">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="php" id="textarea-php-capture-funds-authorized-through-another-channel" name="textarea-php-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-capture-funds-authorized-through-another-channel">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-cs-capture-funds-authorized-through-another-channel">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="cs" id="textarea-cs-capture-funds-authorized-through-another-channel" name="textarea-cs-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-capture-funds-authorized-through-another-channel">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-java-capture-funds-authorized-through-another-channel">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="java" id="textarea-java-capture-funds-authorized-through-another-channel" name="textarea-java-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-capture-funds-authorized-through-another-channel">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-rb-capture-funds-authorized-through-another-channel">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="ruby" id="textarea-rb-capture-funds-authorized-through-another-channel" name="textarea-rb-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-capture-funds-authorized-through-another-channel">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-py-capture-funds-authorized-through-another-channel">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="python" id="textarea-py-capture-funds-authorized-through-another-channel" name="textarea-py-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-capture-funds-authorized-through-another-channel">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="capture-funds-authorized-through-another-channel">
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-js-capture-funds-authorized-through-another-channel">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="node" id="textarea-js-capture-funds-authorized-through-another-channel" name="textarea-js-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-capture-funds-authorized-through-another-channel">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="capture-funds-authorized-through-another-channel">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="capture-funds-authorized-through-another-channel">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="capture-funds-authorized-through-another-channel">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="capture-funds-authorized-through-another-channel">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="capture-funds-authorized-through-another-channel">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="capture-funds-authorized-through-another-channel">Node</button>
</div>
<div class="showCodeCont" id="showCode-capture-funds-authorized-through-another-channel">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-php-capture-funds-authorized-through-another-channel">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-php-capture-funds-authorized-through-another-channel" name="textarea-php-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-cs-capture-funds-authorized-through-another-channel">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-cs-capture-funds-authorized-through-another-channel" name="textarea-cs-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-java-capture-funds-authorized-through-another-channel">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-java-capture-funds-authorized-through-another-channel" name="textarea-java-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-rb-capture-funds-authorized-through-another-channel">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-rb-capture-funds-authorized-through-another-channel" name="textarea-rb-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-py-capture-funds-authorized-through-another-channel">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-py-capture-funds-authorized-through-another-channel" name="textarea-py-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-capture-funds-authorized-through-another-channel"></div>
<div id="showCode-js-capture-funds-authorized-through-another-channel">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-capture-funds-authorized-through-another-channel"></a>
</p>
<textarea class="sample-code" id="textarea-js-capture-funds-authorized-through-another-channel" name="textarea-js-capture-funds-authorized-through-another-channel" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-capture-funds-authorized-through-another-channel" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-capture-funds-authorized-through-another-channel">
<h4 class="panel-title">
<a data-parent="#accordion-capture-funds-authorized-through-another-channel">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-capture-funds-authorized-through-another-channel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-capture-funds-authorized-through-another-channel">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
 <th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>captureOnlyTransaction</code> to generate a transaction using an authorization code obtained from another channel.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>Contains payment information for this transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Applies to Card Not Present transactions only.<br /><br /><br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>Applies to Card Not Present transactions only.<br /><br /><br /><br />The customer’s credit card number.<br /><br /><br /><br />Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.<br /><br />
</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>Applies to Card Not Present transactions only.<br /><br /><br /><br />The customer’s credit card expiration date.<br /><br /><br /><br />Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td>Applies to Card Not Present transactions only.<br /><br /><br /><br />The customer’s card code.<br /><br /><br /><br />The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /><br /><br />This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /><br /><br />Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /><br /><br />For more information about PCI, please refer to our <a href="https://developer.authorize.net/training">Standards, Compliance and Security developer training video</a>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-capture-funds-authorized-through-another-channel">
<h4 class="panel-title">
<a data-parent="#accordion-capture-funds-authorized-through-another-channel">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-capture-funds-authorized-through-another-channel">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-refund-a-transaction">Refund a Transaction</h3>
<p>This transaction type is used to refund a customer for a transaction that was successfully settled through the payment gateway. Note that credit card information and bank account information are mutually exclusive, so you should not submit both.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="refund-a-transactionTryIt" href="#console-refund-a-transaction" data-toggle="tab">API Live Console</a>
</li>
 <li id="PHP">
<a id="refund-a-transactionphp" href="#php-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="refund-a-transactioncs" href="#cs-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="refund-a-transactionjava" href="#java-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="refund-a-transactionrb" href="#ruby-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="refund-a-transactionpy" href="#python-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="refund-a-transactionjs" href="#node-refund-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-refund-a-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="refund-a-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="refund-a-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-refund-a-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;transactionRequest&gt;
		&lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
		&lt;amount&gt;5.00&lt;/amount&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;0015&lt;/cardNumber&gt;
				&lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
		&lt;refTransId&gt;1234567890&lt;/refTransId&gt;
	&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-refund-a-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;transactionRequest&gt;
		&lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
		&lt;amount&gt;5.00&lt;/amount&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;0015&lt;/cardNumber&gt;
				&lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
		&lt;refTransId&gt;1234567890&lt;/refTransId&gt;
	&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-refund-a-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;amount&quot;: &quot;5.00&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;0015&quot;,
                    &quot;expirationDate&quot;: &quot;XXXX&quot;
                }
            },
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-refund-a-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;amount&quot;: &quot;5.00&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;0015&quot;,
                    &quot;expirationDate&quot;: &quot;XXXX&quot;
                }
            },
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-refund-a-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-refund-a-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-refund-a-transaction"></span>


<div class="errorDetails" id="detailsDiv-refund-a-transaction">
 <div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-refund-a-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;transactionResponse&gt;
		&lt;responseCode&gt;1&lt;/responseCode&gt;
		&lt;authCode /&gt;
		&lt;avsResultCode&gt;P&lt;/avsResultCode&gt;
		&lt;cvvResultCode /&gt;
		&lt;cavvResultCode /&gt;
		&lt;transId&gt;1234569999&lt;/transId&gt;
		&lt;refTransID&gt;1234567890&lt;/refTransID&gt;
		&lt;transHash&gt;362802181B7D3947E862E42FD0FD8219&lt;/transHash&gt;
		&lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
		&lt;accountType&gt;Mastercard&lt;/accountType&gt;
		&lt;messages&gt;
			&lt;message&gt;
				&lt;code&gt;1&lt;/code&gt;
				&lt;description&gt;This transaction has been approved.&lt;/description&gt;
			&lt;/message&gt;
		&lt;/messages&gt;
	&lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-refund-a-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;transactionResponse&gt;
		&lt;responseCode&gt;1&lt;/responseCode&gt;
		&lt;authCode /&gt;
		&lt;avsResultCode&gt;P&lt;/avsResultCode&gt;
		&lt;cvvResultCode /&gt;
		&lt;cavvResultCode /&gt;
		&lt;transId&gt;1234569999&lt;/transId&gt;
		&lt;refTransID&gt;1234567890&lt;/refTransID&gt;
		&lt;transHash&gt;362802181B7D3947E862E42FD0FD8219&lt;/transHash&gt;
		&lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
		&lt;accountType&gt;Mastercard&lt;/accountType&gt;
		&lt;messages&gt;
			&lt;message&gt;
				&lt;code&gt;1&lt;/code&gt;
				&lt;description&gt;This transaction has been approved.&lt;/description&gt;
			&lt;/message&gt;
		&lt;/messages&gt;
	&lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-refund-a-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234569999&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;D04B060066BA442AFF73A31B97A4693F&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-refund-a-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234569999&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;D04B060066BA442AFF73A31B97A4693F&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-refund-a-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-refund-a-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="refund-a-transaction">
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-refund-a-transaction"></div>
<div id="showCode-php-refund-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-refund-a-transaction"></a>
</p>
<textarea class="php" id="textarea-php-refund-a-transaction" name="textarea-php-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="cs-refund-a-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="refund-a-transaction">
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-refund-a-transaction"></div>
<div id="showCode-cs-refund-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-refund-a-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-refund-a-transaction" name="textarea-cs-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-refund-a-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="refund-a-transaction">
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-refund-a-transaction"></div>
<div id="showCode-java-refund-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-refund-a-transaction"></a>
</p>
<textarea class="java" id="textarea-java-refund-a-transaction" name="textarea-java-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-refund-a-transaction">
 <div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="refund-a-transaction">
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-refund-a-transaction"></div>
<div id="showCode-rb-refund-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-refund-a-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-refund-a-transaction" name="textarea-rb-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-refund-a-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="refund-a-transaction">
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-refund-a-transaction"></div>
<div id="showCode-py-refund-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-refund-a-transaction"></a>
</p>
<textarea class="python" id="textarea-py-refund-a-transaction" name="textarea-py-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-refund-a-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="refund-a-transaction">
</div>
 <div class="showCodeCont" id="showCode-refund-a-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-refund-a-transaction"></div>
<div id="showCode-js-refund-a-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-refund-a-transaction"></a>
</p>
<textarea class="node" id="textarea-js-refund-a-transaction" name="textarea-js-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-refund-a-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="refund-a-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="refund-a-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="refund-a-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="refund-a-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="refund-a-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="refund-a-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-refund-a-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-refund-a-transaction"></div>
<div id="showCode-php-refund-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-refund-a-transaction" name="textarea-php-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-refund-a-transaction"></div>
<div id="showCode-cs-refund-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-refund-a-transaction" name="textarea-cs-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-refund-a-transaction"></div>
<div id="showCode-java-refund-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-refund-a-transaction" name="textarea-java-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-refund-a-transaction"></div>
<div id="showCode-rb-refund-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-refund-a-transaction" name="textarea-rb-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-refund-a-transaction"></div>
<div id="showCode-py-refund-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-refund-a-transaction" name="textarea-py-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-refund-a-transaction"></div>
<div id="showCode-js-refund-a-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-refund-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-refund-a-transaction" name="textarea-js-refund-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-refund-a-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-refund-a-transaction">
 <h4 class="panel-title">
<a data-parent="#accordion-refund-a-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-refund-a-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-refund-a-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>refundTransaction</code> to initiate a refund against a previously settled transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point..<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
 <td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>The following elements belong to the <code>creditCard</code> element; include them only for credit card transactions.<br /><br />
When issuing a credit card refund, the request must include either a full card number and expiration date, or the original transaction ID (<code>transId</code>) and last 4 digits of the card number. If you don't have the last 4 digits, you can use <code>getTransactionDetails</code> to retrieve the payment information needed to issue a refund.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
The customer’s credit card number.<br /><br />
Only the last four digits are required for credit card refunds.</td>
<td><div>Numeric string, 4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
The card's expiration date, masked for refunds.<br /><br />
</td>
<td><div>String, four characters.<br /><br />For refunds, use <code>XXXX</code> instead of the card expiration date.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br /><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
 The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, <code>CCD</code>, <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>checkNumber</td>
 <td><strong>Conditional.</strong><br /><br />The number of the check.<br /><br />
Do not send <code>checkNumber</code> unless <code>echeckType</code> is either <code>ARC</code> or <code>BOC</code>. </td>
<td><div>Numeric string, up to 15 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td><strong>Conditional.</strong><br /><br />Transaction ID of the original request. <br /><br />
Required for refunds submitted without Expanded Credit-Return Capabilities (ECC). For ECC transactions, <code>refTransId</code> is not required. </td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
 <td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
 <td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-refund-a-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-refund-a-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-refund-a-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
 </tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
 <tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-void-a-transaction">Void a Transaction</h3>
<p>This transaction type can be used to cancel either an original transaction that is not yet settled or an entire order composed of more than one transaction. A Void prevents the transaction or the order from being sent for settlement. A Void can be submitted against any other transaction type</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="void-a-transactionTryIt" href="#console-void-a-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="void-a-transactionphp" href="#php-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="void-a-transactioncs" href="#cs-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="void-a-transactionjava" href="#java-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="void-a-transactionrb" href="#ruby-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="void-a-transactionpy" href="#python-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="void-a-transactionjs" href="#node-void-a-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-void-a-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="void-a-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="void-a-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-void-a-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;voidTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;1234567890&lt;/refTransId&gt;
   &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-void-a-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;voidTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;1234567890&lt;/refTransId&gt;
   &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-void-a-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;voidTransaction&quot;,
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-void-a-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;voidTransaction&quot;,
            &quot;refTransId&quot;: &quot;1234567890&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-void-a-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-void-a-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
 <div>
<span id="spnStatusCode-void-a-transaction"></span>


<div class="errorDetails" id="detailsDiv-void-a-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-void-a-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;1234567890&lt;/transId&gt;
    &lt;refTransID&gt;1234567890&lt;/refTransID&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-void-a-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;1234567890&lt;/transId&gt;
    &lt;refTransID&gt;1234567890&lt;/refTransID&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-void-a-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234567890&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;D3A855F0934EB404DE3B13508D0E3826&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-void-a-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;1234567890&quot;,
        &quot;refTransID&quot;: &quot;1234567890&quot;,
        &quot;transHash&quot;: &quot;D3A855F0934EB404DE3B13508D0E3826&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-void-a-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-void-a-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-void-a-transaction"></div>
<div id="showCode-php-void-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-void-a-transaction"></a>
</p>
<textarea class="php" id="textarea-php-void-a-transaction" name="textarea-php-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-void-a-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-void-a-transaction"></div>
<div id="showCode-cs-void-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-void-a-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-void-a-transaction" name="textarea-cs-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="java-void-a-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-void-a-transaction"></div>
<div id="showCode-java-void-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-void-a-transaction"></a>
</p>
<textarea class="java" id="textarea-java-void-a-transaction" name="textarea-java-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-void-a-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-void-a-transaction"></div>
<div id="showCode-rb-void-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-void-a-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-void-a-transaction" name="textarea-rb-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-void-a-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-void-a-transaction"></div>
<div id="showCode-py-void-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-void-a-transaction"></a>
</p>
<textarea class="python" id="textarea-py-void-a-transaction" name="textarea-py-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-void-a-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="void-a-transaction">
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-void-a-transaction"></div>
<div id="showCode-js-void-a-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-void-a-transaction"></a>
</p>
<textarea class="node" id="textarea-js-void-a-transaction" name="textarea-js-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-void-a-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="void-a-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="void-a-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="void-a-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="void-a-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="void-a-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="void-a-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-void-a-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-void-a-transaction"></div>
<div id="showCode-php-void-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-void-a-transaction" name="textarea-php-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-void-a-transaction"></div>
<div id="showCode-cs-void-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-void-a-transaction" name="textarea-cs-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
 <div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-void-a-transaction"></div>
<div id="showCode-java-void-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-void-a-transaction" name="textarea-java-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-void-a-transaction"></div>
<div id="showCode-rb-void-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-void-a-transaction" name="textarea-rb-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-void-a-transaction"></div>
<div id="showCode-py-void-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-void-a-transaction" name="textarea-py-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-void-a-transaction"></div>
<div id="showCode-js-void-a-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-void-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-void-a-transaction" name="textarea-js-void-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-void-a-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-void-a-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-void-a-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-void-a-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-void-a-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>voidTransaction</code> to void an unsettled transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
 <td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td><strong>Required.</strong><br />
Transaction ID of the unsettled transaction you wish to void.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-void-a-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-void-a-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-void-a-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-update-split-tender-group">Update Split Tender Group</h3>
<p>Use this function to update the status of an existing order that contains multiple transactions with the same <code>splitTenderId</code> value.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="update-split-tender-groupTryIt" href="#console-update-split-tender-group" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="update-split-tender-groupphp" href="#php-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="update-split-tender-groupcs" href="#cs-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="update-split-tender-groupjava" href="#java-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="update-split-tender-grouprb" href="#ruby-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="update-split-tender-grouppy" href="#python-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="update-split-tender-groupjs" href="#node-update-split-tender-group" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-update-split-tender-group">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="update-split-tender-group">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="update-split-tender-group">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-update-split-tender-group" spellcheck="false" class="XML XMLRequest">&lt;updateSplitTenderGroupRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;splitTenderId&gt;123456&lt;/splitTenderId&gt;
  &lt;splitTenderStatus&gt;voided&lt;/splitTenderStatus&gt; 
&lt;/updateSplitTenderGroupRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-update-split-tender-group" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;updateSplitTenderGroupRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;splitTenderId&gt;123456&lt;/splitTenderId&gt;
  &lt;splitTenderStatus&gt;voided&lt;/splitTenderStatus&gt; 
&lt;/updateSplitTenderGroupRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-update-split-tender-group" spellcheck="false" class="JSON JSONRequest">{
    &quot;updateSplitTenderGroupRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;splitTenderId&quot;: &quot;123456&quot;,
        &quot;splitTenderStatus&quot;: &quot;voided&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-update-split-tender-group" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;updateSplitTenderGroupRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;splitTenderId&quot;: &quot;123456&quot;,
        &quot;splitTenderStatus&quot;: &quot;voided&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-update-split-tender-group" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-update-split-tender-group" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-update-split-tender-group"></span>


<div class="errorDetails" id="detailsDiv-update-split-tender-group">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-update-split-tender-group">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateSplitTenderGroupResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateSplitTenderGroupResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-update-split-tender-group" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateSplitTenderGroupResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateSplitTenderGroupResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-update-split-tender-group">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The specified SplitTenderID is invalid.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-update-split-tender-group" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The specified SplitTenderID is invalid.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-update-split-tender-group" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-update-split-tender-group">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-update-split-tender-group"></div>
<div id="showCode-php-update-split-tender-group">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-split-tender-group"></a>
</p>
<textarea class="php" id="textarea-php-update-split-tender-group" name="textarea-php-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-update-split-tender-group">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-update-split-tender-group"></div>
<div id="showCode-cs-update-split-tender-group">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-split-tender-group"></a>
</p>
<textarea class="cs" id="textarea-cs-update-split-tender-group" name="textarea-cs-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-update-split-tender-group">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-update-split-tender-group"></div>
<div id="showCode-java-update-split-tender-group">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-split-tender-group"></a>
</p>
<textarea class="java" id="textarea-java-update-split-tender-group" name="textarea-java-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="ruby-update-split-tender-group">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-update-split-tender-group"></div>
<div id="showCode-rb-update-split-tender-group">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-split-tender-group"></a>
</p>
<textarea class="ruby" id="textarea-rb-update-split-tender-group" name="textarea-rb-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-update-split-tender-group">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-update-split-tender-group"></div>
<div id="showCode-py-update-split-tender-group">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-split-tender-group"></a>
</p>
<textarea class="python" id="textarea-py-update-split-tender-group" name="textarea-py-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="node-update-split-tender-group">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="update-split-tender-group">
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-update-split-tender-group"></div>
<div id="showCode-js-update-split-tender-group">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-split-tender-group"></a>
</p>
<textarea class="node" id="textarea-js-update-split-tender-group" name="textarea-js-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-update-split-tender-group">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="update-split-tender-group">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="update-split-tender-group">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="update-split-tender-group">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="update-split-tender-group">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="update-split-tender-group">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="update-split-tender-group">Node</button>
</div>
<div class="showCodeCont" id="showCode-update-split-tender-group">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-update-split-tender-group"></div>
 <div id="showCode-php-update-split-tender-group">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-php-update-split-tender-group" name="textarea-php-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-update-split-tender-group"></div>
<div id="showCode-cs-update-split-tender-group">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-cs-update-split-tender-group" name="textarea-cs-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-update-split-tender-group"></div>
<div id="showCode-java-update-split-tender-group">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-java-update-split-tender-group" name="textarea-java-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
 <div class="sampleWarningCont" id="warning-rb-update-split-tender-group"></div>
<div id="showCode-rb-update-split-tender-group">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-rb-update-split-tender-group" name="textarea-rb-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-update-split-tender-group"></div>
<div id="showCode-py-update-split-tender-group">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-py-update-split-tender-group" name="textarea-py-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-update-split-tender-group"></div>
<div id="showCode-js-update-split-tender-group">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-split-tender-group"></a>
</p>
<textarea class="sample-code" id="textarea-js-update-split-tender-group" name="textarea-js-update-split-tender-group" cols="80" rows="6"></textarea>
</div>
</div>
 </div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-update-split-tender-group" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-update-split-tender-group">
<h4 class="panel-title">
<a data-parent="#accordion-update-split-tender-group">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-update-split-tender-group" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-update-split-tender-group">
<div class="panel-body">
<p><em>updateSplitTenderGroupRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
 Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>splitTenderId</td>
<td><strong>Required.</strong><br />
Payment gateway-assigned number associated with the order.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>splitTenderStatus</td>
<td>Indicates the status of all transactions associated with the order.<br /><br />
Use <code>voided</code> to void the entire order; use <code>completed</code> to indicate there are no further transactions in this order.</td>
<td><div>String.<br /><br />Either <code>voided</code> or <code>completed</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
 <div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-update-split-tender-group">
<h4 class="panel-title">
<a data-parent="#accordion-update-split-tender-group">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-update-split-tender-group">
<div class="panel-body">
<p><em>updateSplitTenderGroupResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-debit-a-bank-account">Debit a Bank Account</h3>
<p>Use this method to process an ACH debit transaction using bank account details.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="debit-a-bank-accountTryIt" href="#console-debit-a-bank-account" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="debit-a-bank-accountphp" href="#php-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="debit-a-bank-accountcs" href="#cs-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="debit-a-bank-accountjava" href="#java-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="debit-a-bank-accountrb" href="#ruby-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="debit-a-bank-accountpy" href="#python-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="debit-a-bank-accountjs" href="#node-debit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-debit-a-bank-account">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="debit-a-bank-account">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="debit-a-bank-account">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-debit-a-bank-account" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;bankAccount&gt;
        &lt;accountType&gt;checking&lt;/accountType&gt;
        &lt;routingNumber&gt;121042882&lt;/routingNumber&gt;
        &lt;accountNumber&gt;123456789&lt;/accountNumber&gt;
        &lt;nameOnAccount&gt;John Doe&lt;/nameOnAccount&gt;
      &lt;/bankAccount&gt;
    &lt;/payment&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-debit-a-bank-account" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;bankAccount&gt;
        &lt;accountType&gt;checking&lt;/accountType&gt;
        &lt;routingNumber&gt;121042882&lt;/routingNumber&gt;
        &lt;accountNumber&gt;123456789&lt;/accountNumber&gt;
        &lt;nameOnAccount&gt;John Doe&lt;/nameOnAccount&gt;
      &lt;/bankAccount&gt;
    &lt;/payment&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-debit-a-bank-account" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;bankAccount&quot;: {
                    &quot;accountType&quot;: &quot;checking&quot;,
                    &quot;routingNumber&quot;: &quot;121042882&quot;,
                    &quot;accountNumber&quot;: &quot;123456789&quot;,
                    &quot;nameOnAccount&quot;: &quot;John Doe&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-debit-a-bank-account" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;bankAccount&quot;: {
                    &quot;accountType&quot;: &quot;checking&quot;,
                    &quot;routingNumber&quot;: &quot;121042882&quot;,
                    &quot;accountNumber&quot;: &quot;123456789&quot;,
                    &quot;nameOnAccount&quot;: &quot;John Doe&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-debit-a-bank-account" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-debit-a-bank-account" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-debit-a-bank-account"></span>


<div class="errorDetails" id="detailsDiv-debit-a-bank-account">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-debit-a-bank-account">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse&gt;
  &lt;refId&gt;
    123456
  &lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;
      1
    &lt;/responseCode&gt;
    &lt;authCode /&gt;
    &lt;avsResultCode&gt;
      P
    &lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;
      2214627492
    &lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;
      7A6DCD2645DF873C035DCE4832C08036
    &lt;/transHash&gt;
    &lt;accountNumber&gt;
      XXXXX6789
    &lt;/accountNumber&gt;
    &lt;accountType&gt;
      eCheck
    &lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;
          1
        &lt;/code&gt;
        &lt;description&gt;
          This transaction has been approved.
        &lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-debit-a-bank-account" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse&gt;
  &lt;refId&gt;
    123456
  &lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;
      1
    &lt;/responseCode&gt;
    &lt;authCode /&gt;
    &lt;avsResultCode&gt;
      P
    &lt;/avsResultCode&gt;
    &lt;cvvResultCode /&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;
      2214627492
    &lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;
      7A6DCD2645DF873C035DCE4832C08036
    &lt;/transHash&gt;
    &lt;accountNumber&gt;
      XXXXX6789
    &lt;/accountNumber&gt;
    &lt;accountType&gt;
      eCheck
    &lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;
          1
        &lt;/code&gt;
        &lt;description&gt;
          This transaction has been approved.
        &lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-debit-a-bank-account">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186917&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;803D51FDF65043182BF264B8BAA8B2DF&quot;,
        &quot;accountNumber&quot;: &quot;XXXXX6789&quot;,
        &quot;accountType&quot;: &quot;eCheck&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-debit-a-bank-account" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186917&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;803D51FDF65043182BF264B8BAA8B2DF&quot;,
        &quot;accountNumber&quot;: &quot;XXXXX6789&quot;,
        &quot;accountType&quot;: &quot;eCheck&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-debit-a-bank-account" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-debit-a-bank-account">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-debit-a-bank-account"></div>
<div id="showCode-php-debit-a-bank-account">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-debit-a-bank-account"></a>
</p>
<textarea class="php" id="textarea-php-debit-a-bank-account" name="textarea-php-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-debit-a-bank-account">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-debit-a-bank-account"></div>
<div id="showCode-cs-debit-a-bank-account">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-debit-a-bank-account"></a>
</p>
<textarea class="cs" id="textarea-cs-debit-a-bank-account" name="textarea-cs-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-debit-a-bank-account">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-debit-a-bank-account"></div>
<div id="showCode-java-debit-a-bank-account">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-debit-a-bank-account"></a>
</p>
<textarea class="java" id="textarea-java-debit-a-bank-account" name="textarea-java-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-debit-a-bank-account">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-debit-a-bank-account"></div>
<div id="showCode-rb-debit-a-bank-account">
<p>
 This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-debit-a-bank-account"></a>
</p>
<textarea class="ruby" id="textarea-rb-debit-a-bank-account" name="textarea-rb-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-debit-a-bank-account">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-debit-a-bank-account"></div>
<div id="showCode-py-debit-a-bank-account">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-debit-a-bank-account"></a>
</p>
<textarea class="python" id="textarea-py-debit-a-bank-account" name="textarea-py-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-debit-a-bank-account">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="debit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-debit-a-bank-account"></div>
<div id="showCode-js-debit-a-bank-account">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-debit-a-bank-account"></a>
</p>
<textarea class="node" id="textarea-js-debit-a-bank-account" name="textarea-js-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-debit-a-bank-account">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="debit-a-bank-account">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="debit-a-bank-account">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="debit-a-bank-account">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="debit-a-bank-account">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="debit-a-bank-account">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="debit-a-bank-account">Node</button>
</div>
<div class="showCodeCont" id="showCode-debit-a-bank-account">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-debit-a-bank-account"></div>
<div id="showCode-php-debit-a-bank-account">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-php-debit-a-bank-account" name="textarea-php-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-debit-a-bank-account"></div>
<div id="showCode-cs-debit-a-bank-account">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-cs-debit-a-bank-account" name="textarea-cs-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-debit-a-bank-account"></div>
<div id="showCode-java-debit-a-bank-account">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-java-debit-a-bank-account" name="textarea-java-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-debit-a-bank-account"></div>
<div id="showCode-rb-debit-a-bank-account">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-rb-debit-a-bank-account" name="textarea-rb-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-debit-a-bank-account"></div>
<div id="showCode-py-debit-a-bank-account">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-py-debit-a-bank-account" name="textarea-py-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
 </div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-debit-a-bank-account"></div>
<div id="showCode-js-debit-a-bank-account">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-debit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-js-debit-a-bank-account" name="textarea-js-debit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-debit-a-bank-account" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-debit-a-bank-account">
<h4 class="panel-title">
<a data-parent="#accordion-debit-a-bank-account">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-debit-a-bank-account" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-debit-a-bank-account">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to submit the eCheck transaction for clearance.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br /><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Use <code>ARC</code> or <code>BOC</code> when using a MIRC reader to obtain <code>routingNumber</code>, <code>accountNumber</code>, and <code>checkNumber.</code></td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, <code>CCD</code>, <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>checkNumber</td>
<td><strong>Conditional.</strong><br /><br />The number of the check.<br /><br />
Do not send <code>checkNumber</code> unless <code>echeckType</code> is either <code>ARC</code> or <code>BOC</code>.</td>
<td><div>Numeric string, up to 15 digits.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>profile</td>
<td>The following field enables you to create a customer profile from the data sent to make the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>createProfile</td>
<td>Indicates whether to create a customer profile.<br /><br />
If set to true, a customer profile and payment profile will be generated from the customer and payment data.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
 <td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-debit-a-bank-account">
<h4 class="panel-title">
<a data-parent="#accordion-debit-a-bank-account">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-debit-a-bank-account">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response fields.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />For this response, defaults to <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-credit-a-bank-account">Credit a Bank Account</h3>
<p>This transaction type is used to refund a customer using a bank account credit transaction.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="credit-a-bank-accountTryIt" href="#console-credit-a-bank-account" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="credit-a-bank-accountphp" href="#php-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="credit-a-bank-accountcs" href="#cs-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="credit-a-bank-accountjava" href="#java-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="credit-a-bank-accountrb" href="#ruby-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="credit-a-bank-accountpy" href="#python-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="credit-a-bank-accountjs" href="#node-credit-a-bank-account" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-credit-a-bank-account">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="credit-a-bank-account">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="credit-a-bank-account">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-credit-a-bank-account" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;bankAccount&gt;
        &lt;accountType&gt;checking&lt;/accountType&gt;
        &lt;routingNumber&gt;121042882&lt;/routingNumber&gt;
        &lt;accountNumber&gt;123456789&lt;/accountNumber&gt;
        &lt;nameOnAccount&gt;John Doe&lt;/nameOnAccount&gt;
      &lt;/bankAccount&gt;
    &lt;/payment&gt;
    &lt;refTransId&gt;2148889729&lt;/refTransId&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-credit-a-bank-account" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;bankAccount&gt;
        &lt;accountType&gt;checking&lt;/accountType&gt;
        &lt;routingNumber&gt;121042882&lt;/routingNumber&gt;
        &lt;accountNumber&gt;123456789&lt;/accountNumber&gt;
        &lt;nameOnAccount&gt;John Doe&lt;/nameOnAccount&gt;
      &lt;/bankAccount&gt;
    &lt;/payment&gt;
    &lt;refTransId&gt;2148889729&lt;/refTransId&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-credit-a-bank-account" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;bankAccount&quot;: {
                    &quot;accountType&quot;: &quot;checking&quot;,
                    &quot;routingNumber&quot;: &quot;121042882&quot;,
                    &quot;accountNumber&quot;: &quot;123456789&quot;,
                    &quot;nameOnAccount&quot;: &quot;John Doe&quot;
                }
            },
            &quot;refTransId&quot;: &quot;2148889729&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-credit-a-bank-account" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;bankAccount&quot;: {
                    &quot;accountType&quot;: &quot;checking&quot;,
                    &quot;routingNumber&quot;: &quot;121042882&quot;,
                    &quot;accountNumber&quot;: &quot;123456789&quot;,
                    &quot;nameOnAccount&quot;: &quot;John Doe&quot;
                }
            },
            &quot;refTransId&quot;: &quot;2148889729&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-credit-a-bank-account" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-credit-a-bank-account" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-credit-a-bank-account"></span>


<div class="errorDetails" id="detailsDiv-credit-a-bank-account">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-credit-a-bank-account">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX5678&lt;/accountNumber&gt;
    &lt;accountType&gt;eCheck&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-credit-a-bank-account" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX5678&lt;/accountNumber&gt;
    &lt;accountType&gt;eCheck&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-credit-a-bank-account">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;2149181544&quot;,
        &quot;transHash&quot;: &quot;D6C9036F443BADE785D57DA2B44CD190&quot;,
        &quot;accountNumber&quot;: &quot;XXXX5678&quot;,
        &quot;accountType&quot;: &quot;eCheck&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-credit-a-bank-account" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;2149181544&quot;,
        &quot;transHash&quot;: &quot;D6C9036F443BADE785D57DA2B44CD190&quot;,
        &quot;accountNumber&quot;: &quot;XXXX5678&quot;,
        &quot;accountType&quot;: &quot;eCheck&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-credit-a-bank-account" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-credit-a-bank-account">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-credit-a-bank-account"></div>
<div id="showCode-php-credit-a-bank-account">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-credit-a-bank-account"></a>
</p>
<textarea class="php" id="textarea-php-credit-a-bank-account" name="textarea-php-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-credit-a-bank-account">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-credit-a-bank-account"></div>
<div id="showCode-cs-credit-a-bank-account">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-credit-a-bank-account"></a>
</p>
<textarea class="cs" id="textarea-cs-credit-a-bank-account" name="textarea-cs-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-credit-a-bank-account">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-credit-a-bank-account"></div>
<div id="showCode-java-credit-a-bank-account">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-credit-a-bank-account"></a>
</p>
<textarea class="java" id="textarea-java-credit-a-bank-account" name="textarea-java-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-credit-a-bank-account">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-credit-a-bank-account"></div>
<div id="showCode-rb-credit-a-bank-account">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-credit-a-bank-account"></a>
</p>
<textarea class="ruby" id="textarea-rb-credit-a-bank-account" name="textarea-rb-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-credit-a-bank-account">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-credit-a-bank-account"></div>
<div id="showCode-py-credit-a-bank-account">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-credit-a-bank-account"></a>
</p>
<textarea class="python" id="textarea-py-credit-a-bank-account" name="textarea-py-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-credit-a-bank-account">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="credit-a-bank-account">
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-credit-a-bank-account"></div>
<div id="showCode-js-credit-a-bank-account">
<p>
 This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-credit-a-bank-account"></a>
</p>
<textarea class="node" id="textarea-js-credit-a-bank-account" name="textarea-js-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-credit-a-bank-account">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="credit-a-bank-account">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="credit-a-bank-account">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="credit-a-bank-account">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="credit-a-bank-account">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="credit-a-bank-account">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="credit-a-bank-account">Node</button>
</div>
<div class="showCodeCont" id="showCode-credit-a-bank-account">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-credit-a-bank-account"></div>
<div id="showCode-php-credit-a-bank-account">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-php-credit-a-bank-account" name="textarea-php-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-credit-a-bank-account"></div>
<div id="showCode-cs-credit-a-bank-account">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-cs-credit-a-bank-account" name="textarea-cs-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-credit-a-bank-account"></div>
<div id="showCode-java-credit-a-bank-account">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-java-credit-a-bank-account" name="textarea-java-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-credit-a-bank-account"></div>
<div id="showCode-rb-credit-a-bank-account">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-rb-credit-a-bank-account" name="textarea-rb-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
 <div class="sampleWarningCont" id="warning-py-credit-a-bank-account"></div>
<div id="showCode-py-credit-a-bank-account">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-py-credit-a-bank-account" name="textarea-py-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-credit-a-bank-account"></div>
<div id="showCode-js-credit-a-bank-account">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-credit-a-bank-account"></a>
</p>
<textarea class="sample-code" id="textarea-js-credit-a-bank-account" name="textarea-js-credit-a-bank-account" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-credit-a-bank-account" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-credit-a-bank-account">
<h4 class="panel-title">
<a data-parent="#accordion-credit-a-bank-account">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-credit-a-bank-account" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-credit-a-bank-account">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>refundTransaction</code> to issue a refund against a previously settled eCheck transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br /><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, <code>CCD</code>, <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>checkNumber</td>
<td><strong>Conditional.</strong><br /><br />The number of the check.<br /><br />
Do not send <code>checkNumber</code> unless <code>echeckType</code> is either <code>ARC</code> or <code>BOC</code>. </td>
<td><div>Numeric string, up to 15 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>refTransId</td>
<td><strong>Required.</strong><br />
Transaction ID of the original settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-credit-a-bank-account">
<h4 class="panel-title">
<a data-parent="#accordion-credit-a-bank-account">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-credit-a-bank-account">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />For this API response, defaults to <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
 <td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-charge-a-customer-profile">Charge a Customer Profile</h3>
<p>Use this method to authorize and capture a payment using a stored customer payment profile.
<br /> NOTE: You can use Customer Profiles with <code>createTransactionRequest</code> calls by using the profile field and its children as payment information.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="charge-a-customer-profileTryIt" href="#console-charge-a-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="charge-a-customer-profilephp" href="#php-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="charge-a-customer-profilecs" href="#cs-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="charge-a-customer-profilejava" href="#java-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="charge-a-customer-profilerb" href="#ruby-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="charge-a-customer-profilepy" href="#python-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="charge-a-customer-profilejs" href="#node-charge-a-customer-profile" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-charge-a-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="charge-a-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="charge-a-customer-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-charge-a-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;profile&gt;
      &lt;customerProfileId&gt;27388924&lt;/customerProfileId&gt;
      &lt;paymentProfile&gt;
        &lt;paymentProfileId&gt;25000332&lt;/paymentProfileId&gt;
      &lt;/paymentProfile&gt;
    &lt;/profile&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-charge-a-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;profile&gt;
      &lt;customerProfileId&gt;27388924&lt;/customerProfileId&gt;
      &lt;paymentProfile&gt;
        &lt;paymentProfileId&gt;25000332&lt;/paymentProfileId&gt;
      &lt;/paymentProfile&gt;
    &lt;/profile&gt;
    &lt;order&gt;
      &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
      &lt;description&gt;Product Description&lt;/description&gt;
    &lt;/order&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-charge-a-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;45&quot;,
              &quot;profile&quot;: {
    		  	&quot;customerProfileId&quot;: &quot;27388924&quot;,
    		  	&quot;paymentProfile&quot;: { &quot;paymentProfileId&quot;: &quot;25000332&quot; }
  			},
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-charge-a-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;45&quot;,
              &quot;profile&quot;: {
    		  	&quot;customerProfileId&quot;: &quot;27388924&quot;,
    		  	&quot;paymentProfile&quot;: { &quot;paymentProfileId&quot;: &quot;25000332&quot; }
  			},
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-charge-a-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-charge-a-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
 <span id="spnStatusCode-charge-a-customer-profile"></span>


<div class="errorDetails" id="detailsDiv-charge-a-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-charge-a-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-charge-a-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-charge-a-customer-profile">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;C1E3I6&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;9&quot;,
        &quot;transId&quot;: &quot;2149186775&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;C85B15CED28462974F1114DB07A16C39&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-charge-a-customer-profile" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;C1E3I6&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;9&quot;,
        &quot;transId&quot;: &quot;2149186775&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;C85B15CED28462974F1114DB07A16C39&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-charge-a-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="php-charge-a-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-charge-a-customer-profile"></div>
<div id="showCode-php-charge-a-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-charge-a-customer-profile" name="textarea-php-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-charge-a-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-charge-a-customer-profile"></div>
<div id="showCode-cs-charge-a-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-customer-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-charge-a-customer-profile" name="textarea-cs-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
 <div class="tab-pane fade" id="java-charge-a-customer-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-charge-a-customer-profile"></div>
<div id="showCode-java-charge-a-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-charge-a-customer-profile" name="textarea-java-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-charge-a-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-charge-a-customer-profile"></div>
<div id="showCode-rb-charge-a-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-charge-a-customer-profile" name="textarea-rb-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-charge-a-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-charge-a-customer-profile"></div>
<div id="showCode-py-charge-a-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-charge-a-customer-profile" name="textarea-py-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-charge-a-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="charge-a-customer-profile">
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-charge-a-customer-profile"></div>
<div id="showCode-js-charge-a-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-charge-a-customer-profile" name="textarea-js-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-charge-a-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="charge-a-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="charge-a-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="charge-a-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="charge-a-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="charge-a-customer-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="charge-a-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-charge-a-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-charge-a-customer-profile"></div>
<div id="showCode-php-charge-a-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-customer-profile"></a>
</p>

<textarea class="sample-code" id="textarea-php-charge-a-customer-profile" name="textarea-php-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-charge-a-customer-profile"></div>
<div id="showCode-cs-charge-a-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-charge-a-customer-profile" name="textarea-cs-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-charge-a-customer-profile"></div>
<div id="showCode-java-charge-a-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-charge-a-customer-profile" name="textarea-java-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-charge-a-customer-profile"></div>
<div id="showCode-rb-charge-a-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-charge-a-customer-profile" name="textarea-rb-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-charge-a-customer-profile"></div>
<div id="showCode-py-charge-a-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-charge-a-customer-profile" name="textarea-py-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-charge-a-customer-profile"></div>
<div id="showCode-js-charge-a-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-charge-a-customer-profile" name="textarea-js-charge-a-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-charge-a-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-charge-a-customer-profile">
<h4 class="panel-title">
 <a data-parent="#accordion-charge-a-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-charge-a-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-charge-a-customer-profile">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
 <td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
 <td>The following fields enable you to charge a transaction using payment or shipping profiles.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td><strong>Conditional.</strong><br /><br />The ID of the customer profile.<br /><br />
Required if you are using a customer profile as the source for payment or shipping information.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>paymentProfile</td>
<td>Contains payment profile information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>paymentProfileId</td>
<td>The customer payment profile ID.<br /><br />
Designates the payment profile to use for payment and billing information. Required if the <code>paymentProfile</code> element exists.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td>Applies to Card Not Present transactions only.<br /><br />The customer’s card code, which may be collected by the merchant for validation. The card code is not stored with the customer profile.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>shippingProfileId</td>
<td>The customer shipping profile ID.<br /><br />
<strong>Conditional.</strong><br /><br />This field is mutually exclusive with the <code>shipTo</code> element. Use one or the other.</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
 </td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-charge-a-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-charge-a-customer-profile">
Response Field Description
 </a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-charge-a-customer-profile">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
 <td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>profileResponse</td>
<td>Contains result of attempt to create a customer payment profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>The ID of the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileIdList</td>
<td>Contains the Customer Payment Profile ID element<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>numericString</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
This is only included if the original transaction included a billing address.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerShippingProfileIdList</td>
<td>Contains the Customer Shipping Profile ID element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>numericString</td>
<td>Payment gateway assigned ID associated with the customer shipping profile.<br /><br />
This is only included if the original transaction included a shipping address.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-charge-a-tokenized-credit-card">Charge a Tokenized Credit Card</h3>
<p>Use this method to authorize and capture a payment using a tokenized credit card number issued by a certified token provider. The payment processor must support payment network tokenization, and you must pass in your request the token, the expiration date, and the cryptogram receied from the token provider.<br /><br />For Chase Pay tokenization, see <a href="#payment-transactions-create-a-chase-pay-transaction">Create a Chase Pay Transaction</a>.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="charge-a-tokenized-credit-cardTryIt" href="#console-charge-a-tokenized-credit-card" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="charge-a-tokenized-credit-cardphp" href="#php-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="charge-a-tokenized-credit-cardcs" href="#cs-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="charge-a-tokenized-credit-cardjava" href="#java-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="charge-a-tokenized-credit-cardrb" href="#ruby-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
 </li>
<li id="PYTHON">
<a id="charge-a-tokenized-credit-cardpy" href="#python-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="charge-a-tokenized-credit-cardjs" href="#node-charge-a-tokenized-credit-card" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-charge-a-tokenized-credit-card">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="charge-a-tokenized-credit-card">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="charge-a-tokenized-credit-card">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-charge-a-tokenized-credit-card" spellcheck="false" class="XML XMLRequest">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;PtteCom1&lt;/name&gt;
        &lt;transactionKey&gt;123abc&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;transactionRequest&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;amount&gt;54&lt;/amount&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
                &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
                &lt;cryptogram&gt;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&lt;/cryptogram&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-charge-a-tokenized-credit-card" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;PtteCom1&lt;/name&gt;
        &lt;transactionKey&gt;123abc&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;transactionRequest&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;amount&gt;54&lt;/amount&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
                &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
                &lt;cryptogram&gt;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&lt;/cryptogram&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-charge-a-tokenized-credit-card" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;isPaymentToken&quot;: true,
                    &quot;cryptogram&quot;: &quot;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;transactionSettings&quot;: {
                &quot;setting&quot;: {
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-charge-a-tokenized-credit-card" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;5424000000000015&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;isPaymentToken&quot;: true,
                    &quot;cryptogram&quot;: &quot;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;customer&quot;: {
                &quot;id&quot;: &quot;99999456654&quot;
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;transactionSettings&quot;: {
                &quot;setting&quot;: {
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-charge-a-tokenized-credit-card" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-charge-a-tokenized-credit-card" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-charge-a-tokenized-credit-card"></span>


<div class="errorDetails" id="detailsDiv-charge-a-tokenized-credit-card">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-charge-a-tokenized-credit-card">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-charge-a-tokenized-credit-card" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-charge-a-tokenized-credit-card">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;C1E3I6&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;9&quot;,
        &quot;transId&quot;: &quot;2149186775&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;C85B15CED28462974F1114DB07A16C39&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-charge-a-tokenized-credit-card" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;C1E3I6&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;S&quot;,
        &quot;cavvResultCode&quot;: &quot;9&quot;,
        &quot;transId&quot;: &quot;2149186775&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;C85B15CED28462974F1114DB07A16C39&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-charge-a-tokenized-credit-card" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-charge-a-tokenized-credit-card">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-charge-a-tokenized-credit-card"></div>
<div id="showCode-php-charge-a-tokenized-credit-card">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="php" id="textarea-php-charge-a-tokenized-credit-card" name="textarea-php-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-charge-a-tokenized-credit-card">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-charge-a-tokenized-credit-card"></div>
<div id="showCode-cs-charge-a-tokenized-credit-card">
<p>
 This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="cs" id="textarea-cs-charge-a-tokenized-credit-card" name="textarea-cs-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-charge-a-tokenized-credit-card">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-charge-a-tokenized-credit-card"></div>
<div id="showCode-java-charge-a-tokenized-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="java" id="textarea-java-charge-a-tokenized-credit-card" name="textarea-java-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-charge-a-tokenized-credit-card">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-charge-a-tokenized-credit-card"></div>
<div id="showCode-rb-charge-a-tokenized-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="ruby" id="textarea-rb-charge-a-tokenized-credit-card" name="textarea-rb-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-charge-a-tokenized-credit-card">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-charge-a-tokenized-credit-card"></div>
<div id="showCode-py-charge-a-tokenized-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="python" id="textarea-py-charge-a-tokenized-credit-card" name="textarea-py-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-charge-a-tokenized-credit-card">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="charge-a-tokenized-credit-card">
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-charge-a-tokenized-credit-card"></div>
<div id="showCode-js-charge-a-tokenized-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="node" id="textarea-js-charge-a-tokenized-credit-card" name="textarea-js-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-charge-a-tokenized-credit-card">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="charge-a-tokenized-credit-card">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="charge-a-tokenized-credit-card">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="charge-a-tokenized-credit-card">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="charge-a-tokenized-credit-card">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="charge-a-tokenized-credit-card">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="charge-a-tokenized-credit-card">Node</button>
</div>
<div class="showCodeCont" id="showCode-charge-a-tokenized-credit-card">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-charge-a-tokenized-credit-card"></div>
<div id="showCode-php-charge-a-tokenized-credit-card">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-php-charge-a-tokenized-credit-card" name="textarea-php-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
 </div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-charge-a-tokenized-credit-card"></div>
<div id="showCode-cs-charge-a-tokenized-credit-card">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-cs-charge-a-tokenized-credit-card" name="textarea-cs-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-charge-a-tokenized-credit-card"></div>
<div id="showCode-java-charge-a-tokenized-credit-card">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-java-charge-a-tokenized-credit-card" name="textarea-java-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-charge-a-tokenized-credit-card"></div>
<div id="showCode-rb-charge-a-tokenized-credit-card">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-charge-a-tokenized-credit-card"></a>
</p>
 <textarea class="sample-code" id="textarea-rb-charge-a-tokenized-credit-card" name="textarea-rb-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-charge-a-tokenized-credit-card"></div>
<div id="showCode-py-charge-a-tokenized-credit-card">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-py-charge-a-tokenized-credit-card" name="textarea-py-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-charge-a-tokenized-credit-card"></div>
<div id="showCode-js-charge-a-tokenized-credit-card">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-charge-a-tokenized-credit-card"></a>
</p>
<textarea class="sample-code" id="textarea-js-charge-a-tokenized-credit-card" name="textarea-js-charge-a-tokenized-credit-card" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-charge-a-tokenized-credit-card" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-charge-a-tokenized-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-charge-a-tokenized-credit-card">
 Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-charge-a-tokenized-credit-card" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-charge-a-tokenized-credit-card">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Contains tokenized credit card information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
The token issued by the token provider.<br /><br />
Use the token as decrypted from the cryptogram. Do not use the physical card's account number.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
The token's expiration date.<br /><br />
Use the expiration date as decrypted from the cryptogram. Do not use the physical card's expiration date.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>isPaymentToken</td>
<td>A flag to Indicate that the payment uses a payment network token.<br /><br />
Set to <code>true</code> if the <code>cardNumber</code> is a token.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cryptogram</td>
<td><strong>Required.</strong><br />
The cryptogram received from the token provider.<br /><br />
Include the cryptogram to verify that the transaction is tokenized.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
 </tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
 Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-charge-a-tokenized-credit-card">
<h4 class="panel-title">
<a data-parent="#accordion-charge-a-tokenized-credit-card">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-charge-a-tokenized-credit-card">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
 </td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
 </tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
 <td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="payment-transactions-create-a-chase-pay-transaction">Create a Chase Pay Transaction</h3>
<p>Use this method to authorize and capture a payment using a tokenized credit card number issued by Chase Pay. Chase Pay is only available to merchants using the Paymentech processor.<br /><br />For other payment tokenization services, see <a href="#payment-transactions-charge-a-tokenized-credit-card">Charge a Tokenized Credit Card</a>.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-a-chase-pay-transactionTryIt" href="#console-create-a-chase-pay-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-chase-pay-transactionphp" href="#php-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-chase-pay-transactioncs" href="#cs-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-chase-pay-transactionjava" href="#java-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-chase-pay-transactionrb" href="#ruby-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-chase-pay-transactionpy" href="#python-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-chase-pay-transactionjs" href="#node-create-a-chase-pay-transaction" class="payment-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-chase-pay-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-chase-pay-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-chase-pay-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-chase-pay-transaction" spellcheck="false" class="XML XMLRequest">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;transactionRequest&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;amount&gt;54&lt;/amount&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
                &lt;cardCode&gt;999&lt;/cardCode&gt;
                &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
                &lt;cryptogram&gt;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&lt;/cryptogram&gt;
                &lt;tokenRequestorName&gt;CHASE_PAY&lt;/tokenRequestorName&gt;
                &lt;tokenRequestorId&gt;12345678901&lt;/tokenRequestorId&gt;
                &lt;tokenRequestorEci&gt;07&lt;/tokenRequestorEci&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-chase-pay-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;transactionRequest&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;amount&gt;54&lt;/amount&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
                &lt;cardCode&gt;999&lt;/cardCode&gt;
                &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
                &lt;cryptogram&gt;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&lt;/cryptogram&gt;
                &lt;tokenRequestorName&gt;CHASE_PAY&lt;/tokenRequestorName&gt;
                &lt;tokenRequestorId&gt;12345678901&lt;/tokenRequestorId&gt;
                &lt;tokenRequestorEci&gt;07&lt;/tokenRequestorEci&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-chase-pay-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;51&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;isPaymentToken&quot;: true,
                    &quot;cryptogram&quot;: &quot;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&quot;,
                    &quot;tokenRequestorName&quot;: &quot;CHASE_PAY&quot;,
                    &quot;tokenRequestorId&quot;: &quot;12345678901&quot;,
                    &quot;tokenRequestorEci&quot;: &quot;07&quot;
                }
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-chase-pay-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;51&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;,
                    &quot;isPaymentToken&quot;: true,
                    &quot;cryptogram&quot;: &quot;EjRWeJASNFZ4kBI0VniQEjRWeJA&#x3D;&quot;,
                    &quot;tokenRequestorName&quot;: &quot;CHASE_PAY&quot;,
                    &quot;tokenRequestorId&quot;: &quot;12345678901&quot;,
                    &quot;tokenRequestorEci&quot;: &quot;07&quot;
                }
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-chase-pay-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-chase-pay-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-chase-pay-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-a-chase-pay-transaction">
<div class="tblErrors">
 </div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-chase-pay-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;v        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;NG9B8H&lt;/authCode&gt;
        &lt;avsResultCode&gt;Y&lt;/avsResultCode&gt;
        &lt;cvvResultCode&gt;M&lt;/cvvResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2156736367&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;BC0B95EAD6CD9E53AA40595E3F6D1A15&lt;/transHash&gt;
        &lt;testRequest&gt;0&lt;/testRequest&gt;
        &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
        &lt;accountType&gt;Visa&lt;/accountType&gt;
        &lt;messages&gt;
            &lt;message&gt;
                &lt;code&gt;1&lt;/code&gt;
                &lt;description&gt;This transaction has been approved.&lt;/description&gt;
            &lt;/message&gt;
        &lt;/messages&gt;
        &lt;transHashSha2&gt;BA8943E68467EA821D575EF455B77E5944B904D9775AE3DAC24922F141F82A5D8F9DCCCC6DB28ADE0A138E9EB6B3EE83C7BEB10A81CA18C7FA70EE472388B0FD&lt;/transHashSha2&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-chase-pay-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;createTransactionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;v        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;NG9B8H&lt;/authCode&gt;
        &lt;avsResultCode&gt;Y&lt;/avsResultCode&gt;
        &lt;cvvResultCode&gt;M&lt;/cvvResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2156736367&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;BC0B95EAD6CD9E53AA40595E3F6D1A15&lt;/transHash&gt;
        &lt;testRequest&gt;0&lt;/testRequest&gt;
        &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
        &lt;accountType&gt;Visa&lt;/accountType&gt;
        &lt;messages&gt;
            &lt;message&gt;
                &lt;code&gt;1&lt;/code&gt;
                &lt;description&gt;This transaction has been approved.&lt;/description&gt;
            &lt;/message&gt;
        &lt;/messages&gt;
        &lt;transHashSha2&gt;BA8943E68467EA821D575EF455B77E5944B904D9775AE3DAC24922F141F82A5D8F9DCCCC6DB28ADE0A138E9EB6B3EE83C7BEB10A81CA18C7FA70EE472388B0FD&lt;/transHashSha2&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-chase-pay-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HW617E&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2157047189&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E7CEB0A9F1BECA32A02493E1B31D5955&quot;,
        &quot;testRequest&quot;: &quot;0&quot;,
        &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
        &quot;accountType&quot;: &quot;Visa&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;D0C4FFF5648511A5862B917CFD9BB78ABF8A6E1D90C119CBBC4C0B454F4FF40DED15B204E042F36ECA5FB15D02588E4E4A7B85B94E7279599CE6020462CB7DEE&quot;,
        &quot;SupplementalDataQualificationIndicator&quot;: 0
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-chase-pay-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HW617E&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2157047189&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;E7CEB0A9F1BECA32A02493E1B31D5955&quot;,
        &quot;testRequest&quot;: &quot;0&quot;,
        &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
        &quot;accountType&quot;: &quot;Visa&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;D0C4FFF5648511A5862B917CFD9BB78ABF8A6E1D90C119CBBC4C0B454F4FF40DED15B204E042F36ECA5FB15D02588E4E4A7B85B94E7279599CE6020462CB7DEE&quot;,
        &quot;SupplementalDataQualificationIndicator&quot;: 0
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-a-chase-pay-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-a-chase-pay-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-chase-pay-transaction"></div>
<div id="showCode-php-create-a-chase-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-chase-pay-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-a-chase-pay-transaction" name="textarea-php-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-chase-pay-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-chase-pay-transaction"></div>
<div id="showCode-cs-create-a-chase-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-chase-pay-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-a-chase-pay-transaction" name="textarea-cs-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-chase-pay-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-chase-pay-transaction"></div>
<div id="showCode-java-create-a-chase-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-chase-pay-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-a-chase-pay-transaction" name="textarea-java-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-a-chase-pay-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-chase-pay-transaction"></div>
<div id="showCode-rb-create-a-chase-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-chase-pay-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-chase-pay-transaction" name="textarea-rb-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-chase-pay-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-chase-pay-transaction"></div>
<div id="showCode-py-create-a-chase-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-chase-pay-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-a-chase-pay-transaction" name="textarea-py-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-chase-pay-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-chase-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-chase-pay-transaction"></div>
<div id="showCode-js-create-a-chase-pay-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-chase-pay-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-a-chase-pay-transaction" name="textarea-js-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-chase-pay-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-chase-pay-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-chase-pay-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-chase-pay-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-chase-pay-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-chase-pay-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-chase-pay-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-a-chase-pay-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-chase-pay-transaction"></div>
 <div id="showCode-php-create-a-chase-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-chase-pay-transaction" name="textarea-php-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-chase-pay-transaction"></div>
<div id="showCode-cs-create-a-chase-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-chase-pay-transaction" name="textarea-cs-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-chase-pay-transaction"></div>
<div id="showCode-java-create-a-chase-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-a-chase-pay-transaction" name="textarea-java-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
 <div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-chase-pay-transaction"></div>
<div id="showCode-rb-create-a-chase-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-chase-pay-transaction" name="textarea-rb-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-chase-pay-transaction"></div>
<div id="showCode-py-create-a-chase-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-chase-pay-transaction" name="textarea-py-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-chase-pay-transaction"></div>
<div id="showCode-js-create-a-chase-pay-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-chase-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-chase-pay-transaction" name="textarea-js-create-a-chase-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-chase-pay-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-chase-pay-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-chase-pay-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-chase-pay-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-chase-pay-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
 Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>DKK</code>, <code>NOK</code>, <code>PLN</code>, <code>SEK</code>, <code>EUR</code>, <code>AUD</code>, and <code>NZD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Contains tokenized credit card information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
The token issued by the token provider<br /><br />
Use the token as provided by Chase Pay. Do not use the physical card's account number.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
The token's expiration date.<br /><br />
Use the expiration date as provided by Chase Pay. Do not use the physical card's expiration date.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>isPaymentToken</td>
<td>Flag to Indicate that the payment uses a payment network token.<br /><br />
Set to <code>true</code> if the <code>cardNumber</code> is a token.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cryptogram</td>
<td><strong>Required.</strong><br />
The cryptogram received from the token provider.<br /><br />
Include the cryptogram to verify that the transaction is tokenized.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>tokenRequestorName</td>
<td><strong>Required.</strong><br />
Indicates the token provider.<br /><br />
Set to <code>CHASE_PAY</code> for Chase Pay transactions.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>tokenRequestorId</td>
<td><strong>Required.</strong><br />
The eleven-digit identification number returned by Chase Pay for this transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>tokenRequestorEci</td>
<td><strong>Required.</strong><br />
The two-digit Electronic Commerce Indicator (ECI) returned by Chase Pay for this transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
 </td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
 <td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
 <td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-chase-pay-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-chase-pay-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-chase-pay-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
 <tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
 <td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<strong>Note:</strong> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td><strong>Deprecated.</strong><br /><br />Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
Superseded by <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
 <td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
 <td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
 <td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHashSha2</td>
<td>The SHA-512 hash returned in transaction responses, which you can use to confirm that the transaction response came from Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/support/hash_upgrade/">Transaction Hash Upgrade Guide</a> for details on how to use <code>transHashSha2</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="mobile-in-app-transactions" class="section-title">Mobile In-App Transactions</h2>
<p class="lead">Enables you to pass Accept Mobile, Apple Pay, or Google Pay payment data to Authorize.Net. For more information about in-app payment transactions, see the <a href="https://developer.authorize.net/api/reference/features/in-app.html">Mobile In-App developer guide.</a></p>
<h3 id="mobile-in-app-transactions-create-an-apple-pay-transaction">Create an Apple Pay Transaction</h3>
<p>Use this function to create an Authorize.Net payment transaction request using Apple Pay data in place of card data.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-an-apple-pay-transactionTryIt" href="#console-create-an-apple-pay-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-an-apple-pay-transactionphp" href="#php-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-an-apple-pay-transactioncs" href="#cs-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-an-apple-pay-transactionjava" href="#java-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-an-apple-pay-transactionrb" href="#ruby-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-an-apple-pay-transactionpy" href="#python-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-an-apple-pay-transactionjs" href="#node-create-an-apple-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-an-apple-pay-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-an-apple-pay-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-an-apple-pay-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-an-apple-pay-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;50&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.APPLE.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;transactionSettings&gt;
      &lt;setting&gt;
        &lt;settingName&gt;recurringBilling&lt;/settingName&gt;
        &lt;settingValue&gt;false&lt;/settingValue&gt;
      &lt;/setting&gt;
    &lt;/transactionSettings&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-an-apple-pay-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;50&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.APPLE.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;transactionSettings&gt;
      &lt;setting&gt;
        &lt;settingName&gt;recurringBilling&lt;/settingName&gt;
        &lt;settingValue&gt;false&lt;/settingValue&gt;
      &lt;/setting&gt;
    &lt;/transactionSettings&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-an-apple-pay-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;50&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.APPLE.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-an-apple-pay-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;50&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.APPLE.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-an-apple-pay-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-an-apple-pay-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-an-apple-pay-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-an-apple-pay-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-an-apple-pay-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse 
xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;
 xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; 
xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetA
piSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-an-apple-pay-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse 
xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;
 xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; 
xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetA
piSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-an-apple-pay-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-an-apple-pay-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-an-apple-pay-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-an-apple-pay-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-an-apple-pay-transaction"></div>
<div id="showCode-php-create-an-apple-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-an-apple-pay-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-an-apple-pay-transaction" name="textarea-php-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-an-apple-pay-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-an-apple-pay-transaction"></div>
 <div id="showCode-cs-create-an-apple-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-an-apple-pay-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-an-apple-pay-transaction" name="textarea-cs-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-an-apple-pay-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-an-apple-pay-transaction"></div>
<div id="showCode-java-create-an-apple-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-an-apple-pay-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-an-apple-pay-transaction" name="textarea-java-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-an-apple-pay-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-an-apple-pay-transaction"></div>
<div id="showCode-rb-create-an-apple-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-an-apple-pay-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-an-apple-pay-transaction" name="textarea-rb-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-an-apple-pay-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-an-apple-pay-transaction"></div>
<div id="showCode-py-create-an-apple-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-an-apple-pay-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-an-apple-pay-transaction" name="textarea-py-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-an-apple-pay-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-an-apple-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-an-apple-pay-transaction"></div>
<div id="showCode-js-create-an-apple-pay-transaction">
 <p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-an-apple-pay-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-an-apple-pay-transaction" name="textarea-js-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-an-apple-pay-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-an-apple-pay-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-an-apple-pay-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-an-apple-pay-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-an-apple-pay-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-an-apple-pay-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-an-apple-pay-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-an-apple-pay-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-an-apple-pay-transaction"></div>
<div id="showCode-php-create-an-apple-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-an-apple-pay-transaction"></a>
</p>
 <textarea class="sample-code" id="textarea-php-create-an-apple-pay-transaction" name="textarea-php-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-an-apple-pay-transaction"></div>
<div id="showCode-cs-create-an-apple-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-an-apple-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-an-apple-pay-transaction" name="textarea-cs-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-an-apple-pay-transaction"></div>
<div id="showCode-java-create-an-apple-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-an-apple-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-an-apple-pay-transaction" name="textarea-java-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-an-apple-pay-transaction"></div>
<div id="showCode-rb-create-an-apple-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-an-apple-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-an-apple-pay-transaction" name="textarea-rb-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-an-apple-pay-transaction"></div>
<div id="showCode-py-create-an-apple-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-an-apple-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-an-apple-pay-transaction" name="textarea-py-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-an-apple-pay-transaction"></div>
<div id="showCode-js-create-an-apple-pay-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-an-apple-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-an-apple-pay-transaction" name="textarea-js-create-an-apple-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-an-apple-pay-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-an-apple-pay-transaction">
 <h4 class="panel-title">
<a data-parent="#accordion-create-an-apple-pay-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-an-apple-pay-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-an-apple-pay-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction. Use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed. <br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.APPLE.INAPP.PAYMENT</code> for Apple Pay transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data known as the payment nonce. The nonce is valid for 15 minutes.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
 <td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
 <td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
This element is required if you submit the <code>retail</code> element. For Apple Pay transactions, set <code>marketType</code> to 0.</td>
<td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
 <td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authorizationIndicator</td>
<td>Indicates whether the authorization is for the final transaction amount. Applies to Mastercard transactions only.<br /><br />
Use <code>final</code> if the amount of the transaction is final.<br /><br />Use <code>pre</code> if the amount of the transaction is not final.</td>
<td><div>String. Either <code>pre</code> or <code>final</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-an-apple-pay-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-an-apple-pay-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-an-apple-pay-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>This element contains the transaction response, including AVS, CVV, and CAVV details.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
 <td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
 <td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
 <td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
 <h3 id="mobile-in-app-transactions-create-a-google-pay-transaction">Create a Google Pay Transaction</h3>
<p>Use this function to create an Authorize.Net payment transaction request using Google Pay data in place of card data.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-a-google-pay-transactionTryIt" href="#console-create-a-google-pay-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-google-pay-transactionphp" href="#php-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-google-pay-transactioncs" href="#cs-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-google-pay-transactionjava" href="#java-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-google-pay-transactionrb" href="#ruby-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-google-pay-transactionpy" href="#python-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-google-pay-transactionjs" href="#node-create-a-google-pay-transaction" class="mobile-in-app-transactions" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-google-pay-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-google-pay-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-google-pay-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-google-pay-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;57PZhp2M&lt;/name&gt;
    &lt;transactionKey&gt;9m8N7U6KpFfm9f8X&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;50&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.GOOGLE.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;transactionSettings&gt;
      &lt;setting&gt;
        &lt;settingName&gt;recurringBilling&lt;/settingName&gt;
        &lt;settingValue&gt;false&lt;/settingValue&gt;
      &lt;/setting&gt;
    &lt;/transactionSettings&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-google-pay-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;57PZhp2M&lt;/name&gt;
    &lt;transactionKey&gt;9m8N7U6KpFfm9f8X&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;50&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.GOOGLE.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;tax&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/tax&gt;
    &lt;duty&gt;
      &lt;amount&gt;8.55&lt;/amount&gt;
      &lt;name&gt;duty name&lt;/name&gt;
      &lt;description&gt;duty description&lt;/description&gt;
    &lt;/duty&gt;
    &lt;shipping&gt;
      &lt;amount&gt;4.26&lt;/amount&gt;
      &lt;name&gt;level2 tax name&lt;/name&gt;
      &lt;description&gt;level2 tax&lt;/description&gt;
    &lt;/shipping&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;transactionSettings&gt;
      &lt;setting&gt;
        &lt;settingName&gt;recurringBilling&lt;/settingName&gt;
        &lt;settingValue&gt;false&lt;/settingValue&gt;
      &lt;/setting&gt;
    &lt;/transactionSettings&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-google-pay-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;50&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.GOOGLE.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-google-pay-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;50&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.GOOGLE.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;tax&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;duty&quot;: {
                &quot;amount&quot;: &quot;8.55&quot;,
                &quot;name&quot;: &quot;duty name&quot;,
                &quot;description&quot;: &quot;duty description&quot;
            },
            &quot;shipping&quot;: {
                &quot;amount&quot;: &quot;4.26&quot;,
                &quot;name&quot;: &quot;level2 tax name&quot;,
                &quot;description&quot;: &quot;level2 tax&quot;
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-google-pay-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-google-pay-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-google-pay-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-a-google-pay-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-google-pay-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;UGELQC&lt;/authCode&gt;
        &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2148061808&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;message&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/message&gt;
        &lt;userFields&gt;
            &lt;userField&gt;
                &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
                &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
            &lt;/userField&gt;
            &lt;userField&gt;
                &lt;name&gt;favorite_color&lt;/name&gt;
                &lt;value&gt;lavender&lt;/value&gt;
            &lt;/userField&gt;
        &lt;/userFields&gt;
        &lt;transHashSha2 /&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-google-pay-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;UGELQC&lt;/authCode&gt;
        &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2148061808&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;message&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/message&gt;
        &lt;userFields&gt;
            &lt;userField&gt;
                &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
                &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
            &lt;/userField&gt;
            &lt;userField&gt;
                &lt;name&gt;favorite_color&lt;/name&gt;
                &lt;value&gt;lavender&lt;/value&gt;
            &lt;/userField&gt;
        &lt;/userFields&gt;
        &lt;transHashSha2 /&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-google-pay-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-google-pay-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-a-google-pay-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-a-google-pay-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-google-pay-transaction"></div>
<div id="showCode-php-create-a-google-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-google-pay-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-a-google-pay-transaction" name="textarea-php-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-google-pay-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-google-pay-transaction"></div>
<div id="showCode-cs-create-a-google-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-google-pay-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-a-google-pay-transaction" name="textarea-cs-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-google-pay-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-google-pay-transaction"></div>
<div id="showCode-java-create-a-google-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-google-pay-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-a-google-pay-transaction" name="textarea-java-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-a-google-pay-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-google-pay-transaction"></div>
<div id="showCode-rb-create-a-google-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-google-pay-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-google-pay-transaction" name="textarea-rb-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-google-pay-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-google-pay-transaction"></div>
<div id="showCode-py-create-a-google-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-google-pay-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-a-google-pay-transaction" name="textarea-py-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-google-pay-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-google-pay-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-google-pay-transaction"></div>
<div id="showCode-js-create-a-google-pay-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-google-pay-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-a-google-pay-transaction" name="textarea-js-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-google-pay-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-google-pay-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-google-pay-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-google-pay-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-google-pay-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-google-pay-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-google-pay-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-a-google-pay-transaction">

<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-google-pay-transaction"></div>
<div id="showCode-php-create-a-google-pay-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-google-pay-transaction" name="textarea-php-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-google-pay-transaction"></div>
<div id="showCode-cs-create-a-google-pay-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-google-pay-transaction" name="textarea-cs-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-google-pay-transaction"></div>
<div id="showCode-java-create-a-google-pay-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-a-google-pay-transaction" name="textarea-java-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-google-pay-transaction"></div>
<div id="showCode-rb-create-a-google-pay-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-google-pay-transaction" name="textarea-rb-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-google-pay-transaction"></div>
<div id="showCode-py-create-a-google-pay-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-google-pay-transaction" name="textarea-py-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-google-pay-transaction"></div>
<div id="showCode-js-create-a-google-pay-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-google-pay-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-google-pay-transaction" name="textarea-js-create-a-google-pay-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-google-pay-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-google-pay-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-google-pay-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-google-pay-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-google-pay-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction. Use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.GOOGLE.INAPP.PAYMENT</code> for Google Pay transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data known as the payment nonce. The nonce is valid for 15 minutes.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
 <td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
 <td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authorizationIndicator</td>
<td>Indicates whether the authorization is for the final transaction amount. Applies to Mastercard transactions only.<br /><br />
Use <code>final</code> if the amount of the transaction is final.<br /><br />Use <code>pre</code> if the amount of the transaction is not final.</td>
<td><div>String. Either <code>pre</code> or <code>final</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-google-pay-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-google-pay-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-google-pay-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
 <td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="visa-secure-remote-commerce" class="section-title">Visa Secure Remote Commerce</h2>
<p class="lead">Visa SRC enables you to pass Visa SRC payment data to Authorize.Net. For more information about Authorize.Net's implementation of Visa SRC, see the <a href="https://developer.authorize.net/api/reference/features/visa_src.html">Visa SRC developer guide</a>.</p>
<h3 id="visa-secure-remote-commerce-decrypt-visa-src-data">Decrypt Visa SRC Data</h3>
<p>Use this method to decrypt a Visa SRC encrypted payment data to retrieve information such as shipping address, tax amounts, and card art.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="decrypt-visa-src-dataTryIt" href="#console-decrypt-visa-src-data" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="decrypt-visa-src-dataphp" href="#php-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="decrypt-visa-src-datacs" href="#cs-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="decrypt-visa-src-datajava" href="#java-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="decrypt-visa-src-datarb" href="#ruby-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="decrypt-visa-src-datapy" href="#python-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="decrypt-visa-src-datajs" href="#node-decrypt-visa-src-data" class="visa-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-decrypt-visa-src-data">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="decrypt-visa-src-data">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="decrypt-visa-src-data">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-decrypt-visa-src-data" spellcheck="false" class="XML XMLRequest">&lt;decryptPaymentDataRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;opaqueData&gt;
    &lt;dataDescriptor&gt;COMMON.VCO.ONLINE.PAYMENT&lt;/dataDescriptor&gt;
    &lt;dataValue&gt;+s6+Xn9fCF8kfA+5TAAMpX3dejnEg2u5HUZMIVj43M7JpjuIeCahMVXZoHJIQyVaAaWqsWlwgZSwYTh+gSOx8PT1G70wplfnDMU1Wcv1WDYnqz+fI1NMfShqUorC2GDRt2uLksAHH7Zst7GPmsoKa2lY3Do86s+fxwC7ZK86NRVW7Y7JrvEmEI7fxTUai6vn8kHGq3OOEMSrqnzJERgDx6wdxSLZeFBGubVwdJUPqXUisukGS+QG3ipqL8+kSHmBsbad375scFGF1AeZU7H+8kO7Wzr1QkPnx3pQsiMQGxghmkGX1wmZ0ilmr344ytfKx0Gr3v8JNCw6B6LhXscu18KUXsidLW33pxtjqLQRAaFHgNh0QNMJZkbLEHmtywY16m4NWnDFzlFIk+y+iaonbfZlrEfdkmZhePlXW3N6UhwFnozI5vMsl7E1cqlVO6TJO1ocfEqlnKdFBCTqdeuzaXuUbSi7IUPEtEWFOb8WoKDU+0Ae5LjXVH1jNVN8XC4S9HGIibV69xHKaE155DU3rZjrMFfBcQIufdbbQI3qBXVK1e3J9B1FLMtAbYxn2ZtGCyWxjQ13wq5OECfjR0u1xrrTd0VPzwBQhQ+aqDCTPkQRoYdKU+p9GaKy5NKiqxLWqeTu3bGRQpffps2jEZDIUrdJXc2t5VNA8F+KtN933PCUuVZROC7ADSoSY3mFN5PQEknkg5GQpXqJZNFBRITUyleTBIFBV0sELUOFy81DBfkhSnsjSb+X8TNez0qaG2NkMVhF7oOIBYawT7NSUvxwbquZw7GEbSss4yNl94zDKOK1CR2cAZsYtTGlWGIhiwCsFCiKVuGUkioF3M5gXAkPhkw20V69ed1DE7DJu8PF89U2FQI7p6UPE7XvHVbSrXHl0m7gP8w+QPYvJBNtJATgjqDD+xCQDa0csh+1p17UtaTR8I3XDPQWNl7NV2msWzhyZxMi1wLR+nlnYEn7K97uihRqcoAjnIFpXAsoY+tCXiig7xkcbe4W4rvl610Zr7QuVQ0xovXUX48+PLYb1uGzR+RQ0hR914syxpe72HPSVrZXwmEmtnlviedx1cjVThwKSQ59vv5+zVNgcQJt51snuT+3xpSzfPTjX5UiTZFYZ09tPbWiCJ88y3UujFI8zhn4EjNQNKzDMXvh84EImty46uMaB0Ehjfg50s2FXSMO18VaCA7VTUuj0dvQkL8Zg2aNCWlJEjiNI9AUnyBZxJgM9elX4RJUhuurNSAq+OizMx9E+pNwUvF+L270TNUBQ4RAGpmP2QSB4dw8rJ0yL7V10TD2gq4J1lHhpOOD94IVH0XrwmusRieFt44rakA7rw4zipEkprqP6UO6q6OR9cgm4wphBS2lBIYyvexsMh+Y6J0sHIxu8QEsRSWKlv+aLULu0c42K86czgFDYkJnNlbyHbTXFXzAHuWlAvSoMyj9m4eK5vZp9JjzAa2duyofOlpMAvjbnaV8UeAGIPI+QK3imm8D6+VAXKBqTVpnpqQsRIDJb8Pxu7pmDBUyzwO9NCdhmNLomhROpnNOqp65p4neqhyp4kHsLq4vTLBvx6pfAsyrwqdy4QyHRCIDnX6wcy6J4MOW+gfM6Hm1cNm6AqcOaiTafXRR3TdOShOzXBUm3gr6o4dYi3l+oQx9LwqFgoD8Bg+3u0PWEVZODkIrcLETyKWjao4s5YRratWclo0In3mfYZiO3kSxoDRAQoi8BWVwiWEnstNZhx0edLcIseWNCQ8GHDXPWQzs+NMHWRQT8yFwPC34iMOrRPk0TlM1CWySBC5LBaD8ZNZ3R+al2XwGP6wwXbJtAvwR1a3Wqqb+vGFdggp0ISPHQTI7I1w4Kp0ijXA36rTvmZ9xin0sN+ayOtoNfvBo4blj9FHKgDoqWimfzxsrwOcFwWU1i0Xfd4wvriv73Z6gqXhjmS19S7zuVk2+TtPlUPKiHj7fpPON18euYuVe8jszM3xcMNiSDmG+HWjuUI78kyYQEEsxMmGQHt+nenScbjBu9JkZP7KrH380G34zMJeJF7A7GzzrErrCsEsMHPFuJzJkogwnfL5zHy24UdYOBDc8+4aTaUmAxu9shdvoWCj3i1Q&#x3D;&#x3D;&lt;/dataValue&gt;
    &lt;dataKey&gt;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&lt;/dataKey&gt;
  &lt;/opaqueData&gt;
  &lt;callId&gt;123456789&lt;/callId&gt;
&lt;/decryptPaymentDataRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-decrypt-visa-src-data" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;decryptPaymentDataRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;opaqueData&gt;
    &lt;dataDescriptor&gt;COMMON.VCO.ONLINE.PAYMENT&lt;/dataDescriptor&gt;
    &lt;dataValue&gt;+s6+Xn9fCF8kfA+5TAAMpX3dejnEg2u5HUZMIVj43M7JpjuIeCahMVXZoHJIQyVaAaWqsWlwgZSwYTh+gSOx8PT1G70wplfnDMU1Wcv1WDYnqz+fI1NMfShqUorC2GDRt2uLksAHH7Zst7GPmsoKa2lY3Do86s+fxwC7ZK86NRVW7Y7JrvEmEI7fxTUai6vn8kHGq3OOEMSrqnzJERgDx6wdxSLZeFBGubVwdJUPqXUisukGS+QG3ipqL8+kSHmBsbad375scFGF1AeZU7H+8kO7Wzr1QkPnx3pQsiMQGxghmkGX1wmZ0ilmr344ytfKx0Gr3v8JNCw6B6LhXscu18KUXsidLW33pxtjqLQRAaFHgNh0QNMJZkbLEHmtywY16m4NWnDFzlFIk+y+iaonbfZlrEfdkmZhePlXW3N6UhwFnozI5vMsl7E1cqlVO6TJO1ocfEqlnKdFBCTqdeuzaXuUbSi7IUPEtEWFOb8WoKDU+0Ae5LjXVH1jNVN8XC4S9HGIibV69xHKaE155DU3rZjrMFfBcQIufdbbQI3qBXVK1e3J9B1FLMtAbYxn2ZtGCyWxjQ13wq5OECfjR0u1xrrTd0VPzwBQhQ+aqDCTPkQRoYdKU+p9GaKy5NKiqxLWqeTu3bGRQpffps2jEZDIUrdJXc2t5VNA8F+KtN933PCUuVZROC7ADSoSY3mFN5PQEknkg5GQpXqJZNFBRITUyleTBIFBV0sELUOFy81DBfkhSnsjSb+X8TNez0qaG2NkMVhF7oOIBYawT7NSUvxwbquZw7GEbSss4yNl94zDKOK1CR2cAZsYtTGlWGIhiwCsFCiKVuGUkioF3M5gXAkPhkw20V69ed1DE7DJu8PF89U2FQI7p6UPE7XvHVbSrXHl0m7gP8w+QPYvJBNtJATgjqDD+xCQDa0csh+1p17UtaTR8I3XDPQWNl7NV2msWzhyZxMi1wLR+nlnYEn7K97uihRqcoAjnIFpXAsoY+tCXiig7xkcbe4W4rvl610Zr7QuVQ0xovXUX48+PLYb1uGzR+RQ0hR914syxpe72HPSVrZXwmEmtnlviedx1cjVThwKSQ59vv5+zVNgcQJt51snuT+3xpSzfPTjX5UiTZFYZ09tPbWiCJ88y3UujFI8zhn4EjNQNKzDMXvh84EImty46uMaB0Ehjfg50s2FXSMO18VaCA7VTUuj0dvQkL8Zg2aNCWlJEjiNI9AUnyBZxJgM9elX4RJUhuurNSAq+OizMx9E+pNwUvF+L270TNUBQ4RAGpmP2QSB4dw8rJ0yL7V10TD2gq4J1lHhpOOD94IVH0XrwmusRieFt44rakA7rw4zipEkprqP6UO6q6OR9cgm4wphBS2lBIYyvexsMh+Y6J0sHIxu8QEsRSWKlv+aLULu0c42K86czgFDYkJnNlbyHbTXFXzAHuWlAvSoMyj9m4eK5vZp9JjzAa2duyofOlpMAvjbnaV8UeAGIPI+QK3imm8D6+VAXKBqTVpnpqQsRIDJb8Pxu7pmDBUyzwO9NCdhmNLomhROpnNOqp65p4neqhyp4kHsLq4vTLBvx6pfAsyrwqdy4QyHRCIDnX6wcy6J4MOW+gfM6Hm1cNm6AqcOaiTafXRR3TdOShOzXBUm3gr6o4dYi3l+oQx9LwqFgoD8Bg+3u0PWEVZODkIrcLETyKWjao4s5YRratWclo0In3mfYZiO3kSxoDRAQoi8BWVwiWEnstNZhx0edLcIseWNCQ8GHDXPWQzs+NMHWRQT8yFwPC34iMOrRPk0TlM1CWySBC5LBaD8ZNZ3R+al2XwGP6wwXbJtAvwR1a3Wqqb+vGFdggp0ISPHQTI7I1w4Kp0ijXA36rTvmZ9xin0sN+ayOtoNfvBo4blj9FHKgDoqWimfzxsrwOcFwWU1i0Xfd4wvriv73Z6gqXhjmS19S7zuVk2+TtPlUPKiHj7fpPON18euYuVe8jszM3xcMNiSDmG+HWjuUI78kyYQEEsxMmGQHt+nenScbjBu9JkZP7KrH380G34zMJeJF7A7GzzrErrCsEsMHPFuJzJkogwnfL5zHy24UdYOBDc8+4aTaUmAxu9shdvoWCj3i1Q&#x3D;&#x3D;&lt;/dataValue&gt;
    &lt;dataKey&gt;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&lt;/dataKey&gt;
  &lt;/opaqueData&gt;
  &lt;callId&gt;123456789&lt;/callId&gt;
&lt;/decryptPaymentDataRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-decrypt-visa-src-data" spellcheck="false" class="JSON JSONRequest">{
  &quot;decryptPaymentDataRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;opaqueData&quot;: {
      &quot;dataDescriptor&quot;: &quot;COMMON.VCO.ONLINE.PAYMENT&quot;,
      &quot;dataValue&quot;: &quot;+s6+Xn9fCF8kfA+5TAAMpX3dejnEg2u5HUZMIVj43M7JpjuIeCahMVXZoHJIQyVaAaWqsWlwgZSwYTh+gSOx8PT1G70wplfnDMU1Wcv1WDYnqz+fI1NMfShqUorC2GDRt2uLksAHH7Zst7GPmsoKa2lY3Do86s+fxwC7ZK86NRVW7Y7JrvEmEI7fxTUai6/vn8kHGq3OOEMSrqnzJERgDx6wdxSLZeFBGubVwdJUPqXUisukGS+QG3ipqL8+kSHmBsbad375scFGF1AeZU7H+8kO7Wzr1QkPnx3pQsiMQGxghmkGX1wmZ0ilmr344ytfKx0Gr3v8JNCw6B6LhXscu18KUXsidLW33pxtjqLQRAaFHgNh0QNMJZkbLEHmtywY16m4NWnDFzlFIk+y+iaonbfZlrEfdkmZhePlXW3N6UhwFnozI5vMsl7E1cqlVO6TJO1ocfEqlnKdFBCTqdeuzaXuUbSi7IUPEtEWFOb8WoKDU+0Ae5LjXVH1jNVN8XC4S9HGIibV69xHKaE155DU3rZjrMFfBcQIufdbbQI3qBXVK1e3J9B1FLMtAbYxn2ZtGCyWxjQ13wq5OECfjR0u1xrrTd0VPzwBQhQ+aqDCTPkQRoYdKU+p9GaKy5NKiqxLWqeTu3bGRQpffps2jEZDIUrdJXc2t5VNA8F+KtN933PCUuVZROC7ADSoSY3mFN5PQEknkg5GQpXqJZNFBRITUyleTBIFBV0sELUOFy81DBfkhSnsjSb+X8TNez0qaG2NkMVhF7oOIBYawT7NSUvxwbquZw7GEbSss4yNl94zDKOK1CR2cAZsYtTGlWGIhiwCsFCiKVuGUkioF3M5gXAkPhkw20V69ed1DE7DJu8PF89U2FQI7p6UPE7XvHVbSrXHl0m7gP8w+QPYvJBNtJATgjqDD+xCQDa0csh+1p17UtaTR8I3XDPQWNl7NV2msWzhyZxMi1wLR+nlnYEn7K97uihRqcoAjnIFpXAsoY+tCXiig7xkcbe4W4rvl610Zr7QuVQ0xovXUX48+PLYb1uGzR+RQ0hR914syxpe72HPS/VrZXwmEmtnlviedx1cjVThwKSQ59vv5+zVNgcQJt51snuT+3xpSzfPTjX5UiTZFYZ09tPbWiCJ88y3UujFI8zhn4EjNQNKzDMXvh84EImty46uMaB0Ehjfg50s2FXSMO18VaCA7VTUuj0dvQkL8Zg2aNCWlJEjiNI9AUnyBZxJgM9elX4RJUhuurNSAq+OizMx9E+pNwUvF+L270TNUBQ4RAGpmP2QSB4dw8rJ0yL7V10TD2gq4J1lHhpOOD94IVH0XrwmusRieFt44rakA7rw4zipEkprqP6UO6q6OR9cgm4wphBS2lBIYyvexsMh+Y6J0sH6Ixu8QEsRSWKlv+aLULu0c42K86czgFDYkJnNlbyHbTXFXzAHuWlAvSoMyj9m4eK5vZp9JjzAa2duyofOlpMAvjbnaV8UeAGIPI+QK3imm8D6+VAXKBqTVpnpqQsRIDJb8Pxu7pmDBUyzwO9NCdhmNLomhROpnNOqp65p4neqhyp4kHsLq4vTLBvx6pfAsyrwqdy4QyHRCIDnX6wcy6J4MOW+gfM6Hm1cNm6AqcOaiTafXRR3TdOShOzXBUm3gr6o4dYi3l+oQx9LwqFgoD8Bg+3u0PWEVZODkIrcLETyKWjao4s5YRratWclo0In3mfYZiO3kSxoDRAQoi8BWVwiWEnstNZhx0edLcIseWNCQ8GHDXPWQzs+NMHWRQT8yFwPC34iMOrRPk0TlM1CWySBC5LBaD8ZNZ3R+al2XwGP6wwXbJtAvwR1a3Wqqb+vGFdggp0ISPHQTI7I1w4Kp0ijXA36rTvmZ9xin0sN+ayOtoNfvBo4blj9FHKgDoqWimfzxsrwOcFwWU1i0Xfd4wvriv73Z6gqXhjmS19S7zuVk2+TtPlUPKiHj7fpPON18euYuVe8jszM3xcMNiSDmG+HWjuUI78kyYQEEsxMmGQHt+nenScbjBu9JkZP7KrH380G34zMJeJF7A7GzzrErrCsEsMHPFuJzJkogwnfL5zHy24UdYOBDc8+4aTaUmAxu9shdvoWCj3i1Q&#x3D;&#x3D;&quot;,
      &quot;dataKey&quot;: &quot;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&quot;
    },
    &quot;callId&quot;: &quot;2186595692635007317&quot;
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-decrypt-visa-src-data" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;decryptPaymentDataRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;opaqueData&quot;: {
      &quot;dataDescriptor&quot;: &quot;COMMON.VCO.ONLINE.PAYMENT&quot;,
      &quot;dataValue&quot;: &quot;+s6+Xn9fCF8kfA+5TAAMpX3dejnEg2u5HUZMIVj43M7JpjuIeCahMVXZoHJIQyVaAaWqsWlwgZSwYTh+gSOx8PT1G70wplfnDMU1Wcv1WDYnqz+fI1NMfShqUorC2GDRt2uLksAHH7Zst7GPmsoKa2lY3Do86s+fxwC7ZK86NRVW7Y7JrvEmEI7fxTUai6/vn8kHGq3OOEMSrqnzJERgDx6wdxSLZeFBGubVwdJUPqXUisukGS+QG3ipqL8+kSHmBsbad375scFGF1AeZU7H+8kO7Wzr1QkPnx3pQsiMQGxghmkGX1wmZ0ilmr344ytfKx0Gr3v8JNCw6B6LhXscu18KUXsidLW33pxtjqLQRAaFHgNh0QNMJZkbLEHmtywY16m4NWnDFzlFIk+y+iaonbfZlrEfdkmZhePlXW3N6UhwFnozI5vMsl7E1cqlVO6TJO1ocfEqlnKdFBCTqdeuzaXuUbSi7IUPEtEWFOb8WoKDU+0Ae5LjXVH1jNVN8XC4S9HGIibV69xHKaE155DU3rZjrMFfBcQIufdbbQI3qBXVK1e3J9B1FLMtAbYxn2ZtGCyWxjQ13wq5OECfjR0u1xrrTd0VPzwBQhQ+aqDCTPkQRoYdKU+p9GaKy5NKiqxLWqeTu3bGRQpffps2jEZDIUrdJXc2t5VNA8F+KtN933PCUuVZROC7ADSoSY3mFN5PQEknkg5GQpXqJZNFBRITUyleTBIFBV0sELUOFy81DBfkhSnsjSb+X8TNez0qaG2NkMVhF7oOIBYawT7NSUvxwbquZw7GEbSss4yNl94zDKOK1CR2cAZsYtTGlWGIhiwCsFCiKVuGUkioF3M5gXAkPhkw20V69ed1DE7DJu8PF89U2FQI7p6UPE7XvHVbSrXHl0m7gP8w+QPYvJBNtJATgjqDD+xCQDa0csh+1p17UtaTR8I3XDPQWNl7NV2msWzhyZxMi1wLR+nlnYEn7K97uihRqcoAjnIFpXAsoY+tCXiig7xkcbe4W4rvl610Zr7QuVQ0xovXUX48+PLYb1uGzR+RQ0hR914syxpe72HPS/VrZXwmEmtnlviedx1cjVThwKSQ59vv5+zVNgcQJt51snuT+3xpSzfPTjX5UiTZFYZ09tPbWiCJ88y3UujFI8zhn4EjNQNKzDMXvh84EImty46uMaB0Ehjfg50s2FXSMO18VaCA7VTUuj0dvQkL8Zg2aNCWlJEjiNI9AUnyBZxJgM9elX4RJUhuurNSAq+OizMx9E+pNwUvF+L270TNUBQ4RAGpmP2QSB4dw8rJ0yL7V10TD2gq4J1lHhpOOD94IVH0XrwmusRieFt44rakA7rw4zipEkprqP6UO6q6OR9cgm4wphBS2lBIYyvexsMh+Y6J0sH6Ixu8QEsRSWKlv+aLULu0c42K86czgFDYkJnNlbyHbTXFXzAHuWlAvSoMyj9m4eK5vZp9JjzAa2duyofOlpMAvjbnaV8UeAGIPI+QK3imm8D6+VAXKBqTVpnpqQsRIDJb8Pxu7pmDBUyzwO9NCdhmNLomhROpnNOqp65p4neqhyp4kHsLq4vTLBvx6pfAsyrwqdy4QyHRCIDnX6wcy6J4MOW+gfM6Hm1cNm6AqcOaiTafXRR3TdOShOzXBUm3gr6o4dYi3l+oQx9LwqFgoD8Bg+3u0PWEVZODkIrcLETyKWjao4s5YRratWclo0In3mfYZiO3kSxoDRAQoi8BWVwiWEnstNZhx0edLcIseWNCQ8GHDXPWQzs+NMHWRQT8yFwPC34iMOrRPk0TlM1CWySBC5LBaD8ZNZ3R+al2XwGP6wwXbJtAvwR1a3Wqqb+vGFdggp0ISPHQTI7I1w4Kp0ijXA36rTvmZ9xin0sN+ayOtoNfvBo4blj9FHKgDoqWimfzxsrwOcFwWU1i0Xfd4wvriv73Z6gqXhjmS19S7zuVk2+TtPlUPKiHj7fpPON18euYuVe8jszM3xcMNiSDmG+HWjuUI78kyYQEEsxMmGQHt+nenScbjBu9JkZP7KrH380G34zMJeJF7A7GzzrErrCsEsMHPFuJzJkogwnfL5zHy24UdYOBDc8+4aTaUmAxu9shdvoWCj3i1Q&#x3D;&#x3D;&quot;,
      &quot;dataKey&quot;: &quot;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&quot;
    },
    &quot;callId&quot;: &quot;2186595692635007317&quot;
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-decrypt-visa-src-data" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-decrypt-visa-src-data" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-decrypt-visa-src-data"></span>


<div class="errorDetails" id="detailsDiv-decrypt-visa-src-data">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-decrypt-visa-src-data">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;decryptPaymentDataResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;shippingInfo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;address&gt;800 Main St&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;US&lt;/country&gt;
   &lt;/shippingInfo&gt;
   &lt;billingInfo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;address&gt;800 Main St&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;US&lt;/country&gt;
      &lt;email&gt;john@mail.com&lt;/email&gt;
   &lt;/billingInfo&gt;
   &lt;cardInfo&gt;
      &lt;cardNumber&gt;XXXX4242&lt;/cardNumber&gt;
      &lt;expirationDate&gt;12/2022&lt;/expirationDate&gt;
      &lt;cardArt&gt;
         &lt;cardBrand&gt;VISA&lt;/cardBrand&gt;
         &lt;cardImageHeight&gt;50&lt;/cardImageHeight&gt;
         &lt;cardImageUrl&gt;https://sandbox.secure.checkout.visa.com/VmeCardArts/wv87HR3X3jqlNXNJu_6YtLQyyO7mpu2aU6Yo3VWGKKM.png&lt;/cardImageUrl&gt;
         &lt;cardImageWidth&gt;77&lt;/cardImageWidth&gt;
         &lt;cardType&gt;DEBIT&lt;/cardType&gt;
      &lt;/cardArt&gt;
   &lt;/cardInfo&gt;
   &lt;paymentDetails&gt;
      &lt;currency&gt;USD&lt;/currency&gt;
      &lt;amount&gt;16.00&lt;/amount&gt;
   &lt;/paymentDetails&gt;
&lt;/decryptPaymentDataResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-decrypt-visa-src-data" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;decryptPaymentDataResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;shippingInfo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;address&gt;800 Main St&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;US&lt;/country&gt;
   &lt;/shippingInfo&gt;
   &lt;billingInfo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;address&gt;800 Main St&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;US&lt;/country&gt;
      &lt;email&gt;john@mail.com&lt;/email&gt;
   &lt;/billingInfo&gt;
   &lt;cardInfo&gt;
      &lt;cardNumber&gt;XXXX4242&lt;/cardNumber&gt;
      &lt;expirationDate&gt;12/2022&lt;/expirationDate&gt;
      &lt;cardArt&gt;
         &lt;cardBrand&gt;VISA&lt;/cardBrand&gt;
         &lt;cardImageHeight&gt;50&lt;/cardImageHeight&gt;
         &lt;cardImageUrl&gt;https://sandbox.secure.checkout.visa.com/VmeCardArts/wv87HR3X3jqlNXNJu_6YtLQyyO7mpu2aU6Yo3VWGKKM.png&lt;/cardImageUrl&gt;
         &lt;cardImageWidth&gt;77&lt;/cardImageWidth&gt;
         &lt;cardType&gt;DEBIT&lt;/cardType&gt;
      &lt;/cardArt&gt;
   &lt;/cardInfo&gt;
   &lt;paymentDetails&gt;
      &lt;currency&gt;USD&lt;/currency&gt;
      &lt;amount&gt;16.00&lt;/amount&gt;
   &lt;/paymentDetails&gt;
&lt;/decryptPaymentDataResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-decrypt-visa-src-data">{
    &quot;shippingInfo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;500 Main St&quot;,
        &quot;city&quot;: &quot;SEATTLE&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98104&quot;,
        &quot;country&quot;: &quot;US&quot;
    },
    &quot;billingInfo&quot;: {
        &quot;email&quot;: &quot;john@mail.com&quot;,
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;500 Main St&quot;,
        &quot;city&quot;: &quot;SEATTLE&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98104&quot;,
        &quot;country&quot;: &quot;US&quot;
    },
    &quot;cardInfo&quot;: {
        &quot;cardNumber&quot;: &quot;XXXX4242&quot;,
        &quot;expirationDate&quot;: &quot;12/2018&quot;,
        &quot;cardArt&quot;: {
            &quot;cardBrand&quot;: &quot;VISA&quot;,
            &quot;cardImageHeight&quot;: &quot;50&quot;,
            &quot;cardImageUrl&quot;: &quot;https://sandbox.secure.checkout.visa.com/VmeCardArts/wv87HR3X3jqlNXNJu_6YtLQyyO7mpu2aU6Yo3VWGKKM.png&quot;,
            &quot;cardImageWidth&quot;: &quot;77&quot;,
            &quot;cardType&quot;: &quot;DEBIT&quot;
        }
    },
    &quot;paymentDetails&quot;: {
        &quot;currency&quot;: &quot;USD&quot;,
        &quot;amount&quot;: &quot;16.00&quot;
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-decrypt-visa-src-data" style="display: none !important">{
    &quot;shippingInfo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;500 Main St&quot;,
        &quot;city&quot;: &quot;SEATTLE&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98104&quot;,
        &quot;country&quot;: &quot;US&quot;
    },
    &quot;billingInfo&quot;: {
        &quot;email&quot;: &quot;john@mail.com&quot;,
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;500 Main St&quot;,
        &quot;city&quot;: &quot;SEATTLE&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98104&quot;,
        &quot;country&quot;: &quot;US&quot;
    },
    &quot;cardInfo&quot;: {
        &quot;cardNumber&quot;: &quot;XXXX4242&quot;,
        &quot;expirationDate&quot;: &quot;12/2018&quot;,
        &quot;cardArt&quot;: {
            &quot;cardBrand&quot;: &quot;VISA&quot;,
            &quot;cardImageHeight&quot;: &quot;50&quot;,
            &quot;cardImageUrl&quot;: &quot;https://sandbox.secure.checkout.visa.com/VmeCardArts/wv87HR3X3jqlNXNJu_6YtLQyyO7mpu2aU6Yo3VWGKKM.png&quot;,
            &quot;cardImageWidth&quot;: &quot;77&quot;,
            &quot;cardType&quot;: &quot;DEBIT&quot;
        }
    },
    &quot;paymentDetails&quot;: {
        &quot;currency&quot;: &quot;USD&quot;,
        &quot;amount&quot;: &quot;16.00&quot;
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-decrypt-visa-src-data" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-decrypt-visa-src-data">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-decrypt-visa-src-data"></div>
<div id="showCode-php-decrypt-visa-src-data">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-decrypt-visa-src-data"></a>
</p>
<textarea class="php" id="textarea-php-decrypt-visa-src-data" name="textarea-php-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-decrypt-visa-src-data">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-decrypt-visa-src-data"></div>
<div id="showCode-cs-decrypt-visa-src-data">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-decrypt-visa-src-data"></a>
</p>
<textarea class="cs" id="textarea-cs-decrypt-visa-src-data" name="textarea-cs-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-decrypt-visa-src-data">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-decrypt-visa-src-data"></div>
<div id="showCode-java-decrypt-visa-src-data">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-decrypt-visa-src-data"></a>
</p>
<textarea class="java" id="textarea-java-decrypt-visa-src-data" name="textarea-java-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-decrypt-visa-src-data">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont rbCodeCont">
 <div class="sampleWarningCont" id="warning-rb-decrypt-visa-src-data"></div>
<div id="showCode-rb-decrypt-visa-src-data">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-decrypt-visa-src-data"></a>
</p>
<textarea class="ruby" id="textarea-rb-decrypt-visa-src-data" name="textarea-rb-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-decrypt-visa-src-data">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-decrypt-visa-src-data"></div>
<div id="showCode-py-decrypt-visa-src-data">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-decrypt-visa-src-data"></a>
</p>
<textarea class="python" id="textarea-py-decrypt-visa-src-data" name="textarea-py-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-decrypt-visa-src-data">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="decrypt-visa-src-data">
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-decrypt-visa-src-data"></div>
<div id="showCode-js-decrypt-visa-src-data">
 <p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-decrypt-visa-src-data"></a>
</p>
<textarea class="node" id="textarea-js-decrypt-visa-src-data" name="textarea-js-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-decrypt-visa-src-data">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="decrypt-visa-src-data">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="decrypt-visa-src-data">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="decrypt-visa-src-data">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="decrypt-visa-src-data">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="decrypt-visa-src-data">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="decrypt-visa-src-data">Node</button>
</div>
<div class="showCodeCont" id="showCode-decrypt-visa-src-data">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-decrypt-visa-src-data"></div>
<div id="showCode-php-decrypt-visa-src-data">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-php-decrypt-visa-src-data" name="textarea-php-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-decrypt-visa-src-data"></div>
<div id="showCode-cs-decrypt-visa-src-data">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-cs-decrypt-visa-src-data" name="textarea-cs-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-decrypt-visa-src-data"></div>
<div id="showCode-java-decrypt-visa-src-data">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-java-decrypt-visa-src-data" name="textarea-java-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-decrypt-visa-src-data"></div>
<div id="showCode-rb-decrypt-visa-src-data">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-rb-decrypt-visa-src-data" name="textarea-rb-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-decrypt-visa-src-data"></div>
<div id="showCode-py-decrypt-visa-src-data">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-py-decrypt-visa-src-data" name="textarea-py-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-decrypt-visa-src-data"></div>
<div id="showCode-js-decrypt-visa-src-data">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-decrypt-visa-src-data"></a>
</p>
<textarea class="sample-code" id="textarea-js-decrypt-visa-src-data" name="textarea-js-decrypt-visa-src-data" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-decrypt-visa-src-data" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-decrypt-visa-src-data">
<h4 class="panel-title">
<a data-parent="#accordion-decrypt-visa-src-data">
Request Field Description
</a>
 </h4>
</div>
<div class="DetailsResponse" id="collapseReq-decrypt-visa-src-data" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-decrypt-visa-src-data">
<div class="panel-body">
<p><em>decryptPaymentDataRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code>, <code>dataValue</code>, and <code>dataKey</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed. <br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.VCO.ONLINE.PAYMENT</code> for Visa SRC transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
The payment gateway expects the encrypted payment data and metadata for the encryption keys.<br /><br />Use the JavaScript Visa SRC integration's <code>encPaymentData</code> field to obtain the value for <code>dataValue</code>.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>dataKey</td>
<td>The encryption key used to encrypt the payment data.<br /><br />
Use the JavaScript Visa SRC integration's <code>encKey</code> field to obtain the value for <code>dataKey</code>.</td>
<td><div>String, up to 128 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>callId</td>
<td>Transaction ID generated by the Visa SRC SDK.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-decrypt-visa-src-data">
<h4 class="panel-title">
<a data-parent="#accordion-decrypt-visa-src-data">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-decrypt-visa-src-data">
<div class="panel-body">
<p><em>decryptPaymentDataResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
 If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to six characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>shippingInfo</td>
<td>This element is a container for the customer's shipping information.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
 <td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td>billingInfo</td>
<td>This element is a container for the customer's billing information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
 <td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature. <br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
For example, janedoe@example.com.</div></td>
</tr>
<tr>
<td>cardInfo</td>
<td>This element is a container for the customer's card information, obtained from Visa SRC.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='oneBullet'>cardNumber</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>expirationDate</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cardArt</td>
<td>This element is a container for card art information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>cardBrand</td>
<td>Brand of the credit card.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardImageHeight</td>
<td>Image height in pixels.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardImageUrl</td>
<td>URL where the card art can be found.<br /><br />
</td>
 <td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardImageWidth</td>
<td>Image width in pixels.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardType</td>
<td>The type of account associated with the card.<br /><br />
</td>
<td><div>String. Either <code>debit</code> or <code>credit</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paymentDetails</td>
<td>This element is a container for various payment details.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>currency</td>
<td>Currency of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>USD</code> as the currency.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>promoCode</td>
<td>Optional promotion code.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>misc</td>
<td>Miscellaneous optional charges.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>giftWrap</td>
<td>Value of gift wrapping charge.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>discount</td>
<td>Value of discount, if any.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Value of tax.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shippingHandling</td>
<td>Value of shipping and handling charges.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>subTotal</td>
<td>Value of the subtotal.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderID</td>
<td>Order identification number.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td>Value of the total amount.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="visa-secure-remote-commerce-create-a-visa-src-transaction">Create a Visa SRC Transaction</h3>
 <p>Use this function to create an Authorize.Net payment transaction request using Visa SRC data in place of card data.<br />
Order, tax, duty, shipping, customer, billing, and shipping information are obtained from Visa SRC so you are not required to submit those fields.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-a-visa-src-transactionTryIt" href="#console-create-a-visa-src-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-visa-src-transactionphp" href="#php-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-visa-src-transactioncs" href="#cs-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-visa-src-transactionjava" href="#java-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-visa-src-transactionrb" href="#ruby-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-visa-src-transactionpy" href="#python-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-visa-src-transactionjs" href="#node-create-a-visa-src-transaction" class="visa-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-visa-src-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-visa-src-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-visa-src-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-visa-src-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;45.00&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.VCO.ONLINE.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;eyJkYXRhIjoiQkRQTldTdE1tR2V3UVVXR2c0bzdFXC9qKzFjcTFUNzhxeVU4NGI2N2l0amNZSTh3UFlBT2hzaGpoWlBycWRVcjRYd1BNYmo0emNHTWR5KysxSDJWa1BPWStCT01GMjV1YjE5Y1g0bkN2a1hVVU9UakRsbEIxVGdTcjhKSFp4Z3A5ckNnc1NVZ2JCZ0tmNjBYS3V0WGY2YWpcL284WkliS25yS1E4U2gwb3VMQUtsb1VNbit2UHU0K0E3V0tycXJhdXo5SnZPUXA2dmhJcStIS2pVY1VOQ0lUUHlGaG1PRXRxK0grdzB2UmExQ0U2V2hGQk5uQ0hxenpXS2NrQlwvMG5xTFpSVFliRjBwK3Z5QmlWYVdIZWdoRVJmSHhSdGJ6cGVjelJQUHVGc2ZwSFZzNDhvUExDXC9rXC8xTU5kNDdrelwvcEhEY1JcL0R5NmFVTStsTmZvaWx5XC9RSk4rdFMzbTBIZk90SVNBUHFPbVhlbXZyNnhKQ2pDWmxDdXcwQzltWHpcL29iSHBvZnVJRVM4cjljcUdHc1VBUERwdzdnNjQybTRQendLRitIQnVZVW5lV0RCTlNEMnU2amJBRzMiLCJ2ZXJzaW9uIjoiRUNfdjEiLCJoZWFkZXIiOnsiYXBwbGljYXRpb25EYXRhIjoiOTRlZTA1OTMzNWU1ODdlNTAxY2M0YmY5MDYxM2UwODE0ZjAwYTdiMDhiYzdjNjQ4ZmQ4NjVhMmFmNmEyMmNjMiIsInRyYW5zYWN0aW9uSWQiOiJjMWNhZjVhZTcyZjAwMzlhODJiYWQ5MmI4MjgzNjM3MzRmODViZjJmOWNhZGYxOTNkMWJhZDlkZGNiNjBhNzk1IiwiZXBoZW1lcmFsUHVibGljS2V5IjoiTUlJQlN6Q0NBUU1HQnlxR1NNNDlBZ0V3Z2ZjQ0FRRXdMQVlIS29aSXpqMEJBUUloQVBcL1wvXC9cLzhBQUFBQkFBQUFBQUFBQUFBQUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL01Gc0VJUFwvXC9cL1wvOEFBQUFCQUFBQUFBQUFBQUFBQUFBQVwvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cLzhCQ0JheGpYWXFqcVQ1N1BydlZWMm1JYThaUjBHc014VHNQWTd6ancrSjlKZ1N3TVZBTVNkTmdpRzV3U1RhbVo0NFJPZEpyZUJuMzZRQkVFRWF4ZlI4dUVzUWtmNHZPYmxZNlJBOG5jRGZZRXQ2ek9nOUtFNVJkaVl3cFpQNDBMaVwvaHBcL200N242MHA4RDU0V0s4NHpWMnN4WHM3THRrQm9ONzlSOVFJaEFQXC9cL1wvXC84QUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cLys4NXZxdHB4ZWVoUE81eXNMOFl5VlJBZ0VCQTBJQUJHbStnc2wwUFpGVFwva0RkVVNreHd5Zm84SnB3VFFRekJtOWxKSm5tVGw0REdVdkFENEdzZUdqXC9wc2hCWjBLM1RldXFEdFwvdERMYkUrOFwvbTB5Q21veHc9IiwicHVibGljS2V5SGFzaCI6IlwvYmI5Q05DMzZ1QmhlSEZQYm1vaEI3T28xT3NYMkora0pxdjQ4ek9WVmlRPSJ9LCJzaWduYXR1cmUiOiJNSUlEUWdZSktvWklodmNOQVFjQ29JSURNekNDQXk4Q0FRRXhDekFKQmdVckRnTUNHZ1VBTUFzR0NTcUdTSWIzRFFFSEFhQ0NBaXN3Z2dJbk1JSUJsS0FEQWdFQ0FoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQXdKekVsTUNNR0ExVUVBeDRjQUdNQWFBQnRBR0VBYVFCQUFIWUFhUUJ6QUdFQUxnQmpBRzhBYlRBZUZ3MHhOREF4TURFd05qQXdNREJhRncweU5EQXhNREV3TmpBd01EQmFNQ2N4SlRBakJnTlZCQU1lSEFCakFHZ0FiUUJoQUdrQVFBQjJBR2tBY3dCaEFDNEFZd0J2QUcwd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFOQzgra2d0Z212V0YxT3pqZ0ROcmpURUJSdW9cLzVNS3ZsTTE0NnBBZjdHeDQxYmxFOXc0ZklYSkFEN0ZmTzdRS2pJWFlOdDM5ckx5eTd4RHdiXC81SWtaTTYwVFoyaUkxcGo1NVVjOGZkNGZ6T3BrM2Z0WmFRR1hOTFlwdEcxZDlWN0lTODJPdXA5TU1vMUJQVnJYVFBITmNzTTk5RVBVblBxZGJlR2M4N20wckFnTUJBQUdqWERCYU1GZ0dBMVVkQVFSUk1FK0FFSFpXUHJXdEpkN1laNDMxaENnN1lGU2hLVEFuTVNVd0l3WURWUVFESGh3QVl3Qm9BRzBBWVFCcEFFQUFkZ0JwQUhNQVlRQXVBR01BYndCdGdoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQURnWUVBYlVLWUNrdUlLUzlRUTJtRmNNWVJFSW0ybCtYZzhcL0pYditHQlZRSmtPS29zY1k0aU5ERkFcL2JRbG9nZjlMTFU4NFRId05SbnN2VjNQcnY3UlRZODFncTBkdEM4elljQWFBa0NISUkzeXFNbko0QU91NkVPVzlrSmsyMzJnU0U3V2xDdEhiZkxTS2Z1U2dRWDhLWFFZdVpMazJScjYzTjhBcFhzWHdCTDNjSjB4Z2VBd2dkMENBUUV3T3pBbk1TVXdJd1lEVlFRREhod0FZd0JvQUcwQVlRQnBBRUFBZGdCcEFITUFZUUF1QUdNQWJ3QnRBaEJjbCtQZjMrVTRwazEzblZEOW53UVFNQWtHQlNzT0F3SWFCUUF3RFFZSktvWklodmNOQVFFQkJRQUVnWUJhSzNFbE9zdGJIOFdvb3NlREFCZitKZ1wvMTI5SmNJYXdtN2M2VnhuN1phc05iQXEzdEF0OFB0eSt1UUNnc3NYcVprTEE3a3oyR3pNb2xOdHY5d1ltdTlVandhcjFQSFlTK0JcL29Hbm96NTkxd2phZ1hXUnowbk1vNXkzTzFLelgwZDhDUkhBVmE4OFNyVjFhNUpJaVJldjNvU3RJcXd2NXh1WmxkYWc2VHI4dz09In0&#x3D;&lt;/dataValue&gt;
        &lt;dataKey&gt;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&lt;/dataKey&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;callId&gt;123456789&lt;/callId&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo&lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-visa-src-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;45.00&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.VCO.ONLINE.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;eyJkYXRhIjoiQkRQTldTdE1tR2V3UVVXR2c0bzdFXC9qKzFjcTFUNzhxeVU4NGI2N2l0amNZSTh3UFlBT2hzaGpoWlBycWRVcjRYd1BNYmo0emNHTWR5KysxSDJWa1BPWStCT01GMjV1YjE5Y1g0bkN2a1hVVU9UakRsbEIxVGdTcjhKSFp4Z3A5ckNnc1NVZ2JCZ0tmNjBYS3V0WGY2YWpcL284WkliS25yS1E4U2gwb3VMQUtsb1VNbit2UHU0K0E3V0tycXJhdXo5SnZPUXA2dmhJcStIS2pVY1VOQ0lUUHlGaG1PRXRxK0grdzB2UmExQ0U2V2hGQk5uQ0hxenpXS2NrQlwvMG5xTFpSVFliRjBwK3Z5QmlWYVdIZWdoRVJmSHhSdGJ6cGVjelJQUHVGc2ZwSFZzNDhvUExDXC9rXC8xTU5kNDdrelwvcEhEY1JcL0R5NmFVTStsTmZvaWx5XC9RSk4rdFMzbTBIZk90SVNBUHFPbVhlbXZyNnhKQ2pDWmxDdXcwQzltWHpcL29iSHBvZnVJRVM4cjljcUdHc1VBUERwdzdnNjQybTRQendLRitIQnVZVW5lV0RCTlNEMnU2amJBRzMiLCJ2ZXJzaW9uIjoiRUNfdjEiLCJoZWFkZXIiOnsiYXBwbGljYXRpb25EYXRhIjoiOTRlZTA1OTMzNWU1ODdlNTAxY2M0YmY5MDYxM2UwODE0ZjAwYTdiMDhiYzdjNjQ4ZmQ4NjVhMmFmNmEyMmNjMiIsInRyYW5zYWN0aW9uSWQiOiJjMWNhZjVhZTcyZjAwMzlhODJiYWQ5MmI4MjgzNjM3MzRmODViZjJmOWNhZGYxOTNkMWJhZDlkZGNiNjBhNzk1IiwiZXBoZW1lcmFsUHVibGljS2V5IjoiTUlJQlN6Q0NBUU1HQnlxR1NNNDlBZ0V3Z2ZjQ0FRRXdMQVlIS29aSXpqMEJBUUloQVBcL1wvXC9cLzhBQUFBQkFBQUFBQUFBQUFBQUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL01Gc0VJUFwvXC9cL1wvOEFBQUFCQUFBQUFBQUFBQUFBQUFBQVwvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cLzhCQ0JheGpYWXFqcVQ1N1BydlZWMm1JYThaUjBHc014VHNQWTd6ancrSjlKZ1N3TVZBTVNkTmdpRzV3U1RhbVo0NFJPZEpyZUJuMzZRQkVFRWF4ZlI4dUVzUWtmNHZPYmxZNlJBOG5jRGZZRXQ2ek9nOUtFNVJkaVl3cFpQNDBMaVwvaHBcL200N242MHA4RDU0V0s4NHpWMnN4WHM3THRrQm9ONzlSOVFJaEFQXC9cL1wvXC84QUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cLys4NXZxdHB4ZWVoUE81eXNMOFl5VlJBZ0VCQTBJQUJHbStnc2wwUFpGVFwva0RkVVNreHd5Zm84SnB3VFFRekJtOWxKSm5tVGw0REdVdkFENEdzZUdqXC9wc2hCWjBLM1RldXFEdFwvdERMYkUrOFwvbTB5Q21veHc9IiwicHVibGljS2V5SGFzaCI6IlwvYmI5Q05DMzZ1QmhlSEZQYm1vaEI3T28xT3NYMkora0pxdjQ4ek9WVmlRPSJ9LCJzaWduYXR1cmUiOiJNSUlEUWdZSktvWklodmNOQVFjQ29JSURNekNDQXk4Q0FRRXhDekFKQmdVckRnTUNHZ1VBTUFzR0NTcUdTSWIzRFFFSEFhQ0NBaXN3Z2dJbk1JSUJsS0FEQWdFQ0FoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQXdKekVsTUNNR0ExVUVBeDRjQUdNQWFBQnRBR0VBYVFCQUFIWUFhUUJ6QUdFQUxnQmpBRzhBYlRBZUZ3MHhOREF4TURFd05qQXdNREJhRncweU5EQXhNREV3TmpBd01EQmFNQ2N4SlRBakJnTlZCQU1lSEFCakFHZ0FiUUJoQUdrQVFBQjJBR2tBY3dCaEFDNEFZd0J2QUcwd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFOQzgra2d0Z212V0YxT3pqZ0ROcmpURUJSdW9cLzVNS3ZsTTE0NnBBZjdHeDQxYmxFOXc0ZklYSkFEN0ZmTzdRS2pJWFlOdDM5ckx5eTd4RHdiXC81SWtaTTYwVFoyaUkxcGo1NVVjOGZkNGZ6T3BrM2Z0WmFRR1hOTFlwdEcxZDlWN0lTODJPdXA5TU1vMUJQVnJYVFBITmNzTTk5RVBVblBxZGJlR2M4N20wckFnTUJBQUdqWERCYU1GZ0dBMVVkQVFSUk1FK0FFSFpXUHJXdEpkN1laNDMxaENnN1lGU2hLVEFuTVNVd0l3WURWUVFESGh3QVl3Qm9BRzBBWVFCcEFFQUFkZ0JwQUhNQVlRQXVBR01BYndCdGdoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQURnWUVBYlVLWUNrdUlLUzlRUTJtRmNNWVJFSW0ybCtYZzhcL0pYditHQlZRSmtPS29zY1k0aU5ERkFcL2JRbG9nZjlMTFU4NFRId05SbnN2VjNQcnY3UlRZODFncTBkdEM4elljQWFBa0NISUkzeXFNbko0QU91NkVPVzlrSmsyMzJnU0U3V2xDdEhiZkxTS2Z1U2dRWDhLWFFZdVpMazJScjYzTjhBcFhzWHdCTDNjSjB4Z2VBd2dkMENBUUV3T3pBbk1TVXdJd1lEVlFRREhod0FZd0JvQUcwQVlRQnBBRUFBZGdCcEFITUFZUUF1QUdNQWJ3QnRBaEJjbCtQZjMrVTRwazEzblZEOW53UVFNQWtHQlNzT0F3SWFCUUF3RFFZSktvWklodmNOQVFFQkJRQUVnWUJhSzNFbE9zdGJIOFdvb3NlREFCZitKZ1wvMTI5SmNJYXdtN2M2VnhuN1phc05iQXEzdEF0OFB0eSt1UUNnc3NYcVprTEE3a3oyR3pNb2xOdHY5d1ltdTlVandhcjFQSFlTK0JcL29Hbm96NTkxd2phZ1hXUnowbk1vNXkzTzFLelgwZDhDUkhBVmE4OFNyVjFhNUpJaVJldjNvU3RJcXd2NXh1WmxkYWc2VHI4dz09In0&#x3D;&lt;/dataValue&gt;
        &lt;dataKey&gt;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&lt;/dataKey&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;callId&gt;123456789&lt;/callId&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo&lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;blue&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-visa-src-transaction" spellcheck="false" class="JSON JSONRequest">{
  &quot;createTransactionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;transactionRequest&quot;: {
      &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
      &quot;amount&quot;: &quot;45.00&quot;,
      &quot;payment&quot;: {
        &quot;opaqueData&quot;: {
          &quot;dataDescriptor&quot;: &quot;COMMON.VCO.ONLINE.PAYMENT&quot;,
          &quot;dataValue&quot;: &quot;eyJkYXRhIjoiQkRQTldTdE1tR2V3UVVXR2c0bzdFXC9qKzFjcTFUNzhxeVU4NGI2N2l0amNZSTh3UFlBT2hzaGpoWlBycWRVcjRYd1BNYmo0emNHTWR5KysxSDJWa1BPWStCT01GMjV1YjE5Y1g0bkN2a1hVVU9UakRsbEIxVGdTcjhKSFp4Z3A5ckNnc1NVZ2JCZ0tmNjBYS3V0WGY2YWpcL284WkliS25yS1E4U2gwb3VMQUtsb1VNbit2UHU0K0E3V0tycXJhdXo5SnZPUXA2dmhJcStIS2pVY1VOQ0lUUHlGaG1PRXRxK0grdzB2UmExQ0U2V2hGQk5uQ0hxenpXS2NrQlwvMG5xTFpSVFliRjBwK3Z5QmlWYVdIZWdoRVJmSHhSdGJ6cGVjelJQUHVGc2ZwSFZzNDhvUExDXC9rXC8xTU5kNDdrelwvcEhEY1JcL0R5NmFVTStsTmZvaWx5XC9RSk4rdFMzbTBIZk90SVNBUHFPbVhlbXZyNnhKQ2pDWmxDdXcwQzltWHpcL29iSHBvZnVJRVM4cjljcUdHc1VBUERwdzdnNjQybTRQendLRitIQnVZVW5lV0RCTlNEMnU2amJBRzMiLCJ2ZXJzaW9uIjoiRUNfdjEiLCJoZWFkZXIiOnsiYXBwbGljYXRpb25EYXRhIjoiOTRlZTA1OTMzNWU1ODdlNTAxY2M0YmY5MDYxM2UwODE0ZjAwYTdiMDhiYzdjNjQ4ZmQ4NjVhMmFmNmEyMmNjMiIsInRyYW5zYWN0aW9uSWQiOiJjMWNhZjVhZTcyZjAwMzlhODJiYWQ5MmI4MjgzNjM3MzRmODViZjJmOWNhZGYxOTNkMWJhZDlkZGNiNjBhNzk1IiwiZXBoZW1lcmFsUHVibGljS2V5IjoiTUlJQlN6Q0NBUU1HQnlxR1NNNDlBZ0V3Z2ZjQ0FRRXdMQVlIS29aSXpqMEJBUUloQVBcL1wvXC9cLzhBQUFBQkFBQUFBQUFBQUFBQUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL01Gc0VJUFwvXC9cL1wvOEFBQUFCQUFBQUFBQUFBQUFBQUFBQVwvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cLzhCQ0JheGpYWXFqcVQ1N1BydlZWMm1JYThaUjBHc014VHNQWTd6ancrSjlKZ1N3TVZBTVNkTmdpRzV3U1RhbVo0NFJPZEpyZUJuMzZRQkVFRWF4ZlI4dUVzUWtmNHZPYmxZNlJBOG5jRGZZRXQ2ek9nOUtFNVJkaVl3cFpQNDBMaVwvaHBcL200N242MHA4RDU0V0s4NHpWMnN4WHM3THRrQm9ONzlSOVFJaEFQXC9cL1wvXC84QUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cLys4NXZxdHB4ZWVoUE81eXNMOFl5VlJBZ0VCQTBJQUJHbStnc2wwUFpGVFwva0RkVVNreHd5Zm84SnB3VFFRekJtOWxKSm5tVGw0REdVdkFENEdzZUdqXC9wc2hCWjBLM1RldXFEdFwvdERMYkUrOFwvbTB5Q21veHc9IiwicHVibGljS2V5SGFzaCI6IlwvYmI5Q05DMzZ1QmhlSEZQYm1vaEI3T28xT3NYMkora0pxdjQ4ek9WVmlRPSJ9LCJzaWduYXR1cmUiOiJNSUlEUWdZSktvWklodmNOQVFjQ29JSURNekNDQXk4Q0FRRXhDekFKQmdVckRnTUNHZ1VBTUFzR0NTcUdTSWIzRFFFSEFhQ0NBaXN3Z2dJbk1JSUJsS0FEQWdFQ0FoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQXdKekVsTUNNR0ExVUVBeDRjQUdNQWFBQnRBR0VBYVFCQUFIWUFhUUJ6QUdFQUxnQmpBRzhBYlRBZUZ3MHhOREF4TURFd05qQXdNREJhRncweU5EQXhNREV3TmpBd01EQmFNQ2N4SlRBakJnTlZCQU1lSEFCakFHZ0FiUUJoQUdrQVFBQjJBR2tBY3dCaEFDNEFZd0J2QUcwd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFOQzgra2d0Z212V0YxT3pqZ0ROcmpURUJSdW9cLzVNS3ZsTTE0NnBBZjdHeDQxYmxFOXc0ZklYSkFEN0ZmTzdRS2pJWFlOdDM5ckx5eTd4RHdiXC81SWtaTTYwVFoyaUkxcGo1NVVjOGZkNGZ6T3BrM2Z0WmFRR1hOTFlwdEcxZDlWN0lTODJPdXA5TU1vMUJQVnJYVFBITmNzTTk5RVBVblBxZGJlR2M4N20wckFnTUJBQUdqWERCYU1GZ0dBMVVkQVFSUk1FK0FFSFpXUHJXdEpkN1laNDMxaENnN1lGU2hLVEFuTVNVd0l3WURWUVFESGh3QVl3Qm9BRzBBWVFCcEFFQUFkZ0JwQUhNQVlRQXVBR01BYndCdGdoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQURnWUVBYlVLWUNrdUlLUzlRUTJtRmNNWVJFSW0ybCtYZzhcL0pYditHQlZRSmtPS29zY1k0aU5ERkFcL2JRbG9nZjlMTFU4NFRId05SbnN2VjNQcnY3UlRZODFncTBkdEM4elljQWFBa0NISUkzeXFNbko0QU91NkVPVzlrSmsyMzJnU0U3V2xDdEhiZkxTS2Z1U2dRWDhLWFFZdVpMazJScjYzTjhBcFhzWHdCTDNjSjB4Z2VBd2dkMENBUUV3T3pBbk1TVXdJd1lEVlFRREhod0FZd0JvQUcwQVlRQnBBRUFBZGdCcEFITUFZUUF1QUdNQWJ3QnRBaEJjbCtQZjMrVTRwazEzblZEOW53UVFNQWtHQlNzT0F3SWFCUUF3RFFZSktvWklodmNOQVFFQkJRQUVnWUJhSzNFbE9zdGJIOFdvb3NlREFCZitKZ1wvMTI5SmNJYXdtN2M2VnhuN1phc05iQXEzdEF0OFB0eSt1UUNnc3NYcVprTEE3a3oyR3pNb2xOdHY5d1ltdTlVandhcjFQSFlTK0JcL29Hbm96NTkxd2phZ1hXUnowbk1vNXkzTzFLelgwZDhDUkhBVmE4OFNyVjFhNUpJaVJldjNvU3RJcXd2NXh1WmxkYWc2VHI4dz09In0&#x3D;&quot;,
          &quot;dataKey&quot;: &quot;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&quot;
        }
      },
      &quot;callId&quot;: &quot;123456789&quot;,
      &quot;lineItems&quot;: {
        &quot;lineItem&quot;: {
          &quot;itemId&quot;: &quot;1&quot;,
          &quot;name&quot;: &quot;vase&quot;,
          &quot;description&quot;: &quot;Cannes logo&quot;,
          &quot;quantity&quot;: &quot;18&quot;,
          &quot;unitPrice&quot;: &quot;45.00&quot;
        }
      },
      &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
      &quot;userFields&quot;: {
        &quot;userField&quot;: [{
            &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
            &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
          },
          {
            &quot;name&quot;: &quot;favorite_color&quot;,
            &quot;value&quot;: &quot;blue&quot;
          }
        ]
      }
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-visa-src-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;createTransactionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;transactionRequest&quot;: {
      &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
      &quot;amount&quot;: &quot;45.00&quot;,
      &quot;payment&quot;: {
        &quot;opaqueData&quot;: {
          &quot;dataDescriptor&quot;: &quot;COMMON.VCO.ONLINE.PAYMENT&quot;,
          &quot;dataValue&quot;: &quot;eyJkYXRhIjoiQkRQTldTdE1tR2V3UVVXR2c0bzdFXC9qKzFjcTFUNzhxeVU4NGI2N2l0amNZSTh3UFlBT2hzaGpoWlBycWRVcjRYd1BNYmo0emNHTWR5KysxSDJWa1BPWStCT01GMjV1YjE5Y1g0bkN2a1hVVU9UakRsbEIxVGdTcjhKSFp4Z3A5ckNnc1NVZ2JCZ0tmNjBYS3V0WGY2YWpcL284WkliS25yS1E4U2gwb3VMQUtsb1VNbit2UHU0K0E3V0tycXJhdXo5SnZPUXA2dmhJcStIS2pVY1VOQ0lUUHlGaG1PRXRxK0grdzB2UmExQ0U2V2hGQk5uQ0hxenpXS2NrQlwvMG5xTFpSVFliRjBwK3Z5QmlWYVdIZWdoRVJmSHhSdGJ6cGVjelJQUHVGc2ZwSFZzNDhvUExDXC9rXC8xTU5kNDdrelwvcEhEY1JcL0R5NmFVTStsTmZvaWx5XC9RSk4rdFMzbTBIZk90SVNBUHFPbVhlbXZyNnhKQ2pDWmxDdXcwQzltWHpcL29iSHBvZnVJRVM4cjljcUdHc1VBUERwdzdnNjQybTRQendLRitIQnVZVW5lV0RCTlNEMnU2amJBRzMiLCJ2ZXJzaW9uIjoiRUNfdjEiLCJoZWFkZXIiOnsiYXBwbGljYXRpb25EYXRhIjoiOTRlZTA1OTMzNWU1ODdlNTAxY2M0YmY5MDYxM2UwODE0ZjAwYTdiMDhiYzdjNjQ4ZmQ4NjVhMmFmNmEyMmNjMiIsInRyYW5zYWN0aW9uSWQiOiJjMWNhZjVhZTcyZjAwMzlhODJiYWQ5MmI4MjgzNjM3MzRmODViZjJmOWNhZGYxOTNkMWJhZDlkZGNiNjBhNzk1IiwiZXBoZW1lcmFsUHVibGljS2V5IjoiTUlJQlN6Q0NBUU1HQnlxR1NNNDlBZ0V3Z2ZjQ0FRRXdMQVlIS29aSXpqMEJBUUloQVBcL1wvXC9cLzhBQUFBQkFBQUFBQUFBQUFBQUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL01Gc0VJUFwvXC9cL1wvOEFBQUFCQUFBQUFBQUFBQUFBQUFBQVwvXC9cL1wvXC9cL1wvXC9cL1wvXC9cL1wvXC9cLzhCQ0JheGpYWXFqcVQ1N1BydlZWMm1JYThaUjBHc014VHNQWTd6ancrSjlKZ1N3TVZBTVNkTmdpRzV3U1RhbVo0NFJPZEpyZUJuMzZRQkVFRWF4ZlI4dUVzUWtmNHZPYmxZNlJBOG5jRGZZRXQ2ek9nOUtFNVJkaVl3cFpQNDBMaVwvaHBcL200N242MHA4RDU0V0s4NHpWMnN4WHM3THRrQm9ONzlSOVFJaEFQXC9cL1wvXC84QUFBQUFcL1wvXC9cL1wvXC9cL1wvXC9cLys4NXZxdHB4ZWVoUE81eXNMOFl5VlJBZ0VCQTBJQUJHbStnc2wwUFpGVFwva0RkVVNreHd5Zm84SnB3VFFRekJtOWxKSm5tVGw0REdVdkFENEdzZUdqXC9wc2hCWjBLM1RldXFEdFwvdERMYkUrOFwvbTB5Q21veHc9IiwicHVibGljS2V5SGFzaCI6IlwvYmI5Q05DMzZ1QmhlSEZQYm1vaEI3T28xT3NYMkora0pxdjQ4ek9WVmlRPSJ9LCJzaWduYXR1cmUiOiJNSUlEUWdZSktvWklodmNOQVFjQ29JSURNekNDQXk4Q0FRRXhDekFKQmdVckRnTUNHZ1VBTUFzR0NTcUdTSWIzRFFFSEFhQ0NBaXN3Z2dJbk1JSUJsS0FEQWdFQ0FoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQXdKekVsTUNNR0ExVUVBeDRjQUdNQWFBQnRBR0VBYVFCQUFIWUFhUUJ6QUdFQUxnQmpBRzhBYlRBZUZ3MHhOREF4TURFd05qQXdNREJhRncweU5EQXhNREV3TmpBd01EQmFNQ2N4SlRBakJnTlZCQU1lSEFCakFHZ0FiUUJoQUdrQVFBQjJBR2tBY3dCaEFDNEFZd0J2QUcwd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFOQzgra2d0Z212V0YxT3pqZ0ROcmpURUJSdW9cLzVNS3ZsTTE0NnBBZjdHeDQxYmxFOXc0ZklYSkFEN0ZmTzdRS2pJWFlOdDM5ckx5eTd4RHdiXC81SWtaTTYwVFoyaUkxcGo1NVVjOGZkNGZ6T3BrM2Z0WmFRR1hOTFlwdEcxZDlWN0lTODJPdXA5TU1vMUJQVnJYVFBITmNzTTk5RVBVblBxZGJlR2M4N20wckFnTUJBQUdqWERCYU1GZ0dBMVVkQVFSUk1FK0FFSFpXUHJXdEpkN1laNDMxaENnN1lGU2hLVEFuTVNVd0l3WURWUVFESGh3QVl3Qm9BRzBBWVFCcEFFQUFkZ0JwQUhNQVlRQXVBR01BYndCdGdoQmNsK1BmMytVNHBrMTNuVkQ5bndRUU1Ba0dCU3NPQXdJZEJRQURnWUVBYlVLWUNrdUlLUzlRUTJtRmNNWVJFSW0ybCtYZzhcL0pYditHQlZRSmtPS29zY1k0aU5ERkFcL2JRbG9nZjlMTFU4NFRId05SbnN2VjNQcnY3UlRZODFncTBkdEM4elljQWFBa0NISUkzeXFNbko0QU91NkVPVzlrSmsyMzJnU0U3V2xDdEhiZkxTS2Z1U2dRWDhLWFFZdVpMazJScjYzTjhBcFhzWHdCTDNjSjB4Z2VBd2dkMENBUUV3T3pBbk1TVXdJd1lEVlFRREhod0FZd0JvQUcwQVlRQnBBRUFBZGdCcEFITUFZUUF1QUdNQWJ3QnRBaEJjbCtQZjMrVTRwazEzblZEOW53UVFNQWtHQlNzT0F3SWFCUUF3RFFZSktvWklodmNOQVFFQkJRQUVnWUJhSzNFbE9zdGJIOFdvb3NlREFCZitKZ1wvMTI5SmNJYXdtN2M2VnhuN1phc05iQXEzdEF0OFB0eSt1UUNnc3NYcVprTEE3a3oyR3pNb2xOdHY5d1ltdTlVandhcjFQSFlTK0JcL29Hbm96NTkxd2phZ1hXUnowbk1vNXkzTzFLelgwZDhDUkhBVmE4OFNyVjFhNUpJaVJldjNvU3RJcXd2NXh1WmxkYWc2VHI4dz09In0&#x3D;&quot;,
          &quot;dataKey&quot;: &quot;qGl+69iAWXJ13+18jHgBO2zHCuekawWcApfLhGnbYXD4GsI9EOM2Y5V8zGXvr1lF3hjGMT0NoD2thxzR7CrAvgfgw7lAJzlGIACOZnEkx70ywnJHAR3sGO8hyq9f1Fk&quot;
        }
      },
      &quot;callId&quot;: &quot;123456789&quot;,
      &quot;lineItems&quot;: {
        &quot;lineItem&quot;: {
          &quot;itemId&quot;: &quot;1&quot;,
          &quot;name&quot;: &quot;vase&quot;,
          &quot;description&quot;: &quot;Cannes logo&quot;,
          &quot;quantity&quot;: &quot;18&quot;,
          &quot;unitPrice&quot;: &quot;45.00&quot;
        }
      },
      &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
      &quot;userFields&quot;: {
        &quot;userField&quot;: [{
            &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
            &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
          },
          {
            &quot;name&quot;: &quot;favorite_color&quot;,
            &quot;value&quot;: &quot;blue&quot;
          }
        ]
      }
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-visa-src-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-visa-src-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-visa-src-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-a-visa-src-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-visa-src-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;UGELQC&lt;/authCode&gt;
        &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2148061808&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;message&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/message&gt;
        &lt;userFields&gt;
            &lt;userField&gt;
                &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
                &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
            &lt;/userField&gt;
            &lt;userField&gt;
                &lt;name&gt;favorite_color&lt;/name&gt;
                &lt;value&gt;blue&lt;/value&gt;
            &lt;/userField&gt;
        &lt;/userFields&gt;
        &lt;transHashSha2 /&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-visa-src-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;UGELQC&lt;/authCode&gt;
        &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
        &lt;cavvResultCode /&gt;
        &lt;transId&gt;2148061808&lt;/transId&gt;
        &lt;refTransID /&gt;
        &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;message&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/message&gt;
        &lt;userFields&gt;
            &lt;userField&gt;
                &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
                &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
            &lt;/userField&gt;
            &lt;userField&gt;
                &lt;name&gt;favorite_color&lt;/name&gt;
                &lt;value&gt;blue&lt;/value&gt;
            &lt;/userField&gt;
        &lt;/userFields&gt;
        &lt;transHashSha2 /&gt;
    &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-visa-src-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;UGELQC&quot;,
        &quot;avsResultCode&quot;: &quot;E&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2148061808&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;0B428D8A928AAC61121AF2F6EAC5FF3F&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-visa-src-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;UGELQC&quot;,
        &quot;avsResultCode&quot;: &quot;E&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2148061808&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;0B428D8A928AAC61121AF2F6EAC5FF3F&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-a-visa-src-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-a-visa-src-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-visa-src-transaction"></div>
<div id="showCode-php-create-a-visa-src-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-visa-src-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-a-visa-src-transaction" name="textarea-php-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-visa-src-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-visa-src-transaction"></div>
<div id="showCode-cs-create-a-visa-src-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-visa-src-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-a-visa-src-transaction" name="textarea-cs-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-visa-src-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-visa-src-transaction"></div>
<div id="showCode-java-create-a-visa-src-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-visa-src-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-a-visa-src-transaction" name="textarea-java-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-a-visa-src-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-visa-src-transaction"></div>
<div id="showCode-rb-create-a-visa-src-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-visa-src-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-visa-src-transaction" name="textarea-rb-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-visa-src-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-visa-src-transaction"></div>
<div id="showCode-py-create-a-visa-src-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-visa-src-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-a-visa-src-transaction" name="textarea-py-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-visa-src-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-visa-src-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-visa-src-transaction"></div>
<div id="showCode-js-create-a-visa-src-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-visa-src-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-a-visa-src-transaction" name="textarea-js-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-visa-src-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-visa-src-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-visa-src-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-visa-src-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-visa-src-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-visa-src-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-visa-src-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-a-visa-src-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-visa-src-transaction"></div>
<div id="showCode-php-create-a-visa-src-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-visa-src-transaction" name="textarea-php-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-visa-src-transaction"></div>
 <div id="showCode-cs-create-a-visa-src-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-visa-src-transaction" name="textarea-cs-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-visa-src-transaction"></div>
<div id="showCode-java-create-a-visa-src-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-a-visa-src-transaction" name="textarea-java-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-visa-src-transaction"></div>
<div id="showCode-rb-create-a-visa-src-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-visa-src-transaction" name="textarea-rb-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-visa-src-transaction"></div>
<div id="showCode-py-create-a-visa-src-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-visa-src-transaction" name="textarea-py-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-visa-src-transaction"></div>
<div id="showCode-js-create-a-visa-src-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-visa-src-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-visa-src-transaction" name="textarea-js-create-a-visa-src-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-visa-src-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-visa-src-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-visa-src-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-visa-src-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-visa-src-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely. <br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction, or use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This field allows the customer to choose a payment method in the lightbox, but then approve the amount directly on the merchant's site. The merchant only receives the shipping address after the lightbox authorization is complete, so you may need to add shipping and other charges afterward.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td><strong>Required.</strong><br />
This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code>, <code>dataValue</code>, and <code>dataKey</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed. <br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.VCO.ONLINE.PAYMENT</code> for Visa SRC transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data. The payment gateway expects the encrypted payment data and metadata for the encryption keys.<br /><br />
Use the JavaScript Visa SRC integration's <code>encPaymentData</code> field to obtain the value for <code>dataValue</code>.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataKey</td>
<td>The encryption key used to encrypt the payment data.<br /><br />
Use the JavaScript Visa SRC integration's <code>encKey</code> field to obtain the value for <code>dataKey</code>.</td>
<td><div>String, up to 128 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
 <td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>callId</td>
<td>The transaction ID generated by the Visa SRC SDK.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
For example, 255.255.255.255.</div></td>
</tr>
<tr>
<td class='oneBullet'>retail</td>
<td>The <code>retail</code> element contains two elements: <code>marketType</code> and <code>deviceType</code>. If you submit the <code>retail</code> element, the <code>marketType</code> and <code>deviceType</code> elements are required.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td><strong>Conditional.</strong><br />0 for ecommerce<br />1 for MOTO<br />2 for retail<br /><br />
For Visa SRC transactions, set to <code>0</code>. This element is required if you submit the <code>retail</code> element.</td>
 <td><div>Numeric string.<br /><br />Either <code>0</code> for e-commerce, <code>1</code> for MOTO, or <code>2</code> for retail. Defaults to <code>2</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>deviceType</td>
<td>The type of device submitting the retail transaction.<br /><br />
This element is required if you submit the <code>retail</code> element.</td>
<td><div>Numeric string.<br /><br />One of the following:<br /><br /><code>1</code> -- unknown device type<br /><code>2</code> -- unattended terminal<br /><code>3</code> -- self-service terminal<br /><code>4</code> -- electronic cash register<br /><code>5</code> -- personal computer based terminal<br /><code>7</code> -- wireless POS<br /><code>8</code> -- website<br /><code>9</code> -- dial terminal<br /><code>10</code> -- Virtual Terminal<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-visa-src-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-visa-src-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-visa-src-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to six characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not. <br /> <code>B</code> -- No address information was provided.<br /> <code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /> <code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated. <br /><code>0</code> -- CAVV was not validated because erroneous data was submitted. <br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete. <br /><code>4</code> -- CAVV validation could not be performed; issuer system error. <br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /> <code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to six characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
 <td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
 <td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="PayPal-express-checkout" class="section-title">PayPal Express Checkout</h2>
<p class="lead">Use the following methods to process PayPal transactions. You must first sign up for the service in the <a href="https://account.authorize.net">Merchant Interface</a>. The sign-up page is at Accounts > Digital Payment Solutions.<br /><br />The following calls are <code>createTransactionRequest</code> calls with PayPal-specific fields. For more information about our implementation of PayPal Checkout Express, see the <a href="https://developer.authorize.net/api/reference/features/paypal.html">PayPal developer guide</a>.<br /><br />Note: Billing and shipping request fields are used only if the customer wants to use an address different than the one stored in their PayPal billing and shipping profiles. If you provide these fields, PayPal will validate the address to ensure that it is a valid address. The transaction is declined if PayPal’s validation fails. Billing and shipping fields are present in the Authorization and Authorization and Capture request calls.</p>
<h3 id="PayPal-express-checkout-authorization-only">Authorization Only</h3>
<p>An Authorization Only request notifies PayPal that an authorization has been initiated but does not complete the authorization. It returns a secure URL with a token appended to it. The purpose of this token is to identify the transaction when the customer is redirected to PayPal.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="authorization-onlyTryIt" href="#console-authorization-only" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="authorization-onlyphp" href="#php-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="authorization-onlycs" href="#cs-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="authorization-onlyjava" href="#java-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="authorization-onlyrb" href="#ruby-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="authorization-onlypy" href="#python-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="authorization-onlyjs" href="#node-authorization-only" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-authorization-only">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="authorization-only">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="authorization-only">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-authorization-only" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;18.95&lt;/amount&gt;
    &lt;payment&gt;
      &lt;payPal&gt;
        &lt;successUrl&gt;https://my.server.com/success.html&lt;/successUrl&gt;
        &lt;cancelUrl&gt;https://my.server.com/cancel.html&lt;/cancelUrl&gt;
        &lt;paypalLc&gt;&lt;/paypalLc&gt;
        &lt;paypalHdrImg&gt;&lt;/paypalHdrImg&gt;
        &lt;paypalPayflowcolor&gt;FFFF00&lt;/paypalPayflowcolor&gt;
      &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;item1&lt;/itemId&gt;
        &lt;name&gt;golf balls&lt;/name&gt;
        &lt;quantity&gt;1&lt;/quantity&gt;
        &lt;unitPrice&gt;18.95&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-authorization-only" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authOnlyTransaction&lt;/transactionType&gt;
    &lt;amount&gt;18.95&lt;/amount&gt;
    &lt;payment&gt;
      &lt;payPal&gt;
        &lt;successUrl&gt;https://my.server.com/success.html&lt;/successUrl&gt;
        &lt;cancelUrl&gt;https://my.server.com/cancel.html&lt;/cancelUrl&gt;
        &lt;paypalLc&gt;&lt;/paypalLc&gt;
        &lt;paypalHdrImg&gt;&lt;/paypalHdrImg&gt;
        &lt;paypalPayflowcolor&gt;FFFF00&lt;/paypalPayflowcolor&gt;
      &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;item1&lt;/itemId&gt;
        &lt;name&gt;golf balls&lt;/name&gt;
        &lt;quantity&gt;1&lt;/quantity&gt;
        &lt;unitPrice&gt;18.95&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-authorization-only" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;successUrl&quot;: &quot;https://my.server.com/success.html&quot;,
                    &quot;cancelUrl&quot;: &quot;https://my.server.com/cancel.html&quot;
                }
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-authorization-only" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;successUrl&quot;: &quot;https://my.server.com/success.html&quot;,
                    &quot;cancelUrl&quot;: &quot;https://my.server.com/cancel.html&quot;
                }
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-authorization-only" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-authorization-only" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-authorization-only"></span>


<div class="errorDetails" id="detailsDiv-authorization-only">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-authorization-only">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;5&lt;/responseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;SecureAcceptanceUrl&gt;https://www.paypal.com/cgibin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-4WL17777V4111184H&lt;/SecureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;
</code>
                                                	<code class="XML" id="txtRespXml-Demo-authorization-only" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;5&lt;/responseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;SecureAcceptanceUrl&gt;https://www.paypal.com/cgibin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-4WL17777V4111184H&lt;/SecureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;
</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-authorization-only">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;5&quot;,
        &quot;rawResponseCode&quot;: &quot;0&quot;,
        &quot;transId&quot;: &quot;2149186954&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;A719785EE9752530FDCE67695E9A56EE&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;2000&quot;,
                &quot;description&quot;: &quot;Need payer consent.&quot;
            }
        ],
        &quot;secureAcceptance&quot;: {
            &quot;SecureAcceptanceUrl&quot;: &quot;https://www.sandbox.paypal.com/cgi-bin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-C506B0LGTG2J800OK&quot;
        }
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-authorization-only" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;5&quot;,
        &quot;rawResponseCode&quot;: &quot;0&quot;,
        &quot;transId&quot;: &quot;2149186954&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;A719785EE9752530FDCE67695E9A56EE&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;2000&quot;,
                &quot;description&quot;: &quot;Need payer consent.&quot;
            }
        ],
        &quot;secureAcceptance&quot;: {
            &quot;SecureAcceptanceUrl&quot;: &quot;https://www.sandbox.paypal.com/cgi-bin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-C506B0LGTG2J800OK&quot;
        }
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-authorization-only" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-authorization-only">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-authorization-only"></div>
<div id="showCode-php-authorization-only">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-only"></a>
</p>
<textarea class="php" id="textarea-php-authorization-only" name="textarea-php-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-authorization-only">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-authorization-only"></div>
<div id="showCode-cs-authorization-only">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-only"></a>
</p>
<textarea class="cs" id="textarea-cs-authorization-only" name="textarea-cs-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-authorization-only">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-authorization-only"></div>
<div id="showCode-java-authorization-only">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-only"></a>
</p>
<textarea class="java" id="textarea-java-authorization-only" name="textarea-java-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-authorization-only">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-authorization-only"></div>
<div id="showCode-rb-authorization-only">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-only"></a>
</p>
<textarea class="ruby" id="textarea-rb-authorization-only" name="textarea-rb-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-authorization-only">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-authorization-only"></div>
<div id="showCode-py-authorization-only">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-only"></a>
</p>
<textarea class="python" id="textarea-py-authorization-only" name="textarea-py-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-authorization-only">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="authorization-only">
</div>
<div class="showCodeCont" id="showCode-authorization-only">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-authorization-only"></div>
<div id="showCode-js-authorization-only">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-only"></a>
</p>
 <textarea class="node" id="textarea-js-authorization-only" name="textarea-js-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-authorization-only">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="authorization-only">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="authorization-only">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="authorization-only">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="authorization-only">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="authorization-only">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="authorization-only">Node</button>
</div>
<div class="showCodeCont" id="showCode-authorization-only">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-authorization-only"></div>
<div id="showCode-php-authorization-only">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-php-authorization-only" name="textarea-php-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-authorization-only"></div>
<div id="showCode-cs-authorization-only">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-cs-authorization-only" name="textarea-cs-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-authorization-only"></div>
<div id="showCode-java-authorization-only">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-java-authorization-only" name="textarea-java-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-authorization-only"></div>
<div id="showCode-rb-authorization-only">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-rb-authorization-only" name="textarea-rb-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-authorization-only"></div>
<div id="showCode-py-authorization-only">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-py-authorization-only" name="textarea-py-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-authorization-only"></div>
<div id="showCode-js-authorization-only">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-only"></a>
</p>
<textarea class="sample-code" id="textarea-js-authorization-only" name="textarea-js-authorization-only" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-authorization-only" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-authorization-only">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-only">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-authorization-only" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-authorization-only">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
 <th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, and <code>AUD</code>.</td>
 <td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>payPal</td>
<td>This element contains PayPal order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>successURL</td>
<td>URL to which the customer's browser returns when the customer chooses to pay with PayPal.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Success/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>cancelURL</td>
<td>URL to which the customer's browser returns when the customer chooses not to pay with PayPal.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Cancel/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>payPalLc</td>
<td>Locale of pages displayed by PayPal during Express Checkout.<br /><br />
Defaults to <code>US</code>.</td>
<td><div>String.<br /><br />One of:<br /><br /><code>AU</code> -- Australia <br /><code>CAN</code> -- Canada<br /><code>DE</code> -- Germany <br /><code>ES</code> -- Spain<br /><code>FR</code> -- France<br /><code>GB</code> -- United Kingdom<br /><code>IT</code> -- Italy<br /><code>US</code> -- United States <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>paypalHdrImg</td>
<td>URL for the image that will be displayed in the upper left area of the payment page.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
 For example, https://example.com/images/logo.gif</div></td>
</tr>
<tr>
<td class='threeBullet'>PaypalPayflowcolor</td>
<td>Background color for the payment page.<br /><br />
</td>
<td><div>A valid <a href="https://www.w3.org/TR/2011/REC-css3-color-20110607/#rgb-color">hexadecimal RGB code.</a><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
 </td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />For example, 5.4321.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />For example, 5.4321.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-authorization-only">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-only">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-authorization-only">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
 </td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>secureAcceptance</td>
<td>This element contains Secure Acceptance information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>secureAcceptanceUrl</td>
<td>Contains the URL to a payment form that can accept payment details in a secure fashion. You should redirect the customer's browser to this URL, so that the customer can log in, provide payment details, and initiate payment processing. This URL has a token appended to it that is valid for up to three hours.<br /><br />In Test Mode, the URL will be returned with an invalid token of 0. <br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, http://www.paypal.com/cgibin/webscr?cmd=_express-checkout&token=0.</div></td>
 </tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-authorization-and-capture">Authorization and Capture</h3>
<p>This type of transaction is the most common and is the default payment gateway transaction type. Like the Authorization Only request, it notifies PayPal that an Authorization and Capture transaction has been initiated, but does not complete the request. It also returns a secure URL with a token appended to it. The purpose of this token is to identify the transaction when the customer is redirected to PayPal.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="authorization-and-captureTryIt" href="#console-authorization-and-capture" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="authorization-and-capturephp" href="#php-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="authorization-and-capturecs" href="#cs-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="authorization-and-capturejava" href="#java-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="authorization-and-capturerb" href="#ruby-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="authorization-and-capturepy" href="#python-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="authorization-and-capturejs" href="#node-authorization-and-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-authorization-and-capture">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="authorization-and-capture">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="authorization-and-capture">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-authorization-and-capture" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;18.95&lt;/amount&gt;
    &lt;payment&gt;
      &lt;payPal&gt;
        &lt;successUrl&gt;https://my.server.com/success.html&lt;/successUrl&gt;
        &lt;cancelUrl&gt;https://my.server.com/cancel.html&lt;/cancelUrl&gt;
        &lt;paypalLc&gt;&lt;/paypalLc&gt;
        &lt;paypalHdrImg&gt;&lt;/paypalHdrImg&gt;
        &lt;paypalPayflowcolor&gt;FFFF00&lt;/paypalPayflowcolor&gt;
      &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;item1&lt;/itemId&gt;
        &lt;name&gt;golf balls&lt;/name&gt;
        &lt;quantity&gt;1&lt;/quantity&gt;
        &lt;unitPrice&gt;18.95&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-authorization-and-capture" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;18.95&lt;/amount&gt;
    &lt;payment&gt;
      &lt;payPal&gt;
        &lt;successUrl&gt;https://my.server.com/success.html&lt;/successUrl&gt;
        &lt;cancelUrl&gt;https://my.server.com/cancel.html&lt;/cancelUrl&gt;
        &lt;paypalLc&gt;&lt;/paypalLc&gt;
        &lt;paypalHdrImg&gt;&lt;/paypalHdrImg&gt;
        &lt;paypalPayflowcolor&gt;FFFF00&lt;/paypalPayflowcolor&gt;
      &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;item1&lt;/itemId&gt;
        &lt;name&gt;golf balls&lt;/name&gt;
        &lt;quantity&gt;1&lt;/quantity&gt;
        &lt;unitPrice&gt;18.95&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
&lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-authorization-and-capture" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;80.93&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;successUrl&quot;: &quot;https://my.server.com/success.html&quot;,
                    &quot;cancelUrl&quot;: &quot;https://my.server.com/cancel.html&quot;,
                    &quot;paypalLc&quot;: &quot;&quot;,
                    &quot;paypalHdrImg&quot;: &quot;&quot;,
                    &quot;paypalPayflowcolor&quot;: &quot;FFFF00&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;item1&quot;,
                    &quot;name&quot;: &quot;golf balls&quot;,
                    &quot;quantity&quot;: &quot;1&quot;,
                    &quot;unitPrice&quot;: &quot;18.95&quot;
                }
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-authorization-and-capture" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;80.93&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;successUrl&quot;: &quot;https://my.server.com/success.html&quot;,
                    &quot;cancelUrl&quot;: &quot;https://my.server.com/cancel.html&quot;,
                    &quot;paypalLc&quot;: &quot;&quot;,
                    &quot;paypalHdrImg&quot;: &quot;&quot;,
                    &quot;paypalPayflowcolor&quot;: &quot;FFFF00&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;item1&quot;,
                    &quot;name&quot;: &quot;golf balls&quot;,
                    &quot;quantity&quot;: &quot;1&quot;,
                    &quot;unitPrice&quot;: &quot;18.95&quot;
                }
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-authorization-and-capture" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-authorization-and-capture" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
 <span id="spnStatusCode-authorization-and-capture"></span>


<div class="errorDetails" id="detailsDiv-authorization-and-capture">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-authorization-and-capture">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;5&lt;/responseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;SecureAcceptanceUrl&gt;https://www.paypal.com/cgibin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-4WL17777V4111184H&lt;/SecureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-authorization-and-capture" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;5&lt;/responseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;SecureAcceptanceUrl&gt;https://www.paypal.com/cgibin/webscr?cmd&#x3D;_express-checkout&amp;token&#x3D;EC-4WL17777V4111184H&lt;/SecureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-authorization-and-capture">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;rawResponseCode&quot;: &quot;0&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;2AF9B654FE7745AF78EBF7A8DD8A18D2&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;2001&quot;,
                &quot;errorText&quot;: &quot;PayPal transactions are not accepted by this merchant.&quot;
            }
        ]
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-authorization-and-capture" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;rawResponseCode&quot;: &quot;0&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;2AF9B654FE7745AF78EBF7A8DD8A18D2&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;2001&quot;,
                &quot;errorText&quot;: &quot;PayPal transactions are not accepted by this merchant.&quot;
            }
        ]
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-authorization-and-capture" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-authorization-and-capture">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-authorization-and-capture"></div>
<div id="showCode-php-authorization-and-capture">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-and-capture"></a>
</p>
<textarea class="php" id="textarea-php-authorization-and-capture" name="textarea-php-authorization-and-capture" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-authorization-and-capture">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-authorization-and-capture"></div>
<div id="showCode-cs-authorization-and-capture">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-and-capture"></a>
</p>
<textarea class="cs" id="textarea-cs-authorization-and-capture" name="textarea-cs-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-authorization-and-capture">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-authorization-and-capture"></div>
<div id="showCode-java-authorization-and-capture">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-and-capture"></a>
</p>
<textarea class="java" id="textarea-java-authorization-and-capture" name="textarea-java-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="ruby-authorization-and-capture">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-authorization-and-capture"></div>
<div id="showCode-rb-authorization-and-capture">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-and-capture"></a>
</p>
<textarea class="ruby" id="textarea-rb-authorization-and-capture" name="textarea-rb-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-authorization-and-capture">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-authorization-and-capture"></div>
<div id="showCode-py-authorization-and-capture">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-and-capture"></a>
</p>
<textarea class="python" id="textarea-py-authorization-and-capture" name="textarea-py-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-authorization-and-capture">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="authorization-and-capture">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-authorization-and-capture"></div>
<div id="showCode-js-authorization-and-capture">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-and-capture"></a>
</p>
<textarea class="node" id="textarea-js-authorization-and-capture" name="textarea-js-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-authorization-and-capture">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="authorization-and-capture">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="authorization-and-capture">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="authorization-and-capture">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="authorization-and-capture">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="authorization-and-capture">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="authorization-and-capture">Node</button>
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-authorization-and-capture"></div>
<div id="showCode-php-authorization-and-capture">
 <p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-php-authorization-and-capture" name="textarea-php-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-authorization-and-capture"></div>
<div id="showCode-cs-authorization-and-capture">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-cs-authorization-and-capture" name="textarea-cs-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-authorization-and-capture"></div>
<div id="showCode-java-authorization-and-capture">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-java-authorization-and-capture" name="textarea-java-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-authorization-and-capture"></div>
 <div id="showCode-rb-authorization-and-capture">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-rb-authorization-and-capture" name="textarea-rb-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-authorization-and-capture"></div>
<div id="showCode-py-authorization-and-capture">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-py-authorization-and-capture" name="textarea-py-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-authorization-and-capture"></div>
<div id="showCode-js-authorization-and-capture">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-and-capture"></a>
</p>
<textarea class="sample-code" id="textarea-js-authorization-and-capture" name="textarea-js-authorization-and-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>

<div class="req-res-description">
<div class="panel-group" id="accordion-authorization-and-capture" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-authorization-and-capture">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-and-capture">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-authorization-and-capture" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-authorization-and-capture">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, and <code>AUD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>payPal</td>
<td>This element contains PayPal order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>successURL</td>
<td>URL to which the customer's browser returns when the customer chooses to pay with PayPal.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Success/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>cancelURL</td>
<td>URL to which the customer's browser returns when the customer chooses not to pay with PayPal.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Cancel/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>payPalLc</td>
<td>Locale of pages displayed by PayPal during Express Checkout.<br /><br />
Defaults to <code>US</code>.</td>
<td><div>String.<br /><br />One of:<br /><br /><code>AU</code> -- Australia <br /><code>CAN</code> -- Canada<br /><code>DE</code> -- Germany <br /><code>ES</code> -- Spain<br /><code>FR</code> -- France<br /><code>GB</code> -- United Kingdom<br /><code>IT</code> -- Italy<br /><code>US</code> -- United States <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>paypalHdrImg</td>
<td>URL for the image that will be displayed in the upper left area of the payment page.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/images/logo.gif</div></td>
</tr>
<tr>
<td class='threeBullet'>PaypalPayflowcolor</td>
<td>Background color for the payment page.<br /><br />
</td>
<td><div>A valid <a href="https://www.w3.org/TR/2011/REC-css3-color-20110607/#rgb-color">hexadecimal RGB code.</a><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
 <td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-authorization-and-capture">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-and-capture">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-authorization-and-capture">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
 <td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
 <tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>secureAcceptance</td>
<td>This element is a container.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>secureAcceptanceUrl</td>
<td>Contains the URL to a payment form that can accept payment details in a secure fashion. You should redirect the customer's browser to this URL, so that the customer can log in, provide payment details, and initiate payment processing. This URL has a token appended to it that is valid for up to three hours.<br /><br />In Test Mode, the URL will be returned with an invalid token of 0. <br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, http://www.paypal.com/cgibin/webscr?cmd=_express-checkout&token=0.</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-get-details">Get Details</h3>
<p>A Get Details transaction returns customer’s PayPal Payer ID and shipping information. Get Details can be called at any time and is most useful after the customer has approved the payment at PayPal.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
 <a id="get-detailsTryIt" href="#console-get-details" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-detailsphp" href="#php-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-detailscs" href="#cs-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-detailsjava" href="#java-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-detailsrb" href="#ruby-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-detailspy" href="#python-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-detailsjs" href="#node-get-details" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-details">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-details">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-details">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-details" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;getDetailsTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;128&lt;/refTransId&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-details" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;getDetailsTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;128&lt;/refTransId&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-details" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;getDetailsTransaction&quot;,
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-details" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;getDetailsTransaction&quot;,
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-details" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-details" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-details"></span>


<div class="errorDetails" id="detailsDiv-get-details">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-details">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
  &lt;messages&gt; 
    &lt;resultCode&gt;Ok&lt;/resultCode&gt; 
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt; 
      &lt;text&gt;Successful.&lt;/text&gt; 
    &lt;/message&gt; 
  &lt;/messages&gt; 
  &lt;transactionResponse&gt; 
    &lt;responseCode&gt;1&lt;/responseCode&gt; 
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt; 
    &lt;transId&gt;128&lt;/transId&gt; 
    &lt;refTransID&gt;128&lt;/refTransID&gt; 
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt; 
    &lt;accountType&gt;PayPal&lt;/accountType&gt; 
    &lt;messages&gt; 
      &lt;message&gt;
        &lt;code&gt;2003&lt;/code&gt; 
        &lt;description&gt;Request completed successfully&lt;/description&gt; 
      &lt;/message&gt; 
    &lt;/messages&gt; 
    &lt;shipTo&gt; 
      &lt;firstName&gt;First&lt;/firstName&gt; 
      &lt;lastName&gt;Last&lt;/lastName&gt;
      &lt;address&gt;1, ABC St Suite #100&lt;/address&gt; 
      &lt;city&gt;Bellevue&lt;/city&gt; 
      &lt;state&gt;WA&lt;/state&gt; 
      &lt;zip&gt;98005&lt;/zip&gt; 
      &lt;country&gt;US&lt;/country&gt; 
      &lt;/shipTo&gt; 
    &lt;secureAcceptance&gt; 
      &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt; 
    &lt;/secureAcceptance&gt; 
  &lt;/transactionResponse&gt; 
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-details" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
  &lt;messages&gt; 
    &lt;resultCode&gt;Ok&lt;/resultCode&gt; 
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt; 
      &lt;text&gt;Successful.&lt;/text&gt; 
    &lt;/message&gt; 
  &lt;/messages&gt; 
  &lt;transactionResponse&gt; 
    &lt;responseCode&gt;1&lt;/responseCode&gt; 
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt; 
    &lt;transId&gt;128&lt;/transId&gt; 
    &lt;refTransID&gt;128&lt;/refTransID&gt; 
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt; 
    &lt;accountType&gt;PayPal&lt;/accountType&gt; 
    &lt;messages&gt; 
      &lt;message&gt;
        &lt;code&gt;2003&lt;/code&gt; 
        &lt;description&gt;Request completed successfully&lt;/description&gt; 
      &lt;/message&gt; 
    &lt;/messages&gt; 
    &lt;shipTo&gt; 
      &lt;firstName&gt;First&lt;/firstName&gt; 
      &lt;lastName&gt;Last&lt;/lastName&gt;
      &lt;address&gt;1, ABC St Suite #100&lt;/address&gt; 
      &lt;city&gt;Bellevue&lt;/city&gt; 
      &lt;state&gt;WA&lt;/state&gt; 
      &lt;zip&gt;98005&lt;/zip&gt; 
      &lt;country&gt;US&lt;/country&gt; 
      &lt;/shipTo&gt; 
    &lt;secureAcceptance&gt; 
      &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt; 
    &lt;/secureAcceptance&gt; 
  &lt;/transactionResponse&gt; 
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-details">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-details" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-get-details" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-details">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-details">
</div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-details"></div>
<div id="showCode-php-get-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-details"></a>
</p>
<textarea class="php" id="textarea-php-get-details" name="textarea-php-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-details">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-details">
 </div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-details"></div>
<div id="showCode-cs-get-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-details"></a>
</p>
<textarea class="cs" id="textarea-cs-get-details" name="textarea-cs-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-details">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-details">
</div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-details"></div>
<div id="showCode-java-get-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-details"></a>
</p>
<textarea class="java" id="textarea-java-get-details" name="textarea-java-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-details">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-details">
</div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-details"></div>
<div id="showCode-rb-get-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-details"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-details" name="textarea-rb-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-details">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-details">
</div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-details"></div>
<div id="showCode-py-get-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-details"></a>
</p>
<textarea class="python" id="textarea-py-get-details" name="textarea-py-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-details">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-details">
</div>
<div class="showCodeCont" id="showCode-get-details">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-details"></div>
<div id="showCode-js-get-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-details"></a>
</p>
<textarea class="node" id="textarea-js-get-details" name="textarea-js-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-details">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-details">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-details">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-details">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-details">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-details">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-details">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-details">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-details"></div>
<div id="showCode-php-get-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-details" name="textarea-php-get-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-details"></div>
<div id="showCode-cs-get-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-details" name="textarea-cs-get-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-details"></div>
<div id="showCode-java-get-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-details" name="textarea-java-get-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-details"></div>
<div id="showCode-rb-get-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-details" name="textarea-rb-get-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-details"></div>
 <div id="showCode-py-get-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-details" name="textarea-py-get-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-details"></div>
<div id="showCode-js-get-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-details"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-details" name="textarea-js-get-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-details" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-details">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-details" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-details">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td><code></code><br /><br />
</td>
<td><div>String.<br /><br />Use <code>getDetailsTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td>refTransId</td>
<td>The ID of the original transaction from which you are pulling the Payer ID and shipping information.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-details">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-details">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>The overall status of the transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
 This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
 <td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>secureAcceptance</td>
<td>Contains information about secure acceptance.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>PayerID</td>
<td>Contains the Payer ID of the customer, returned by PayPal. This is returned only if the customer has visited the PayPal payment form using the URL returned in the <code>SecureAcceptanceUrl</code> field of the <code>authOnlyTransaction</code> response, and logged in. Otherwise, this field will not be returned.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-authorization-only-continued">Authorization Only, Continued</h3>
<p>This request, if successful, actually authorizes the transaction but does not capture it.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="authorization-only-continuedTryIt" href="#console-authorization-only-continued" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="authorization-only-continuedphp" href="#php-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="authorization-only-continuedcs" href="#cs-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="authorization-only-continuedjava" href="#java-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="authorization-only-continuedrb" href="#ruby-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="authorization-only-continuedpy" href="#python-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="authorization-only-continuedjs" href="#node-authorization-only-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-authorization-only-continued">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="authorization-only-continued">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="authorization-only-continued">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-authorization-only-continued" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;authOnlyContinueTransaction&lt;/transactionType&gt;
     &lt;payment&gt;
        &lt;payPal&gt;
            &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt;
        &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;refTransId&gt;128&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-authorization-only-continued" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;authOnlyContinueTransaction&lt;/transactionType&gt;
     &lt;payment&gt;
        &lt;payPal&gt;
            &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt;
        &lt;/payPal&gt;
    &lt;/payment&gt;
    &lt;refTransId&gt;128&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-authorization-only-continued" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyContinueTransaction&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;payerID&quot;: &quot;S6D5ETGSVYX94&quot;
                }
            },
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-authorization-only-continued" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authOnlyContinueTransaction&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;payerID&quot;: &quot;S6D5ETGSVYX94&quot;
                }
            },
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-authorization-only-continued" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-authorization-only-continued" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-authorization-only-continued"></span>


<div class="errorDetails" id="detailsDiv-authorization-only-continued">
<div class="tblErrors">
</div>
 </div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-authorization-only-continued">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/
XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot;
xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;transactionResponse&gt;
  &lt;responseCode&gt;1&lt;/responseCode&gt;
  &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
  &lt;transId&gt;128&lt;/transId&gt;
  &lt;refTransID&gt;128&lt;/refTransID&gt;
  &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
  &lt;accountType&gt;PayPal&lt;/accountType&gt;
  &lt;messages&gt;
    &lt;message&gt;
    &lt;code&gt;1&lt;/code&gt;
    &lt;description&gt;This transaction has been approved.
    &lt;/description&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;secureAcceptance&gt;
&lt;PayerID&gt;S6D5ETGSVYX94&lt;/PayerID&gt;
&lt;/secureAcceptance&gt;
&lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-authorization-only-continued" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/
XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot;
xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;transactionResponse&gt;
  &lt;responseCode&gt;1&lt;/responseCode&gt;
  &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
  &lt;transId&gt;128&lt;/transId&gt;
  &lt;refTransID&gt;128&lt;/refTransID&gt;
  &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
  &lt;accountType&gt;PayPal&lt;/accountType&gt;
  &lt;messages&gt;
    &lt;message&gt;
    &lt;code&gt;1&lt;/code&gt;
    &lt;description&gt;This transaction has been approved.
    &lt;/description&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;secureAcceptance&gt;
&lt;PayerID&gt;S6D5ETGSVYX94&lt;/PayerID&gt;
&lt;/secureAcceptance&gt;
&lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-authorization-only-continued">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-authorization-only-continued" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-authorization-only-continued" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-authorization-only-continued">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-authorization-only-continued"></div>
<div id="showCode-php-authorization-only-continued">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-only-continued"></a>
</p>
<textarea class="php" id="textarea-php-authorization-only-continued" name="textarea-php-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-authorization-only-continued">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-authorization-only-continued"></div>
<div id="showCode-cs-authorization-only-continued">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-only-continued"></a>
</p>
<textarea class="cs" id="textarea-cs-authorization-only-continued" name="textarea-cs-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-authorization-only-continued">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-authorization-only-continued"></div>
<div id="showCode-java-authorization-only-continued">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-only-continued"></a>
</p>
<textarea class="java" id="textarea-java-authorization-only-continued" name="textarea-java-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-authorization-only-continued">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-authorization-only-continued"></div>
<div id="showCode-rb-authorization-only-continued">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-only-continued"></a>
</p>
<textarea class="ruby" id="textarea-rb-authorization-only-continued" name="textarea-rb-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-authorization-only-continued">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-authorization-only-continued"></div>
<div id="showCode-py-authorization-only-continued">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-only-continued"></a>
</p>
<textarea class="python" id="textarea-py-authorization-only-continued" name="textarea-py-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-authorization-only-continued">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="authorization-only-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-authorization-only-continued"></div>
<div id="showCode-js-authorization-only-continued">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-only-continued"></a>
</p>
<textarea class="node" id="textarea-js-authorization-only-continued" name="textarea-js-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-authorization-only-continued">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="authorization-only-continued">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="authorization-only-continued">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="authorization-only-continued">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="authorization-only-continued">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="authorization-only-continued">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="authorization-only-continued">Node</button>
</div>
<div class="showCodeCont" id="showCode-authorization-only-continued">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-authorization-only-continued"></div>
<div id="showCode-php-authorization-only-continued">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-php-authorization-only-continued" name="textarea-php-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-authorization-only-continued"></div>
<div id="showCode-cs-authorization-only-continued">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-cs-authorization-only-continued" name="textarea-cs-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-authorization-only-continued"></div>
<div id="showCode-java-authorization-only-continued">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-java-authorization-only-continued" name="textarea-java-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-authorization-only-continued"></div>
<div id="showCode-rb-authorization-only-continued">
 <p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-rb-authorization-only-continued" name="textarea-rb-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-authorization-only-continued"></div>
<div id="showCode-py-authorization-only-continued">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-py-authorization-only-continued" name="textarea-py-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-authorization-only-continued"></div>
<div id="showCode-js-authorization-only-continued">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-only-continued"></a>
</p>
<textarea class="sample-code" id="textarea-js-authorization-only-continued" name="textarea-js-authorization-only-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
 <div class="panel-group" id="accordion-authorization-only-continued" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-authorization-only-continued">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-only-continued">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-authorization-only-continued" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-authorization-only-continued">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td></td>
<td><div>String.<br /><br />Use <code>authOnlyContinueTransaction</code> to authorize and automatically capture the transaction.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td>Optional. Updated amount of the transaction. This is the total amount and must include tax, shipping, tips, and any other charges.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point. Do not use currency symbols. For example, 8.95<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, and <code>AUD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
 <td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>payPal</td>
<td>This element is a container for PayPal information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>payerID</td>
<td>The payerID value returned in the <code>GetDetailsTransaction</code> response, or the value passed to the merchant's success/cancel URL server by PayPal as a web parameter <br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td>refTransId</td>
<td>The value of <code>transId</code> returned from the original <code>authOnlyTransaction</code> call.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-authorization-only-continued">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-only-continued">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-authorization-only-continued">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
 </tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-prior-authorization-capture">Prior Authorization Capture</h3>
<p>This transaction type is used to capture an Authorization Only, Continued transaction that was successfully authorized through the payment gateway.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="prior-authorization-captureTryIt" href="#console-prior-authorization-capture" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="prior-authorization-capturephp" href="#php-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="prior-authorization-capturecs" href="#cs-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="prior-authorization-capturejava" href="#java-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="prior-authorization-capturerb" href="#ruby-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="prior-authorization-capturepy" href="#python-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="prior-authorization-capturejs" href="#node-prior-authorization-capture" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-prior-authorization-capture">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="prior-authorization-capture">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="prior-authorization-capture">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-prior-authorization-capture" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
        &lt;transactionType&gt;priorAuthCaptureTransaction&lt;/transactionType&gt;
        &lt;refTransId&gt;128&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-prior-authorization-capture" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
        &lt;transactionType&gt;priorAuthCaptureTransaction&lt;/transactionType&gt;
        &lt;refTransId&gt;128&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-prior-authorization-capture" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;89nE4Beh&quot;,
            &quot;transactionKey&quot;: &quot;7s2g3yWC3TfC92p2&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;priorAuthCaptureTransaction&quot;,
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-prior-authorization-capture" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;89nE4Beh&quot;,
            &quot;transactionKey&quot;: &quot;7s2g3yWC3TfC92p2&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;priorAuthCaptureTransaction&quot;,
            &quot;refTransId&quot;: &quot;128&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-prior-authorization-capture" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-prior-authorization-capture" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
 <div>
<span id="spnStatusCode-prior-authorization-capture"></span>


<div class="errorDetails" id="detailsDiv-prior-authorization-capture">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-prior-authorization-capture">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-prior-authorization-capture" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-prior-authorization-capture">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-prior-authorization-capture" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;128&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-prior-authorization-capture" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-prior-authorization-capture">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-prior-authorization-capture"></div>
<div id="showCode-php-prior-authorization-capture">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-prior-authorization-capture"></a>
</p>
 <textarea class="php" id="textarea-php-prior-authorization-capture" name="textarea-php-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-prior-authorization-capture">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-prior-authorization-capture"></div>
<div id="showCode-cs-prior-authorization-capture">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-prior-authorization-capture"></a>
 </p>
<textarea class="cs" id="textarea-cs-prior-authorization-capture" name="textarea-cs-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-prior-authorization-capture">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-prior-authorization-capture"></div>
<div id="showCode-java-prior-authorization-capture">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-prior-authorization-capture"></a>
</p>
<textarea class="java" id="textarea-java-prior-authorization-capture" name="textarea-java-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-prior-authorization-capture">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-prior-authorization-capture"></div>
<div id="showCode-rb-prior-authorization-capture">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-prior-authorization-capture"></a>
</p>
 <textarea class="ruby" id="textarea-rb-prior-authorization-capture" name="textarea-rb-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-prior-authorization-capture">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-prior-authorization-capture"></div>
<div id="showCode-py-prior-authorization-capture">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-prior-authorization-capture"></a>
</p>
<textarea class="python" id="textarea-py-prior-authorization-capture" name="textarea-py-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-prior-authorization-capture">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="prior-authorization-capture">
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-prior-authorization-capture"></div>
<div id="showCode-js-prior-authorization-capture">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-prior-authorization-capture"></a>
</p>
<textarea class="node" id="textarea-js-prior-authorization-capture" name="textarea-js-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-prior-authorization-capture">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="prior-authorization-capture">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="prior-authorization-capture">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="prior-authorization-capture">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="prior-authorization-capture">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="prior-authorization-capture">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="prior-authorization-capture">Node</button>
</div>
<div class="showCodeCont" id="showCode-prior-authorization-capture">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-prior-authorization-capture"></div>
<div id="showCode-php-prior-authorization-capture">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-php-prior-authorization-capture" name="textarea-php-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-prior-authorization-capture"></div>
<div id="showCode-cs-prior-authorization-capture">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-cs-prior-authorization-capture" name="textarea-cs-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-prior-authorization-capture"></div>
<div id="showCode-java-prior-authorization-capture">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-java-prior-authorization-capture" name="textarea-java-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-prior-authorization-capture"></div>
<div id="showCode-rb-prior-authorization-capture">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-rb-prior-authorization-capture" name="textarea-rb-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-prior-authorization-capture"></div>
<div id="showCode-py-prior-authorization-capture">
 <p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-py-prior-authorization-capture" name="textarea-py-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-prior-authorization-capture"></div>
<div id="showCode-js-prior-authorization-capture">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-prior-authorization-capture"></a>
</p>
<textarea class="sample-code" id="textarea-js-prior-authorization-capture" name="textarea-js-prior-authorization-capture" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-prior-authorization-capture" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-prior-authorization-capture">
<h4 class="panel-title">
<a data-parent="#accordion-prior-authorization-capture">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-prior-authorization-capture" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-prior-authorization-capture">
<div class="panel-body">
<p><em>createTransactionRequest</em>
 </p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>priorAuthCaptureTransaction</code> to capture a previous <code>authOnlyTransaction</code> transaction request.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, and <code>AUD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>payPal</td>
<td>This element contains PayPal order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>successURL</td>
<td>URL to which the customer's browser returns when the customer chooses to pay with PayPal.<br /><br />
</td>
 <td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Success/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>cancelURL</td>
<td>URL to which the customer's browser returns when the customer chooses not to pay with PayPal.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/Cancel/TC25262</div></td>
</tr>
<tr>
<td class='threeBullet'>payPalLc</td>
<td>Locale of pages displayed by PayPal during Express Checkout.<br /><br />
Defaults to <code>US</code>.</td>
<td><div>String.<br /><br />One of:<br /><br /><code>AU</code> -- Australia <br /><code>CAN</code> -- Canada<br /><code>DE</code> -- Germany <br /><code>ES</code> -- Spain<br /><code>FR</code> -- France<br /><code>GB</code> -- United Kingdom<br /><code>IT</code> -- Italy<br /><code>US</code> -- United States <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>paypalHdrImg</td>
<td>URL for the image that will be displayed in the upper left area of the payment page.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
For example, https://example.com/images/logo.gif</div></td>
</tr>
<tr>
<td class='threeBullet'>PaypalPayflowcolor</td>
<td>Background color for the payment page.<br /><br />
</td>
<td><div>A valid <a href="https://www.w3.org/TR/2011/REC-css3-color-20110607/#rgb-color">hexadecimal RGB code.</a><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
 <td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td>refTransID</td>
<td>The value of <code>transId</code> returned from the original <code>authOnlyTransaction</code> call.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-prior-authorization-capture">
<h4 class="panel-title">
<a data-parent="#accordion-prior-authorization-capture">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-prior-authorization-capture">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains information about a specific transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal. This field is set to 0 for an approved transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
 <td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-authorization-and-capture-continued">Authorization and Capture, Continued</h3>
<p>This request actually authorizes and captures the transaction.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="authorization-and-capture-continuedTryIt" href="#console-authorization-and-capture-continued" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="authorization-and-capture-continuedphp" href="#php-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="authorization-and-capture-continuedcs" href="#cs-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="authorization-and-capture-continuedjava" href="#java-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="authorization-and-capture-continuedrb" href="#ruby-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="authorization-and-capture-continuedpy" href="#python-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="authorization-and-capture-continuedjs" href="#node-authorization-and-capture-continued" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-authorization-and-capture-continued">
<form method="post" action="">
 <div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="authorization-and-capture-continued">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="authorization-and-capture-continued">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-authorization-and-capture-continued" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt; 
     &lt;transactionType&gt;authCaptureContinueTransaction&lt;/transactionType&gt; 
     &lt;payment&gt; 
        &lt;payPal&gt; 
            &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt; 
        &lt;/payPal&gt; 
    &lt;/payment&gt; 
    &lt;refTransId&gt;139&lt;/refTransId&gt; 
    &lt;/transactionRequest&gt; 
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-authorization-and-capture-continued" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt; 
     &lt;transactionType&gt;authCaptureContinueTransaction&lt;/transactionType&gt; 
     &lt;payment&gt; 
        &lt;payPal&gt; 
            &lt;payerID&gt;S6D5ETGSVYX94&lt;/payerID&gt; 
        &lt;/payPal&gt; 
    &lt;/payment&gt; 
    &lt;refTransId&gt;139&lt;/refTransId&gt; 
    &lt;/transactionRequest&gt; 
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-authorization-and-capture-continued" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureContinueTransaction&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;payerID&quot;: &quot;S6D5ETGSVYX94&quot;
                }
            },
            &quot;refTransId&quot;: &quot;139&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-authorization-and-capture-continued" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureContinueTransaction&quot;,
            &quot;payment&quot;: {
                &quot;payPal&quot;: {
                    &quot;payerID&quot;: &quot;S6D5ETGSVYX94&quot;
                }
            },
            &quot;refTransId&quot;: &quot;139&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-authorization-and-capture-continued" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-authorization-and-capture-continued" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-authorization-and-capture-continued"></span>


<div class="errorDetails" id="detailsDiv-authorization-and-capture-continued">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-authorization-and-capture-continued">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;139&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;secureAcceptanceUrl&gt;&lt;/secureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-authorization-and-capture-continued" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;139&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;2000&lt;/code&gt;
        &lt;description&gt;Need payer consent.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
    &lt;secureAcceptance&gt;
      &lt;secureAcceptanceUrl&gt;&lt;/secureAcceptanceUrl&gt;
    &lt;/secureAcceptance&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-authorization-and-capture-continued">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;139&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-authorization-and-capture-continued" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;authCode&quot;: &quot;&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;139&quot;,
        &quot;transHash&quot;: &quot;B349AC0DCCCF601C6DB09403341CD18F&quot;,
        &quot;accountNumber&quot;: &quot;&quot;,
        &quot;accountType&quot;: &quot;&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;16&quot;,
                &quot;errorText&quot;: &quot;The transaction cannot be found.&quot;
            }
        ],
        &quot;shipTo&quot;: {}
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-authorization-and-capture-continued" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="php-authorization-and-capture-continued">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-authorization-and-capture-continued"></div>
<div id="showCode-php-authorization-and-capture-continued">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-and-capture-continued"></a>
</p>
<textarea class="php" id="textarea-php-authorization-and-capture-continued" name="textarea-php-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-authorization-and-capture-continued">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-authorization-and-capture-continued"></div>
<div id="showCode-cs-authorization-and-capture-continued">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-and-capture-continued"></a>
</p>
<textarea class="cs" id="textarea-cs-authorization-and-capture-continued" name="textarea-cs-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="java-authorization-and-capture-continued">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-authorization-and-capture-continued"></div>
<div id="showCode-java-authorization-and-capture-continued">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-and-capture-continued"></a>
</p>
<textarea class="java" id="textarea-java-authorization-and-capture-continued" name="textarea-java-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-authorization-and-capture-continued">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-authorization-and-capture-continued"></div>
<div id="showCode-rb-authorization-and-capture-continued">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-and-capture-continued"></a>
</p>
<textarea class="ruby" id="textarea-rb-authorization-and-capture-continued" name="textarea-rb-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="python-authorization-and-capture-continued">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-authorization-and-capture-continued"></div>
<div id="showCode-py-authorization-and-capture-continued">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-and-capture-continued"></a>
</p>
<textarea class="python" id="textarea-py-authorization-and-capture-continued" name="textarea-py-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-authorization-and-capture-continued">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="authorization-and-capture-continued">
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-authorization-and-capture-continued"></div>
<div id="showCode-js-authorization-and-capture-continued">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-and-capture-continued"></a>
</p>
<textarea class="node" id="textarea-js-authorization-and-capture-continued" name="textarea-js-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="sample-authorization-and-capture-continued">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="authorization-and-capture-continued">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="authorization-and-capture-continued">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="authorization-and-capture-continued">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="authorization-and-capture-continued">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="authorization-and-capture-continued">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="authorization-and-capture-continued">Node</button>
</div>
<div class="showCodeCont" id="showCode-authorization-and-capture-continued">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-authorization-and-capture-continued"></div>
<div id="showCode-php-authorization-and-capture-continued">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-php-authorization-and-capture-continued" name="textarea-php-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-authorization-and-capture-continued"></div>
<div id="showCode-cs-authorization-and-capture-continued">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-cs-authorization-and-capture-continued" name="textarea-cs-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-authorization-and-capture-continued"></div>
 <div id="showCode-java-authorization-and-capture-continued">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-java-authorization-and-capture-continued" name="textarea-java-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-authorization-and-capture-continued"></div>
<div id="showCode-rb-authorization-and-capture-continued">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-rb-authorization-and-capture-continued" name="textarea-rb-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-authorization-and-capture-continued"></div>
<div id="showCode-py-authorization-and-capture-continued">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-py-authorization-and-capture-continued" name="textarea-py-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-authorization-and-capture-continued"></div>
<div id="showCode-js-authorization-and-capture-continued">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-authorization-and-capture-continued"></a>
</p>
<textarea class="sample-code" id="textarea-js-authorization-and-capture-continued" name="textarea-js-authorization-and-capture-continued" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-authorization-and-capture-continued" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-authorization-and-capture-continued">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-and-capture-continued">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-authorization-and-capture-continued" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-authorization-and-capture-continued">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
 Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td><code>The transaction type.</code><br /><br />
</td>
<td><div>String.<br /><br />Use <code>authCaptureContinueTransaction</code> to complete the original <code>authCaptureTransaction</code> request.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>amount</td>
<td>Optional. Updated amount of the transaction. This is the total amount and must include tax, shipping, tips, and any other charges.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point. Do not use currency symbols. For example, 8.95<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>currencyCode</td>
<td><strong>Required.</strong><br />
Currency of the transaction.<br /><br />
Use the <a href="https://www.currency-iso.org/en/home/tables/table-a1.html">ISO 4217</a> three-letter alphabetic code for the currency.<br /><br />Currently supported currencies are <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, and <code>AUD</code>.</td>
<td><div>String, three characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>payPal</td>
<td>This element is a container for PayPal information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>payerID</td>
<td>The payer identification value returned in the <code>GetDetailsTransaction</code> response, or the value passed to the merchant's success/cancel URL server by PayPal as a web parameter <br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td>refTransId</td>
<td>The value of <code>transId</code> returned from the original <code>authOnlyTransaction</code> call.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-authorization-and-capture-continued">
<h4 class="panel-title">
<a data-parent="#accordion-authorization-and-capture-continued">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-authorization-and-capture-continued">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
 <td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>secureAcceptance</td>
<td>This element is a container.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>secureAcceptanceUrl</td>
<td>Contains the URL to a payment form that can accept payment details in a secure fashion. You should redirect the customer's browser to this URL, so that the customer can log in, provide payment details, and initiate payment processing. This URL has a token appended to it that is valid for up to three hours.<br /><br />In Test Mode, the URL will be returned with an invalid token of 0. <br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-void">Void</h3>
<p>This transaction type can be used to cancel an authorization that has not yet been captured. Void can be used only in the following sequence: Authorization Only > Authorization Only, Continued > Void.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="voidTryIt" href="#console-void" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="voidphp" href="#php-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="voidcs" href="#cs-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="voidjava" href="#java-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="voidrb" href="#ruby-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="voidpy" href="#python-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="voidjs" href="#node-void" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-void">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="void">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="void">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-void" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;voidTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;138&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-void" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;voidTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;138&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-void" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;voidTransaction&quot;,
            &quot;refTransId&quot;: &quot;138&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-void" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;voidTransaction&quot;,
            &quot;refTransId&quot;: &quot;138&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-void" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-void" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-void"></span>


<div class="errorDetails" id="detailsDiv-void">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-void">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-void" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-void">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186848&quot;,
        &quot;refTransID&quot;: &quot;2149186848&quot;,
        &quot;transHash&quot;: &quot;D3A855F0934EB404DE3B13508D0E3826&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-void" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;HH5414&quot;,
        &quot;avsResultCode&quot;: &quot;P&quot;,
        &quot;cvvResultCode&quot;: &quot;&quot;,
        &quot;cavvResultCode&quot;: &quot;&quot;,
        &quot;transId&quot;: &quot;2149186848&quot;,
        &quot;refTransID&quot;: &quot;2149186848&quot;,
        &quot;transHash&quot;: &quot;D3A855F0934EB404DE3B13508D0E3826&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
        &quot;accountType&quot;: &quot;Mastercard&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-void" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-void">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-void"></div>
 <div id="showCode-php-void">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-void"></a>
</p>
<textarea class="php" id="textarea-php-void" name="textarea-php-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-void">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-void"></div>
<div id="showCode-cs-void">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-void"></a>
</p>
<textarea class="cs" id="textarea-cs-void" name="textarea-cs-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-void">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-void"></div>
<div id="showCode-java-void">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-void"></a>
</p>
<textarea class="java" id="textarea-java-void" name="textarea-java-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-void">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-void"></div>
<div id="showCode-rb-void">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-void"></a>
</p>
<textarea class="ruby" id="textarea-rb-void" name="textarea-rb-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-void">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-void"></div>
<div id="showCode-py-void">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-void"></a>
</p>
<textarea class="python" id="textarea-py-void" name="textarea-py-void" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="node-void">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="void">
</div>
<div class="showCodeCont" id="showCode-void">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-void"></div>
<div id="showCode-js-void">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-void"></a>
</p>
<textarea class="node" id="textarea-js-void" name="textarea-js-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-void">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="void">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="void">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="void">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="void">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="void">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="void">Node</button>
</div>
<div class="showCodeCont" id="showCode-void">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-void"></div>
<div id="showCode-php-void">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-void"></a>
</p>
<textarea class="sample-code" id="textarea-php-void" name="textarea-php-void" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-void"></div>
<div id="showCode-cs-void">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-void"></a>
</p>
<textarea class="sample-code" id="textarea-cs-void" name="textarea-cs-void" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-void"></div>
<div id="showCode-java-void">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-void"></a>
</p>
<textarea class="sample-code" id="textarea-java-void" name="textarea-java-void" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-void"></div>
<div id="showCode-rb-void">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-void"></a>
</p>
<textarea class="sample-code" id="textarea-rb-void" name="textarea-rb-void" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-void"></div>
<div id="showCode-py-void">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-void"></a>
</p>
<textarea class="sample-code" id="textarea-py-void" name="textarea-py-void" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-void"></div>
<div id="showCode-js-void">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-void"></a>
</p>
<textarea class="sample-code" id="textarea-js-void" name="textarea-js-void" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-void" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-void">
<h4 class="panel-title">
<a data-parent="#accordion-void">
 Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-void" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-void">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>voidTransaction</code> to void a transaction prior to capture.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransID</td>
<td>The value of <code>transId</code> returned from the original <code>authOnlyTransaction</code> call.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-void">
<h4 class="panel-title">
<a data-parent="#accordion-void">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-void">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
 </tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
 <td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="PayPal-express-checkout-credit">Credit</h3>
<p>This transaction type is used to refund a customer for a transaction that was originally
processed and successfully settled through the payment gateway. Credits do not occur
until after your transactions have been settled on our system, which happens after the
cutoff time.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="creditTryIt" href="#console-credit" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="creditphp" href="#php-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="creditcs" href="#cs-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
 <a id="creditjava" href="#java-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="creditrb" href="#ruby-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="creditpy" href="#python-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="creditjs" href="#node-credit" class="PayPal-express-checkout" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-credit">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="credit">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="credit">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-credit" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;138&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-credit" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
     &lt;transactionType&gt;refundTransaction&lt;/transactionType&gt;
    &lt;refTransId&gt;138&lt;/refTransId&gt;
    &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-credit" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;refTransId&quot;: &quot;138&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-credit" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;refundTransaction&quot;,
            &quot;refTransId&quot;: &quot;138&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-credit" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-credit" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-credit"></span>


<div class="errorDetails" id="detailsDiv-credit">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-credit">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-credit" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;rawResponseCode&gt;0&lt;/rawResponseCode&gt;
    &lt;transId&gt;128&lt;/transId&gt;
    &lt;refTransID&gt;128&lt;/refTransID&gt;
    &lt;transHash&gt;A7C677FBB549F6362BB4017AA844C7AE&lt;/transHash&gt;
    &lt;accountType&gt;PayPal&lt;/accountType&gt;
    &lt;messages&gt;
      &lt;message&gt;
        &lt;code&gt;1&lt;/code&gt;
        &lt;description&gt;This transaction has been approved.&lt;/description&gt;
      &lt;/message&gt;
    &lt;/messages&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-credit">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;2149186775&quot;,
        &quot;transHash&quot;: &quot;D6C9036F443BADE785D57DA2B44CD190&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;54&quot;,
                &quot;errorText&quot;: &quot;The referenced transaction does not meet the criteria for issuing a credit.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-credit" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;3&quot;,
        &quot;transId&quot;: &quot;0&quot;,
        &quot;refTransID&quot;: &quot;2149186775&quot;,
        &quot;transHash&quot;: &quot;D6C9036F443BADE785D57DA2B44CD190&quot;,
        &quot;accountType&quot;: &quot;PayPal&quot;,
        &quot;errors&quot;: [
            {
                &quot;errorCode&quot;: &quot;54&quot;,
                &quot;errorText&quot;: &quot;The referenced transaction does not meet the criteria for issuing a credit.&quot;
            }
        ]
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Error&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;E00027&quot;,
                &quot;text&quot;: &quot;The transaction was unsuccessful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-credit" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-credit">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="credit">
 </div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-credit"></div>
<div id="showCode-php-credit">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-credit"></a>
</p>
<textarea class="php" id="textarea-php-credit" name="textarea-php-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-credit">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="credit">
</div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-credit"></div>
<div id="showCode-cs-credit">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-credit"></a>
</p>
<textarea class="cs" id="textarea-cs-credit" name="textarea-cs-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-credit">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="credit">
</div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-credit"></div>
 <div id="showCode-java-credit">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-credit"></a>
</p>
<textarea class="java" id="textarea-java-credit" name="textarea-java-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-credit">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="credit">
</div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-credit"></div>
<div id="showCode-rb-credit">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-credit"></a>
</p>
<textarea class="ruby" id="textarea-rb-credit" name="textarea-rb-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-credit">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="credit">
</div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-credit"></div>
<div id="showCode-py-credit">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-credit"></a>
</p>
<textarea class="python" id="textarea-py-credit" name="textarea-py-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-credit">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="credit">
</div>
<div class="showCodeCont" id="showCode-credit">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-credit"></div>
<div id="showCode-js-credit">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-credit"></a>
</p>
<textarea class="node" id="textarea-js-credit" name="textarea-js-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-credit">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="credit">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="credit">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="credit">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="credit">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="credit">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="credit">Node</button>
</div>
<div class="showCodeCont" id="showCode-credit">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-credit"></div>
<div id="showCode-php-credit">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-credit"></a>
</p>
<textarea class="sample-code" id="textarea-php-credit" name="textarea-php-credit" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-credit"></div>
<div id="showCode-cs-credit">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-credit"></a>
</p>
<textarea class="sample-code" id="textarea-cs-credit" name="textarea-cs-credit" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-credit"></div>
<div id="showCode-java-credit">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-credit"></a>
</p>
<textarea class="sample-code" id="textarea-java-credit" name="textarea-java-credit" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-credit"></div>
<div id="showCode-rb-credit">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-credit"></a>
</p>
<textarea class="sample-code" id="textarea-rb-credit" name="textarea-rb-credit" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-credit"></div>
<div id="showCode-py-credit">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-credit"></a>
</p>
<textarea class="sample-code" id="textarea-py-credit" name="textarea-py-credit" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-credit"></div>
<div id="showCode-js-credit">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-credit"></a>
</p>
<textarea class="sample-code" id="textarea-js-credit" name="textarea-js-credit" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
 <div class="panel-group" id="accordion-credit" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-credit">
<h4 class="panel-title">
<a data-parent="#accordion-credit">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-credit" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-credit">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td>This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of transaction.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>refundTransaction</code> to initiate a refund against a previously settled transaction.<br /><br />
</div></td>
</tr>
<tr>
<td>refTransID</td>
<td>The value of <code>transId</code> that was returned from the original <code>authOnlyTransaction</code> call.<br /><br />
</td>
<td><div></div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-credit">
<h4 class="panel-title">
<a data-parent="#accordion-credit">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-credit">
<div class="panel-body">
 <p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
 </tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td>Contains transaction response information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>rawResponseCode</td>
<td>Contains the specific error code returned by PayPal.<br /><br />
This field is set to 0 for an approved transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />The value for PayPal transactions is <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="fraud-management" class="section-title">Fraud Management</h2>
<p class="lead">You can use this feature of the Authorize.Net API to access suspicious transactions and then approve or decline. For more information about fraud management, see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html">Payment Transactions developer guide</a>.</p>
<h3 id="fraud-management-get-held-transaction-list">Get Held Transaction List</h3>
<p>Use this function to get data for suspicious transactions. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit. You can add the sorting and paging options shown below to customize the result set.
</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-held-transaction-listTryIt" href="#console-get-held-transaction-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-held-transaction-listphp" href="#php-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-held-transaction-listcs" href="#cs-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-held-transaction-listjava" href="#java-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-held-transaction-listrb" href="#ruby-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-held-transaction-listpy" href="#python-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-held-transaction-listjs" href="#node-get-held-transaction-list" class="fraud-management" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-held-transaction-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-held-transaction-list">JSON</button>
 <button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-held-transaction-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-held-transaction-list" spellcheck="false" class="XML XMLRequest">&lt;getUnsettledTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;12345&lt;/refId&gt;
  &lt;status&gt;pendingApproval&lt;/status&gt;
  &lt;sorting&gt;
    &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
    &lt;orderDescending&gt;true&lt;/orderDescending&gt;
  &lt;/sorting&gt;
  &lt;paging&gt;
    &lt;limit&gt;100&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getUnsettledTransactionListRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-held-transaction-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getUnsettledTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;12345&lt;/refId&gt;
  &lt;status&gt;pendingApproval&lt;/status&gt;
  &lt;sorting&gt;
    &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
    &lt;orderDescending&gt;true&lt;/orderDescending&gt;
  &lt;/sorting&gt;
  &lt;paging&gt;
    &lt;limit&gt;100&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getUnsettledTransactionListRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-held-transaction-list" spellcheck="false" class="JSON JSONRequest">{
  &quot;getUnsettledTransactionListRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;12345&quot;,
    &quot;status&quot;: &quot;pendingApproval&quot;,
    &quot;sorting&quot;: {
      &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
      &quot;orderDescending&quot;: false
    },
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-held-transaction-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;getUnsettledTransactionListRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;12345&quot;,
    &quot;status&quot;: &quot;pendingApproval&quot;,
    &quot;sorting&quot;: {
      &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
      &quot;orderDescending&quot;: false
    },
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-held-transaction-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
 <button type="button" id="btnReset-get-held-transaction-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-held-transaction-list"></span>


<div class="errorDetails" id="detailsDiv-get-held-transaction-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-held-transaction-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getUnsettledTransactionListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactions&gt;
        &lt;transaction&gt;
            &lt;transId&gt;60010736710&lt;/transId&gt;
            &lt;submitTimeUTC&gt;2016-11-18T18:21:41Z&lt;/submitTimeUTC&gt;
            &lt;submitTimeLocal&gt;2016-11-18T10:21:41&lt;/submitTimeLocal&gt;
            &lt;transactionStatus&gt;FDSPendingReview&lt;/transactionStatus&gt;
            &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
            &lt;firstName&gt;Ellen&lt;/firstName&gt;
            &lt;lastName&gt;Johnson&lt;/lastName&gt;
            &lt;accountType&gt;Mastercard&lt;/accountType&gt;
            &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
            &lt;settleAmount&gt;50000.00&lt;/settleAmount&gt;
            &lt;marketType&gt;eCommerce&lt;/marketType&gt;
            &lt;product&gt;Card Not Present&lt;/product&gt;
            &lt;fraudInformation&gt;
                &lt;fraudFilterList&gt;
                    &lt;fraudFilter&gt;Amount Filter&lt;/fraudFilter&gt;
                &lt;/fraudFilterList&gt;
                &lt;fraudAction&gt;Review&lt;/fraudAction&gt;
            &lt;/fraudInformation&gt;
        &lt;/transaction&gt;
    &lt;/transactions&gt;
    &lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
&lt;/getUnsettledTransactionListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-held-transaction-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getUnsettledTransactionListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactions&gt;
        &lt;transaction&gt;
            &lt;transId&gt;60010736710&lt;/transId&gt;
            &lt;submitTimeUTC&gt;2016-11-18T18:21:41Z&lt;/submitTimeUTC&gt;
            &lt;submitTimeLocal&gt;2016-11-18T10:21:41&lt;/submitTimeLocal&gt;
            &lt;transactionStatus&gt;FDSPendingReview&lt;/transactionStatus&gt;
            &lt;invoiceNumber&gt;INV-12345&lt;/invoiceNumber&gt;
            &lt;firstName&gt;Ellen&lt;/firstName&gt;
            &lt;lastName&gt;Johnson&lt;/lastName&gt;
            &lt;accountType&gt;Mastercard&lt;/accountType&gt;
            &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
            &lt;settleAmount&gt;50000.00&lt;/settleAmount&gt;
            &lt;marketType&gt;eCommerce&lt;/marketType&gt;
            &lt;product&gt;Card Not Present&lt;/product&gt;
            &lt;fraudInformation&gt;
                &lt;fraudFilterList&gt;
                    &lt;fraudFilter&gt;Amount Filter&lt;/fraudFilter&gt;
                &lt;/fraudFilterList&gt;
                &lt;fraudAction&gt;Review&lt;/fraudAction&gt;
            &lt;/fraudInformation&gt;
        &lt;/transaction&gt;
    &lt;/transactions&gt;
    &lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
&lt;/getUnsettledTransactionListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-held-transaction-list">{
	&quot;transactions&quot;: [{
		&quot;transId&quot;: &quot;60010736710&quot;,
		&quot;submitTimeUTC&quot;: &quot;2016-11-18T18:21:41Z&quot;,
		&quot;submitTimeLocal&quot;: &quot;2016-11-18T10:21:41&quot;,
		&quot;transactionStatus&quot;: &quot;FDSPendingReview&quot;,
		&quot;invoiceNumber&quot;: &quot;INV-12345&quot;,
		&quot;firstName&quot;: &quot;Ellen&quot;,
		&quot;lastName&quot;: &quot;Johnson&quot;,
		&quot;accountType&quot;: &quot;Mastercard&quot;,
		&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
		&quot;settleAmount&quot;: 50000,
		&quot;marketType&quot;: &quot;eCommerce&quot;,
		&quot;product&quot;: &quot;Card Not Present&quot;,
		&quot;fraudInformation&quot;: {
			&quot;fraudFilterList&quot;: [
				&quot;Amount Filter&quot;
			],
			&quot;fraudAction&quot;: &quot;Review&quot;
		}
	}],
	&quot;totalNumInResultSet&quot;: 1,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-held-transaction-list" style="display: none !important">{
	&quot;transactions&quot;: [{
		&quot;transId&quot;: &quot;60010736710&quot;,
		&quot;submitTimeUTC&quot;: &quot;2016-11-18T18:21:41Z&quot;,
		&quot;submitTimeLocal&quot;: &quot;2016-11-18T10:21:41&quot;,
		&quot;transactionStatus&quot;: &quot;FDSPendingReview&quot;,
		&quot;invoiceNumber&quot;: &quot;INV-12345&quot;,
		&quot;firstName&quot;: &quot;Ellen&quot;,
		&quot;lastName&quot;: &quot;Johnson&quot;,
		&quot;accountType&quot;: &quot;Mastercard&quot;,
		&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
		&quot;settleAmount&quot;: 50000,
		&quot;marketType&quot;: &quot;eCommerce&quot;,
		&quot;product&quot;: &quot;Card Not Present&quot;,
		&quot;fraudInformation&quot;: {
			&quot;fraudFilterList&quot;: [
				&quot;Amount Filter&quot;
			],
			&quot;fraudAction&quot;: &quot;Review&quot;
		}
	}],
	&quot;totalNumInResultSet&quot;: 1,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                </pre>
<div id="txtRespLoader-get-held-transaction-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="php-get-held-transaction-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-held-transaction-list"></div>
<div id="showCode-php-get-held-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-held-transaction-list"></a>
</p>
<textarea class="php" id="textarea-php-get-held-transaction-list" name="textarea-php-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-held-transaction-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-held-transaction-list"></div>
<div id="showCode-cs-get-held-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-held-transaction-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-held-transaction-list" name="textarea-cs-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-held-transaction-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-held-transaction-list"></div>
<div id="showCode-java-get-held-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-held-transaction-list"></a>
</p>
<textarea class="java" id="textarea-java-get-held-transaction-list" name="textarea-java-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-held-transaction-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-held-transaction-list"></div>
<div id="showCode-rb-get-held-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-held-transaction-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-held-transaction-list" name="textarea-rb-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-held-transaction-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">
 
<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-held-transaction-list"></div>
<div id="showCode-py-get-held-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-held-transaction-list"></a>
</p>
<textarea class="python" id="textarea-py-get-held-transaction-list" name="textarea-py-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-held-transaction-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-held-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-held-transaction-list"></div>
<div id="showCode-js-get-held-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-held-transaction-list"></a>
</p>
<textarea class="node" id="textarea-js-get-held-transaction-list" name="textarea-js-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-held-transaction-list">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-held-transaction-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-held-transaction-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-held-transaction-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-held-transaction-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-held-transaction-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-held-transaction-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-held-transaction-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-held-transaction-list"></div>
<div id="showCode-php-get-held-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-held-transaction-list" name="textarea-php-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-held-transaction-list"></div>
<div id="showCode-cs-get-held-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-held-transaction-list" name="textarea-cs-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
 <div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-held-transaction-list"></div>
<div id="showCode-java-get-held-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-held-transaction-list" name="textarea-java-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-held-transaction-list"></div>
<div id="showCode-rb-get-held-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-held-transaction-list" name="textarea-rb-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-held-transaction-list"></div>
<div id="showCode-py-get-held-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-held-transaction-list" name="textarea-py-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
 </div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-held-transaction-list"></div>
<div id="showCode-js-get-held-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-held-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-held-transaction-list" name="textarea-js-get-held-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-held-transaction-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-held-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-held-transaction-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-held-transaction-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-held-transaction-list">
<div class="panel-body">
<p><em>getUnsettledTransactionListRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
 Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>status</td>
<td><strong>Required.</strong><br />
</td>
<td><div>String.<br /><br />Use <code>pendingApproval</code> to request transactions held for merchant approval.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
 <td>Order of transactions in response.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>id</code> to sort by transaction ID. Use <code>submitTimeUTC</code> to sort by transaction submission time, in UTC.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
<td>Sort the transactions in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 transactions per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 transactions, setting <code>offset</code> to 2 will return the second 100 transactions, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-held-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-held-transaction-list">
Response Field Description
</a>
 </h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-held-transaction-list">
<div class="panel-body">
<p><em>getUnsettledTransactionListResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactions</td>
<td>Contains information about all transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transaction</td>
<td>Contains information about one transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeLocal</td>
<td>Date and time the transaction was submitted, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>transactionStatus</td>
<td>The status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>authorizedPendingCapture</code><br /><code>capturedPendingSettlement</code><br /><code>communicationError</code><br /><code>refundSettledSuccessfully</code><br /><code>refundPendingSettlement</code><br /><code>approvedReview</code><br /><code>declined</code><br /><code>couldNotVoid</code><br /><code>expired</code><br /><code>generalError</code><br /><code>failedReview</code><br /><code>settledSuccessfully</code><br /><code>settlementError</code><br /><code>underReview</code><br /><code>voided</code><br /><code>FDSPendingReview</code><br /><code>FDSAuthorizedPendingReview</code><br /><code>returnedItem</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String. 20-character maximum.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>settleAmount</td>
<td>The amount that was submitted for settlement.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='twoBullet'>hasReturnedItems</td>
<td>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
Indicates that this transaction contains returned eCheck.Net transactions. More detailed information can be seen by calling <code>getTransactionDetailsResponse</code> for the transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>subscription</td>
<td>Contains subscription information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>id</td>
<td>The subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payNum</td>
<td>Identifies the number of this transaction, in terms of how many transactions have been submitted for this subscription.<br /><br />
For example, the third transaction processed for this subscription will return <code>payNum</code> set to <code>3</code>.</td>
<td><div>Numeric string, between 1 and 999.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br /> Either <code>Card Not Present</code> or <code>Card Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>mobileDeviceId</td>
<td>The unique identifier of the mobile device.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>profile</td>
<td>Contains customer profile information used for this transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>customerPaymentProfileId</td>
<td>The ID of the customer payment profile used to charge this transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
</div>
</div>
<h3 id="fraud-management-approve-or-decline-held-transaction">Approve or Decline Held Transaction</h3>
<p>Approve or Decline a held Transaction.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="approve-or-decline-held-transactionTryIt" href="#console-approve-or-decline-held-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="approve-or-decline-held-transactionphp" href="#php-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="approve-or-decline-held-transactioncs" href="#cs-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="approve-or-decline-held-transactionjava" href="#java-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="approve-or-decline-held-transactionrb" href="#ruby-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="approve-or-decline-held-transactionpy" href="#python-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="approve-or-decline-held-transactionjs" href="#node-approve-or-decline-held-transaction" class="fraud-management" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-approve-or-decline-held-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="approve-or-decline-held-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="approve-or-decline-held-transaction">XML</button>
</div>
 <div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-approve-or-decline-held-transaction" spellcheck="false" class="XML XMLRequest">&lt;updateHeldTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;12345&lt;/refId&gt;
  &lt;heldTransactionRequest&gt;
    &lt;action&gt;approve&lt;/action&gt;
    &lt;refTransId&gt;12345&lt;/refTransId&gt;
  &lt;/heldTransactionRequest&gt;
&lt;/updateHeldTransactionRequest&gt;
</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-approve-or-decline-held-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;updateHeldTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;12345&lt;/refId&gt;
  &lt;heldTransactionRequest&gt;
    &lt;action&gt;approve&lt;/action&gt;
    &lt;refTransId&gt;12345&lt;/refTransId&gt;
  &lt;/heldTransactionRequest&gt;
&lt;/updateHeldTransactionRequest&gt;
</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-approve-or-decline-held-transaction" spellcheck="false" class="JSON JSONRequest">{
  &quot;updateHeldTransactionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;12345&quot;,
    &quot;heldTransactionRequest&quot;: {
      &quot;action&quot;: &quot;approve&quot;,
      &quot;refTransId&quot;: &quot;12345&quot;
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-approve-or-decline-held-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;updateHeldTransactionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;12345&quot;,
    &quot;heldTransactionRequest&quot;: {
      &quot;action&quot;: &quot;approve&quot;,
      &quot;refTransId&quot;: &quot;12345&quot;
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-approve-or-decline-held-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-approve-or-decline-held-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-approve-or-decline-held-transaction"></span>


<div class="errorDetails" id="detailsDiv-approve-or-decline-held-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-approve-or-decline-held-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateHeldTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;40C68K&lt;/authCode&gt;
        &lt;avsResultCode&gt;Y&lt;/avsResultCode&gt;
        &lt;cvvResultCode&gt;P&lt;/cvvResultCode&gt;
        &lt;cavvResultCode&gt;2&lt;/cavvResultCode&gt;
        &lt;transId&gt;60010736710&lt;/transId&gt;
        &lt;refTransID&gt;60010736710&lt;/refTransID&gt;
        &lt;transHash&gt;722F2079BDC5500935D32BEDDF6165B1&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;messages&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/messages&gt;
        &lt;transHashSha2&gt;EFF9481A54853F79C37DF2602339102DBB15D9B42D56FC20373B2E48E6918D2FD4B8334C916301AF01E41A4FC7159FD434725BE9471DF285243F6B0A63A99F76&lt;/transHashSha2&gt;
    &lt;/transactionResponse&gt;
    &lt;refId&gt;12345&lt;/refId&gt;
&lt;/updateHeldTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-approve-or-decline-held-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateHeldTransactionResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactionResponse&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;authCode&gt;40C68K&lt;/authCode&gt;
        &lt;avsResultCode&gt;Y&lt;/avsResultCode&gt;
        &lt;cvvResultCode&gt;P&lt;/cvvResultCode&gt;
        &lt;cavvResultCode&gt;2&lt;/cavvResultCode&gt;
        &lt;transId&gt;60010736710&lt;/transId&gt;
        &lt;refTransID&gt;60010736710&lt;/refTransID&gt;
        &lt;transHash&gt;722F2079BDC5500935D32BEDDF6165B1&lt;/transHash&gt;
        &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
        &lt;accountType&gt;Mastercard&lt;/accountType&gt;
        &lt;messages&gt;
            &lt;code&gt;1&lt;/code&gt;
            &lt;description&gt;This transaction has been approved.&lt;/description&gt;
        &lt;/messages&gt;
        &lt;transHashSha2&gt;EFF9481A54853F79C37DF2602339102DBB15D9B42D56FC20373B2E48E6918D2FD4B8334C916301AF01E41A4FC7159FD434725BE9471DF285243F6B0A63A99F76&lt;/transHashSha2&gt;
    &lt;/transactionResponse&gt;
    &lt;refId&gt;12345&lt;/refId&gt;
&lt;/updateHeldTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-approve-or-decline-held-transaction">{
	&quot;transactionResponse&quot;: {
		&quot;responseCode&quot;: &quot;1&quot;,
		&quot;authCode&quot;: &quot;40C68K&quot;,
		&quot;avsResultCode&quot;: &quot;Y&quot;,
		&quot;cvvResultCode&quot;: &quot;P&quot;,
		&quot;cavvResultCode&quot;: &quot;2&quot;,
		&quot;transId&quot;: &quot;60010736710&quot;,
		&quot;refTransID&quot;: &quot;60010736710&quot;,
		&quot;transHash&quot;: &quot;722F2079BDC5500935D32BEDDF6165B1&quot;,
		&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
		&quot;accountType&quot;: &quot;Mastercard&quot;,
		&quot;messages&quot;: [{
			&quot;code&quot;: &quot;1&quot;,
			&quot;description&quot;: &quot;This transaction has been approved.&quot;
		}],
		&quot;transHashSha2&quot;: &quot;EFF9481A54853F79C37DF2602339102DBB15D9B42D56FC20373B2E48E6918D2FD4B8334C916301AF01E41A4FC7159FD434725BE9471DF285243F6B0A63A99F76&quot;
	},
	&quot;refId&quot;: &quot;12345&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-approve-or-decline-held-transaction" style="display: none !important">{
	&quot;transactionResponse&quot;: {
		&quot;responseCode&quot;: &quot;1&quot;,
		&quot;authCode&quot;: &quot;40C68K&quot;,
		&quot;avsResultCode&quot;: &quot;Y&quot;,
		&quot;cvvResultCode&quot;: &quot;P&quot;,
		&quot;cavvResultCode&quot;: &quot;2&quot;,
		&quot;transId&quot;: &quot;60010736710&quot;,
		&quot;refTransID&quot;: &quot;60010736710&quot;,
		&quot;transHash&quot;: &quot;722F2079BDC5500935D32BEDDF6165B1&quot;,
		&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
		&quot;accountType&quot;: &quot;Mastercard&quot;,
		&quot;messages&quot;: [{
			&quot;code&quot;: &quot;1&quot;,
			&quot;description&quot;: &quot;This transaction has been approved.&quot;
		}],
		&quot;transHashSha2&quot;: &quot;EFF9481A54853F79C37DF2602339102DBB15D9B42D56FC20373B2E48E6918D2FD4B8334C916301AF01E41A4FC7159FD434725BE9471DF285243F6B0A63A99F76&quot;
	},
	&quot;refId&quot;: &quot;12345&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                </pre>
<div id="txtRespLoader-approve-or-decline-held-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-approve-or-decline-held-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-approve-or-decline-held-transaction"></div>
<div id="showCode-php-approve-or-decline-held-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-approve-or-decline-held-transaction"></a>
</p>
<textarea class="php" id="textarea-php-approve-or-decline-held-transaction" name="textarea-php-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-approve-or-decline-held-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-approve-or-decline-held-transaction"></div>
<div id="showCode-cs-approve-or-decline-held-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-approve-or-decline-held-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-approve-or-decline-held-transaction" name="textarea-cs-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-approve-or-decline-held-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-approve-or-decline-held-transaction"></div>
<div id="showCode-java-approve-or-decline-held-transaction">
<p>
 This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-approve-or-decline-held-transaction"></a>
</p>
<textarea class="java" id="textarea-java-approve-or-decline-held-transaction" name="textarea-java-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-approve-or-decline-held-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-approve-or-decline-held-transaction"></div>
<div id="showCode-rb-approve-or-decline-held-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-approve-or-decline-held-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-approve-or-decline-held-transaction" name="textarea-rb-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-approve-or-decline-held-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-approve-or-decline-held-transaction"></div>
<div id="showCode-py-approve-or-decline-held-transaction">
<p>
 This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-approve-or-decline-held-transaction"></a>
</p>
<textarea class="python" id="textarea-py-approve-or-decline-held-transaction" name="textarea-py-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-approve-or-decline-held-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="approve-or-decline-held-transaction">
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-approve-or-decline-held-transaction"></div>
<div id="showCode-js-approve-or-decline-held-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-approve-or-decline-held-transaction"></a>
</p>
<textarea class="node" id="textarea-js-approve-or-decline-held-transaction" name="textarea-js-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-approve-or-decline-held-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="approve-or-decline-held-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="approve-or-decline-held-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="approve-or-decline-held-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="approve-or-decline-held-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="approve-or-decline-held-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="approve-or-decline-held-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-approve-or-decline-held-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-approve-or-decline-held-transaction"></div>
<div id="showCode-php-approve-or-decline-held-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-approve-or-decline-held-transaction" name="textarea-php-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-approve-or-decline-held-transaction"></div>
<div id="showCode-cs-approve-or-decline-held-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-approve-or-decline-held-transaction" name="textarea-cs-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-approve-or-decline-held-transaction"></div>
 <div id="showCode-java-approve-or-decline-held-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-approve-or-decline-held-transaction" name="textarea-java-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-approve-or-decline-held-transaction"></div>
<div id="showCode-rb-approve-or-decline-held-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-approve-or-decline-held-transaction" name="textarea-rb-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-approve-or-decline-held-transaction"></div>
<div id="showCode-py-approve-or-decline-held-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-approve-or-decline-held-transaction" name="textarea-py-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-approve-or-decline-held-transaction"></div>
<div id="showCode-js-approve-or-decline-held-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-approve-or-decline-held-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-approve-or-decline-held-transaction" name="textarea-js-approve-or-decline-held-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-approve-or-decline-held-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-approve-or-decline-held-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-approve-or-decline-held-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-approve-or-decline-held-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-approve-or-decline-held-transaction">
<div class="panel-body">
<p><em>updateHeldTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
 Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>action</td>
<td><strong>Required.</strong><br />
The action you are requesting to take for the specified transaction.<br /><br />
Use <code>approve</code> to permit the transaction to process as usual. Use <code>decline</code> to mark the transaction as declined, to prevent it from processing.</td>
<td><div>String.<br /><br />Either <code>approve</code> or <code>decline</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>refTransId</td>
<td><strong>Required.</strong><br />
The transaction ID of the held transaction.<br /><br />
 </td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-approve-or-decline-held-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-approve-or-decline-held-transaction">
 Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-approve-or-decline-held-transaction">
<div class="panel-body">
<p><em>updateHeldTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
 For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="recurring-billing" class="section-title">Recurring Billing</h2>
<p class="lead">Recurring Billing API methods enable you to manage regular payment subscriptions. For more information about Recurring Billing see the <a href="https://developer.authorize.net/api/reference/features/recurring_billing.html">Recurring Billing developer guide</a>.</p>
<h3 id="recurring-billing-create-a-subscription">Create a Subscription</h3>
<p>For subscriptions with a monthly interval, whose payments begin on the 31st of a month, payments for months with fewer than 31 days occur on the last day of the month.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-a-subscriptionTryIt" href="#console-create-a-subscription" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-subscriptionphp" href="#php-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-subscriptioncs" href="#cs-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-subscriptionjava" href="#java-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-subscriptionrb" href="#ruby-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-subscriptionpy" href="#python-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-subscriptionjs" href="#node-create-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-subscription">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-subscription">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-subscription">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-subscription" spellcheck="false" class="XML XMLRequest">&lt;ARBCreateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscription&gt;
		&lt;name&gt;Sample subscription&lt;/name&gt;
		&lt;paymentSchedule&gt;
			&lt;interval&gt;
				&lt;length&gt;1&lt;/length&gt;
				&lt;unit&gt;months&lt;/unit&gt;
			&lt;/interval&gt;
			&lt;startDate&gt;2020-08-30&lt;/startDate&gt;
			&lt;totalOccurrences&gt;12&lt;/totalOccurrences&gt;
			&lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
		&lt;/paymentSchedule&gt;
		&lt;amount&gt;10.29&lt;/amount&gt;
		&lt;trialAmount&gt;0.00&lt;/trialAmount&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
				&lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
		&lt;billTo&gt;
			&lt;firstName&gt;John&lt;/firstName&gt;
			&lt;lastName&gt;Smith&lt;/lastName&gt;
		&lt;/billTo&gt;
	&lt;/subscription&gt;
&lt;/ARBCreateSubscriptionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-subscription" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBCreateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscription&gt;
		&lt;name&gt;Sample subscription&lt;/name&gt;
		&lt;paymentSchedule&gt;
			&lt;interval&gt;
				&lt;length&gt;1&lt;/length&gt;
				&lt;unit&gt;months&lt;/unit&gt;
			&lt;/interval&gt;
			&lt;startDate&gt;2020-08-30&lt;/startDate&gt;
			&lt;totalOccurrences&gt;12&lt;/totalOccurrences&gt;
			&lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
		&lt;/paymentSchedule&gt;
		&lt;amount&gt;10.29&lt;/amount&gt;
		&lt;trialAmount&gt;0.00&lt;/trialAmount&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
				&lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
		&lt;billTo&gt;
			&lt;firstName&gt;John&lt;/firstName&gt;
			&lt;lastName&gt;Smith&lt;/lastName&gt;
		&lt;/billTo&gt;
	&lt;/subscription&gt;
&lt;/ARBCreateSubscriptionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-subscription" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBCreateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscription&quot;: {
            &quot;name&quot;: &quot;Sample subscription&quot;,
            &quot;paymentSchedule&quot;: {
                &quot;interval&quot;: {
                    &quot;length&quot;: &quot;1&quot;,
                    &quot;unit&quot;: &quot;months&quot;
                },
                &quot;startDate&quot;: &quot;2020-08-30&quot;,
                &quot;totalOccurrences&quot;: &quot;12&quot;,
                &quot;trialOccurrences&quot;: &quot;1&quot;
            },
            &quot;amount&quot;: &quot;10.29&quot;,
            &quot;trialAmount&quot;: &quot;0.00&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;
                }
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;John&quot;,
                &quot;lastName&quot;: &quot;Smith&quot;
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-subscription" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBCreateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscription&quot;: {
            &quot;name&quot;: &quot;Sample subscription&quot;,
            &quot;paymentSchedule&quot;: {
                &quot;interval&quot;: {
                    &quot;length&quot;: &quot;1&quot;,
                    &quot;unit&quot;: &quot;months&quot;
                },
                &quot;startDate&quot;: &quot;2020-08-30&quot;,
                &quot;totalOccurrences&quot;: &quot;12&quot;,
                &quot;trialOccurrences&quot;: &quot;1&quot;
            },
            &quot;amount&quot;: &quot;10.29&quot;,
            &quot;trialAmount&quot;: &quot;0.00&quot;,
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;
                }
            },
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;John&quot;,
                &quot;lastName&quot;: &quot;Smith&quot;
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-subscription" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-subscription" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-subscription"></span>


<div class="errorDetails" id="detailsDiv-create-a-subscription">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-subscription">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCreateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;247150&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;215472&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;189691&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBCreateSubscriptionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-subscription" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCreateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;247150&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;215472&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;189691&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBCreateSubscriptionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-subscription">{
    &quot;subscriptionId&quot;: &quot;158383&quot;,
    &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;247135&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;215458&quot;,
		&quot;customerAddressId&quot;: &quot;189691&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-subscription" style="display: none !important">{
    &quot;subscriptionId&quot;: &quot;158383&quot;,
    &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;247135&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;215458&quot;,
		&quot;customerAddressId&quot;: &quot;189691&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                </pre>
<div id="txtRespLoader-create-a-subscription" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-a-subscription">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-subscription"></div>
<div id="showCode-php-create-a-subscription">
 <p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-subscription"></a>
</p>
<textarea class="php" id="textarea-php-create-a-subscription" name="textarea-php-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-subscription">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-subscription"></div>
<div id="showCode-cs-create-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-subscription"></a>
</p>
<textarea class="cs" id="textarea-cs-create-a-subscription" name="textarea-cs-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-subscription">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-subscription"></div>
<div id="showCode-java-create-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-subscription"></a>
</p>
<textarea class="java" id="textarea-java-create-a-subscription" name="textarea-java-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-a-subscription">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-subscription"></div>
<div id="showCode-rb-create-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-subscription"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-subscription" name="textarea-rb-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-subscription">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-subscription"></div>
<div id="showCode-py-create-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-subscription"></a>
</p>
<textarea class="python" id="textarea-py-create-a-subscription" name="textarea-py-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-subscription">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-subscription">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-subscription"></div>
<div id="showCode-js-create-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-subscription"></a>
</p>
<textarea class="node" id="textarea-js-create-a-subscription" name="textarea-js-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-subscription">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-subscription">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-subscription">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-subscription">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-subscription">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-subscription">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-subscription">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-a-subscription">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-subscription"></div>
<div id="showCode-php-create-a-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-subscription" name="textarea-php-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-subscription"></div>
<div id="showCode-cs-create-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-subscription" name="textarea-cs-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-subscription"></div>
<div id="showCode-java-create-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-subscription"></a>
</p>
 <textarea class="sample-code" id="textarea-java-create-a-subscription" name="textarea-java-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-subscription"></div>
<div id="showCode-rb-create-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-subscription" name="textarea-rb-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-subscription"></div>
<div id="showCode-py-create-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-subscription" name="textarea-py-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-subscription"></div>
<div id="showCode-js-create-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-subscription" name="textarea-js-create-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-subscription" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-subscription">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-subscription" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-subscription">
<div class="panel-body">
<p><em>ARBCreateSubscriptionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscription</td>
<td><strong>Required.</strong><br />
Contains information about the subscription.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Merchant-assigned name for the subscription.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentSchedule</td>
<td><strong>Required.</strong><br />
Contains information about the payment schedule.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>interval</td>
<td><strong>Required.</strong><br />
Contains information about the time between payments.<br /><br />
The <code>length</code> and <code>unit</code> elements together define the interval in between payments. If specified in terms of days, the interval can be between seven (7) and 365 days. If specified in terms of months, the interval can be between one (1) and twelve (12) months.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>length</td>
<td><strong>Required.</strong><br />
The measurement of time, in association with <code>unit</code>, that is used to define the frequency of the billing occurrences.<br /><br />
For a <code>unit</code> of <code>days</code>, use an integer between 7 and 365, inclusive. For a <code>unit</code> of <code>months</code>, use an integer between 1 and 12, inclusive.</td>
<td><div>Numeric string, up to 3 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unit</td>
<td><strong>Required.</strong><br />
The unit of time, in association with the <code>length</code>, between each billing occurrence.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>days</code> or <code>months</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>startDate</td>
<td><strong>Required.</strong><br />
The date of the first payment. Can not be prior to the subscription creation date.<br /><br />
The validation checks against the local server's time, which is expressed as Mountain Time. An error might occur if you try to submit a subscription from a time zone in which the resulting date is different; for example, if you are in the Pacific time zone and try to submit a subscription between 11:00 PM and midnight, with a start date set for today.<br /><br />If the start date is the 31st, and the interval is monthly, the billing date is the last day of each month (even when the month does not have 31 days).</td>
<td><div>String, 10 characters.<br /><br />Use XML date (YYYY-MM-DD) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>totalOccurrences</td>
<td><strong>Required.</strong><br />
Number of payments for the subscription.<br /><br />
If a trial period is specified, this value should include the number of payments during the trial period.<br /><br />To create an ongoing subscription without an end date, set <code>totalOccurrences</code> to "9999".</td>
<td><div>Numeric string, up to 4 digits.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>trialOccurrences</td>
<td>Number of payments in the trial period.<br /><br />
If a trial period is specified, include the number of payments during the trial period in <code>totalOccurrences</code>.</td>
<td><div>Numeric string, up to 2 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the charge to be run after the trial period.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>trialAmount</td>
<td><strong>Conditional.</strong><br /><br />The amount to be charged for each payment during the trial period.<br /><br />
Required when using <code>trialOccurrences</code>.<br /><br />During the trial period, we will bill <code>trialAmount</code> on each scheduled payment. Once the trial period is over, we will bill <code>amount</code> for the remaining scheduled payments.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For recurring payments, do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains optional order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
The invoice number will be associated with each payment in the subscription.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Merchant-provided description of the subscription.<br /><br />
The description will be associated with each payment in the subscription.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
For example, janedoe@example.com.</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
 </div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-subscription">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-subscription">
<div class="panel-body">
<p><em>ARBCreateSubscriptionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td>The payment gateway assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string, up to 13 digits.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>customerAddressId</td>
<td>Payment gateway assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-create-a-subscription-from-customer-profile">Create a Subscription from Customer Profile</h3>
<p>This request enables you to create a recurring billing subscription from an existing customer profile. NOTE: The customer payment profile first and last name fields must be populated, these are required for a subscription. For subscriptions with a monthly interval, whose payments begin on the 31st of a month, payments for months with fewer than 31 days occur on the last day of the month.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-a-subscription-from-customer-profileTryIt" href="#console-create-a-subscription-from-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-subscription-from-customer-profilephp" href="#php-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-subscription-from-customer-profilecs" href="#cs-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-subscription-from-customer-profilejava" href="#java-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-subscription-from-customer-profilerb" href="#ruby-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-subscription-from-customer-profilepy" href="#python-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-subscription-from-customer-profilejs" href="#node-create-a-subscription-from-customer-profile" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
 </li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-subscription-from-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-subscription-from-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-subscription-from-customer-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-subscription-from-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;ARBCreateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscription&gt;
		&lt;name&gt;Sample subscription&lt;/name&gt;
		&lt;paymentSchedule&gt;
			&lt;interval&gt;
				&lt;length&gt;1&lt;/length&gt;
				&lt;unit&gt;months&lt;/unit&gt;
			&lt;/interval&gt;
			&lt;startDate&gt;2020-08-30&lt;/startDate&gt;
			&lt;totalOccurrences&gt;12&lt;/totalOccurrences&gt;
			&lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
		&lt;/paymentSchedule&gt;
		&lt;amount&gt;10.29&lt;/amount&gt;
		&lt;trialAmount&gt;0.00&lt;/trialAmount&gt;
        &lt;profile&gt;
          &lt;customerProfileId&gt;39931060&lt;/customerProfileId&gt;
          &lt;customerPaymentProfileId&gt;36223863&lt;/customerPaymentProfileId&gt;
          &lt;customerAddressId&gt;37726371&lt;/customerAddressId&gt;
        &lt;/profile&gt;
	&lt;/subscription&gt;
&lt;/ARBCreateSubscriptionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-subscription-from-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBCreateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscription&gt;
		&lt;name&gt;Sample subscription&lt;/name&gt;
		&lt;paymentSchedule&gt;
			&lt;interval&gt;
				&lt;length&gt;1&lt;/length&gt;
				&lt;unit&gt;months&lt;/unit&gt;
			&lt;/interval&gt;
			&lt;startDate&gt;2020-08-30&lt;/startDate&gt;
			&lt;totalOccurrences&gt;12&lt;/totalOccurrences&gt;
			&lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
		&lt;/paymentSchedule&gt;
		&lt;amount&gt;10.29&lt;/amount&gt;
		&lt;trialAmount&gt;0.00&lt;/trialAmount&gt;
        &lt;profile&gt;
          &lt;customerProfileId&gt;39931060&lt;/customerProfileId&gt;
          &lt;customerPaymentProfileId&gt;36223863&lt;/customerPaymentProfileId&gt;
          &lt;customerAddressId&gt;37726371&lt;/customerAddressId&gt;
        &lt;/profile&gt;
	&lt;/subscription&gt;
&lt;/ARBCreateSubscriptionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-subscription-from-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBCreateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscription&quot;: {
            &quot;name&quot;: &quot;Sample subscription&quot;,
            &quot;paymentSchedule&quot;: {
                &quot;interval&quot;: {
                    &quot;length&quot;: &quot;1&quot;,
                    &quot;unit&quot;: &quot;months&quot;
                },
                &quot;startDate&quot;: &quot;2020-08-30&quot;,
                &quot;totalOccurrences&quot;: &quot;12&quot;,
                &quot;trialOccurrences&quot;: &quot;1&quot;
            },
            &quot;amount&quot;: &quot;10.29&quot;,
            &quot;trialAmount&quot;: &quot;0.00&quot;,
            &quot;profile&quot;: {
                &quot;customerProfileId&quot;: &quot;39931060&quot;,
                &quot;customerPaymentProfileId&quot;: &quot;36223863&quot;,
                &quot;customerAddressId&quot;: &quot;37726371&quot;
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-subscription-from-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBCreateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscription&quot;: {
            &quot;name&quot;: &quot;Sample subscription&quot;,
            &quot;paymentSchedule&quot;: {
                &quot;interval&quot;: {
                    &quot;length&quot;: &quot;1&quot;,
                    &quot;unit&quot;: &quot;months&quot;
                },
                &quot;startDate&quot;: &quot;2020-08-30&quot;,
                &quot;totalOccurrences&quot;: &quot;12&quot;,
                &quot;trialOccurrences&quot;: &quot;1&quot;
            },
            &quot;amount&quot;: &quot;10.29&quot;,
            &quot;trialAmount&quot;: &quot;0.00&quot;,
            &quot;profile&quot;: {
                &quot;customerProfileId&quot;: &quot;39931060&quot;,
                &quot;customerPaymentProfileId&quot;: &quot;36223863&quot;,
                &quot;customerAddressId&quot;: &quot;37726371&quot;
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-subscription-from-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-subscription-from-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-subscription-from-customer-profile"></span>


 <div class="errorDetails" id="detailsDiv-create-a-subscription-from-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-subscription-from-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCreateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;39931060&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;36223863&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;37726371&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBCreateSubscriptionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-subscription-from-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCreateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;39931060&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;36223863&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;37726371&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBCreateSubscriptionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-subscription-from-customer-profile">{
    &quot;subscriptionId&quot;: &quot;158383&quot;,
	profile&quot;: {
		&quot;customerProfileId&quot;: &quot;39931060&quot;,
		&quot;customerPaymentProfileId&quot;: &quot;36223863&quot;,
		&quot;customerAddressId&quot;: &quot;37726371&quot;
	},
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-subscription-from-customer-profile" style="display: none !important">{
    &quot;subscriptionId&quot;: &quot;158383&quot;,
	profile&quot;: {
		&quot;customerProfileId&quot;: &quot;39931060&quot;,
		&quot;customerPaymentProfileId&quot;: &quot;36223863&quot;,
		&quot;customerAddressId&quot;: &quot;37726371&quot;
	},
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                </pre>
<div id="txtRespLoader-create-a-subscription-from-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-a-subscription-from-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-subscription-from-customer-profile"></div>
<div id="showCode-php-create-a-subscription-from-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-create-a-subscription-from-customer-profile" name="textarea-php-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-subscription-from-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-subscription-from-customer-profile"></div>
<div id="showCode-cs-create-a-subscription-from-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-subscription-from-customer-profile"></a>
 </p>
<textarea class="cs" id="textarea-cs-create-a-subscription-from-customer-profile" name="textarea-cs-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-subscription-from-customer-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-subscription-from-customer-profile"></div>
<div id="showCode-java-create-a-subscription-from-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-create-a-subscription-from-customer-profile" name="textarea-java-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-a-subscription-from-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-subscription-from-customer-profile"></div>
<div id="showCode-rb-create-a-subscription-from-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-subscription-from-customer-profile" name="textarea-rb-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-subscription-from-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-subscription-from-customer-profile"></div>
<div id="showCode-py-create-a-subscription-from-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-create-a-subscription-from-customer-profile" name="textarea-py-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-subscription-from-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-subscription-from-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-subscription-from-customer-profile"></div>
<div id="showCode-js-create-a-subscription-from-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-create-a-subscription-from-customer-profile" name="textarea-js-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-subscription-from-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-subscription-from-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-subscription-from-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-subscription-from-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-subscription-from-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-subscription-from-customer-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-subscription-from-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-a-subscription-from-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-subscription-from-customer-profile"></div>
<div id="showCode-php-create-a-subscription-from-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-subscription-from-customer-profile" name="textarea-php-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-subscription-from-customer-profile"></div>
<div id="showCode-cs-create-a-subscription-from-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-subscription-from-customer-profile" name="textarea-cs-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-subscription-from-customer-profile"></div>
<div id="showCode-java-create-a-subscription-from-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-a-subscription-from-customer-profile" name="textarea-java-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-subscription-from-customer-profile"></div>
<div id="showCode-rb-create-a-subscription-from-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-subscription-from-customer-profile" name="textarea-rb-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-subscription-from-customer-profile"></div>
<div id="showCode-py-create-a-subscription-from-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-subscription-from-customer-profile" name="textarea-py-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-subscription-from-customer-profile"></div>
<div id="showCode-js-create-a-subscription-from-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-subscription-from-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-subscription-from-customer-profile" name="textarea-js-create-a-subscription-from-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-subscription-from-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
 <div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-subscription-from-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-subscription-from-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-subscription-from-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-subscription-from-customer-profile">
<div class="panel-body">
<p><em>ARBCreateSubscriptionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscription</td>
<td><strong>Required.</strong><br />
Contains information about the subscription.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Merchant-assigned name for the subscription.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentSchedule</td>
<td><strong>Required.</strong><br />
Contains information about the payment schedule.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>interval</td>
<td><strong>Required.</strong><br />
Contains information about the time between payments.<br /><br />
The <code>length</code> and <code>unit</code> elements together define the interval in between payments. If specified in terms of days, the interval can be between seven (7) and 365 days. If specified in terms of months, the interval can be between one (1) and twelve (12) months.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>length</td>
<td><strong>Required.</strong><br />
The measurement of time, in association with <code>unit</code>, that is used to define the frequency of the billing occurrences.<br /><br />
For a <code>unit</code> of <code>days</code>, use an integer between 7 and 365, inclusive. For a <code>unit</code> of <code>months</code>, use an integer between 1 and 12, inclusive.</td>
<td><div>Numeric string, up to 3 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unit</td>
<td><strong>Required.</strong><br />
The unit of time, in association with the <code>length</code>, between each billing occurrence.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>days</code> or <code>months</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>startDate</td>
<td><strong>Required.</strong><br />
The date of the first payment. Can not be prior to the subscription creation date.<br /><br />
The validation checks against the local server's time, which is expressed as Mountain Time. An error might occur if you try to submit a subscription from a time zone in which the resulting date is different; for example, if you are in the Pacific time zone and try to submit a subscription between 11:00 PM and midnight, with a start date set for today.<br /><br />If the start date is the 31st, and the interval is monthly, the billing date is the last day of each month (even when the month does not have 31 days).</td>
<td><div>String, 10 characters.<br /><br />Use XML date (YYYY-MM-DD) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>totalOccurrences</td>
<td><strong>Required.</strong><br />
Number of payments for the subscription.<br /><br />
If a trial period is specified, this value should include the number of payments during the trial period.<br /><br />To create an ongoing subscription without an end date, set <code>totalOccurrences</code> to "9999".</td>
<td><div>Numeric string, up to 4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>trialOccurrences</td>
<td>Number of payments in the trial period.<br /><br />
If a trial period is specified, include the number of payments during the trial period in <code>totalOccurrences</code>.</td>
<td><div>Numeric string, up to 2 digits.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the charge to be run after the trial period.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>trialAmount</td>
<td><strong>Conditional.</strong><br /><br />The amount to be charged for each payment during the trial period.<br /><br />
Required when using <code>trialOccurrences</code>.<br /><br />During the trial period, we will bill <code>trialAmount</code> on each scheduled payment. Once the trial period is over, we will bill <code>amount</code> for the remaining scheduled payments.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains optional order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
The invoice number will be associated with each payment in the subscription.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the subscription.<br /><br />
The description will be associated with each payment in the subscription.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td></td>
<td><div></div></td>
 </tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td><strong>Required.</strong><br />
Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td><strong>Required.</strong><br />
Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-subscription-from-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-subscription-from-customer-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-subscription-from-customer-profile">
<div class="panel-body">
<p><em>ARBCreateSubscriptionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
 <th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
 </div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td>The payment gateway assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerAddressId</td>
<td>Payment gateway assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-get-subscription">Get Subscription</h3>
<p>Retrieves an existing ARB subscription.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-subscriptionTryIt" href="#console-get-subscription" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-subscriptionphp" href="#php-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-subscriptioncs" href="#cs-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-subscriptionjava" href="#java-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-subscriptionrb" href="#ruby-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-subscriptionpy" href="#python-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
 <a id="get-subscriptionjs" href="#node-get-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-subscription">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-subscription">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-subscription">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-subscription" spellcheck="false" class="XML XMLRequest">&lt;ARBGetSubscriptionRequest  xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;subscriptionId&gt;4818507&lt;/subscriptionId&gt;
    &lt;includeTransactions&gt;true&lt;/includeTransactions&gt;
&lt;/ARBGetSubscriptionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-subscription" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBGetSubscriptionRequest  xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;subscriptionId&gt;4818507&lt;/subscriptionId&gt;
    &lt;includeTransactions&gt;true&lt;/includeTransactions&gt;
&lt;/ARBGetSubscriptionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-subscription" spellcheck="false" class="JSON JSONRequest">{
  &quot;ARBGetSubscriptionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;subscriptionId&quot;: &quot;4818507&quot;,
    &quot;includeTransactions&quot;: true
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-subscription" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;ARBGetSubscriptionRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;subscriptionId&quot;: &quot;4818507&quot;,
    &quot;includeTransactions&quot;: true
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-subscription" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-subscription" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-subscription"></span>


<div class="errorDetails" id="detailsDiv-get-subscription">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-subscription">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;ARBGetSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;subscription&gt;
        &lt;name&gt;Sample subscription&lt;/name&gt;
        &lt;paymentSchedule&gt;
            &lt;interval&gt;
                &lt;length&gt;7&lt;/length&gt;
                &lt;unit&gt;days&lt;/unit&gt;
            &lt;/interval&gt;
            &lt;startDate&gt;2017-09-09&lt;/startDate&gt;
            &lt;totalOccurrences&gt;9999&lt;/totalOccurrences&gt;
            &lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
        &lt;/paymentSchedule&gt;
        &lt;amount&gt;10.29&lt;/amount&gt;
        &lt;trialAmount&gt;1.00&lt;/trialAmount&gt;
        &lt;status&gt;active&lt;/status&gt;
        &lt;profile&gt;
            &lt;merchantCustomerId&gt;973&lt;/merchantCustomerId&gt;
            &lt;description&gt;Profile description here&lt;/description&gt;
            &lt;email&gt;TestEmail5555@domain.com&lt;/email&gt;
            &lt;customerProfileId&gt;1812912918&lt;/customerProfileId&gt;
            &lt;paymentProfile&gt;
                &lt;customerType&gt;individual&lt;/customerType&gt;
                &lt;billTo&gt;
                    &lt;firstName&gt;Arte&lt;/firstName&gt;
                    &lt;lastName&gt;Johnson&lt;/lastName&gt;
                    &lt;company&gt;test Co.&lt;/company&gt;
                    &lt;address&gt;123 Test St.&lt;/address&gt;
                    &lt;city&gt;Testville&lt;/city&gt;
                    &lt;state&gt;AZ&lt;/state&gt;
                    &lt;zip&gt;85282&lt;/zip&gt;
                    &lt;country&gt;US&lt;/country&gt;
                &lt;/billTo&gt;
                &lt;customerPaymentProfileId&gt;1807515631&lt;/customerPaymentProfileId&gt;
                &lt;payment&gt;
                    &lt;creditCard&gt;
                        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
                        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
                    &lt;/creditCard&gt;
                &lt;/payment&gt;
            &lt;/paymentProfile&gt;
            &lt;shippingProfile&gt;
                &lt;firstName&gt;Aaron&lt;/firstName&gt;
                &lt;lastName&gt;Wright&lt;/lastName&gt;
                &lt;company&gt;Testing, Inc.&lt;/company&gt;
                &lt;address&gt;123 Testing St.&lt;/address&gt;
                &lt;city&gt;Lehi&lt;/city&gt;
                &lt;state&gt;UT&lt;/state&gt;
                &lt;zip&gt;84043&lt;/zip&gt;
                &lt;country&gt;US&lt;/country&gt;
                &lt;phoneNumber&gt;520-254-5038&lt;/phoneNumber&gt;
                &lt;customerAddressId&gt;1811684122&lt;/customerAddressId&gt;
            &lt;/shippingProfile&gt;
        &lt;/profile&gt;
        &lt;arbTransactions&gt;
            &lt;arbTransaction&gt;
                &lt;response&gt;The credit card has expired.&lt;/response&gt;
                &lt;submitTimeUTC&gt;2017-09-14T18:40:31.247&lt;/submitTimeUTC&gt;
                &lt;payNum&gt;2&lt;/payNum&gt;
                &lt;attemptNum&gt;1&lt;/attemptNum&gt;
            &lt;/arbTransaction&gt;
        &lt;/arbTransactions&gt;
    &lt;/subscription&gt;
&lt;/ARBGetSubscriptionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-subscription" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;ARBGetSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;refId&gt;123456&lt;/refId&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;subscription&gt;
        &lt;name&gt;Sample subscription&lt;/name&gt;
        &lt;paymentSchedule&gt;
            &lt;interval&gt;
                &lt;length&gt;7&lt;/length&gt;
                &lt;unit&gt;days&lt;/unit&gt;
            &lt;/interval&gt;
            &lt;startDate&gt;2017-09-09&lt;/startDate&gt;
            &lt;totalOccurrences&gt;9999&lt;/totalOccurrences&gt;
            &lt;trialOccurrences&gt;1&lt;/trialOccurrences&gt;
        &lt;/paymentSchedule&gt;
        &lt;amount&gt;10.29&lt;/amount&gt;
        &lt;trialAmount&gt;1.00&lt;/trialAmount&gt;
        &lt;status&gt;active&lt;/status&gt;
        &lt;profile&gt;
            &lt;merchantCustomerId&gt;973&lt;/merchantCustomerId&gt;
            &lt;description&gt;Profile description here&lt;/description&gt;
            &lt;email&gt;TestEmail5555@domain.com&lt;/email&gt;
            &lt;customerProfileId&gt;1812912918&lt;/customerProfileId&gt;
            &lt;paymentProfile&gt;
                &lt;customerType&gt;individual&lt;/customerType&gt;
                &lt;billTo&gt;
                    &lt;firstName&gt;Arte&lt;/firstName&gt;
                    &lt;lastName&gt;Johnson&lt;/lastName&gt;
                    &lt;company&gt;test Co.&lt;/company&gt;
                    &lt;address&gt;123 Test St.&lt;/address&gt;
                    &lt;city&gt;Testville&lt;/city&gt;
                    &lt;state&gt;AZ&lt;/state&gt;
                    &lt;zip&gt;85282&lt;/zip&gt;
                    &lt;country&gt;US&lt;/country&gt;
                &lt;/billTo&gt;
                &lt;customerPaymentProfileId&gt;1807515631&lt;/customerPaymentProfileId&gt;
                &lt;payment&gt;
                    &lt;creditCard&gt;
                        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
                        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
                    &lt;/creditCard&gt;
                &lt;/payment&gt;
            &lt;/paymentProfile&gt;
            &lt;shippingProfile&gt;
                &lt;firstName&gt;Aaron&lt;/firstName&gt;
                &lt;lastName&gt;Wright&lt;/lastName&gt;
                &lt;company&gt;Testing, Inc.&lt;/company&gt;
                &lt;address&gt;123 Testing St.&lt;/address&gt;
                &lt;city&gt;Lehi&lt;/city&gt;
                &lt;state&gt;UT&lt;/state&gt;
                &lt;zip&gt;84043&lt;/zip&gt;
                &lt;country&gt;US&lt;/country&gt;
                &lt;phoneNumber&gt;520-254-5038&lt;/phoneNumber&gt;
                &lt;customerAddressId&gt;1811684122&lt;/customerAddressId&gt;
            &lt;/shippingProfile&gt;
        &lt;/profile&gt;
        &lt;arbTransactions&gt;
            &lt;arbTransaction&gt;
                &lt;response&gt;The credit card has expired.&lt;/response&gt;
                &lt;submitTimeUTC&gt;2017-09-14T18:40:31.247&lt;/submitTimeUTC&gt;
                &lt;payNum&gt;2&lt;/payNum&gt;
                &lt;attemptNum&gt;1&lt;/attemptNum&gt;
            &lt;/arbTransaction&gt;
        &lt;/arbTransactions&gt;
    &lt;/subscription&gt;
&lt;/ARBGetSubscriptionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-subscription">{
  &quot;ARBGetSubscriptionResponse&quot;: {
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;subscription&quot;: {
      &quot;name&quot;: &quot;Sample subscription&quot;,
      &quot;paymentSchedule&quot;: {
        &quot;interval&quot;: {
          &quot;length&quot;: &quot;7&quot;,
          &quot;unit&quot;: &quot;days&quot;
        },
        &quot;startDate&quot;: &quot;2017-09-09&quot;,
        &quot;totalOccurrences&quot;: &quot;9999&quot;,
        &quot;trialOccurrences&quot;: &quot;1&quot;
      },
      &quot;amount&quot;: &quot;10.29&quot;,
      &quot;trialAmount&quot;: &quot;1.00&quot;,
      &quot;status&quot;: &quot;active&quot;,
      &quot;profile&quot;: {
        &quot;merchantCustomerId&quot;: &quot;973&quot;,
        &quot;description&quot;: &quot;Profile description here&quot;,
        &quot;email&quot;: &quot;TestEmail5555@domain.com&quot;,
        &quot;customerProfileId&quot;: &quot;1812912918&quot;,
        &quot;paymentProfile&quot;: {
          &quot;customerType&quot;: &quot;individual&quot;,
          &quot;billTo&quot;: {
            &quot;firstName&quot;: &quot;Arte&quot;,
            &quot;lastName&quot;: &quot;Johnson&quot;,
            &quot;company&quot;: &quot;test Co.&quot;,
            &quot;address&quot;: &quot;123 Test St.&quot;,
            &quot;city&quot;: &quot;Testville&quot;,
            &quot;state&quot;: &quot;AZ&quot;,
            &quot;zip&quot;: &quot;85282&quot;,
            &quot;country&quot;: &quot;US&quot;
          },
          &quot;customerPaymentProfileId&quot;: &quot;1807515631&quot;,
          &quot;payment&quot;: {
            &quot;creditCard&quot;: {
              &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
              &quot;expirationDate&quot;: &quot;XXXX&quot;
            }
          }
        },
        &quot;shippingProfile&quot;: {
          &quot;firstName&quot;: &quot;Aaron&quot;,
          &quot;lastName&quot;: &quot;Wright&quot;,
          &quot;company&quot;: &quot;Testing, Inc.&quot;,
          &quot;address&quot;: &quot;123 Testing St.&quot;,
          &quot;city&quot;: &quot;Lehi&quot;,
          &quot;state&quot;: &quot;UT&quot;,
          &quot;zip&quot;: &quot;84043&quot;,
          &quot;country&quot;: &quot;US&quot;,
          &quot;phoneNumber&quot;: &quot;520-254-5038&quot;,
          &quot;customerAddressId&quot;: &quot;1811684122&quot;
        }
      },
      &quot;arbTransactions&quot;: {
        &quot;arbTransaction&quot;: {
          &quot;response&quot;: &quot;The credit card has expired.&quot;,
          &quot;submitTimeUTC&quot;: &quot;2017-09-14T18:40:31.247&quot;,
          &quot;payNum&quot;: &quot;2&quot;,
          &quot;attemptNum&quot;: &quot;1&quot;
        }
      }
    }
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-subscription" style="display: none !important">{
  &quot;ARBGetSubscriptionResponse&quot;: {
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;subscription&quot;: {
      &quot;name&quot;: &quot;Sample subscription&quot;,
      &quot;paymentSchedule&quot;: {
        &quot;interval&quot;: {
          &quot;length&quot;: &quot;7&quot;,
          &quot;unit&quot;: &quot;days&quot;
        },
        &quot;startDate&quot;: &quot;2017-09-09&quot;,
        &quot;totalOccurrences&quot;: &quot;9999&quot;,
        &quot;trialOccurrences&quot;: &quot;1&quot;
      },
      &quot;amount&quot;: &quot;10.29&quot;,
      &quot;trialAmount&quot;: &quot;1.00&quot;,
      &quot;status&quot;: &quot;active&quot;,
      &quot;profile&quot;: {
        &quot;merchantCustomerId&quot;: &quot;973&quot;,
        &quot;description&quot;: &quot;Profile description here&quot;,
        &quot;email&quot;: &quot;TestEmail5555@domain.com&quot;,
        &quot;customerProfileId&quot;: &quot;1812912918&quot;,
        &quot;paymentProfile&quot;: {
          &quot;customerType&quot;: &quot;individual&quot;,
          &quot;billTo&quot;: {
            &quot;firstName&quot;: &quot;Arte&quot;,
            &quot;lastName&quot;: &quot;Johnson&quot;,
            &quot;company&quot;: &quot;test Co.&quot;,
            &quot;address&quot;: &quot;123 Test St.&quot;,
            &quot;city&quot;: &quot;Testville&quot;,
            &quot;state&quot;: &quot;AZ&quot;,
            &quot;zip&quot;: &quot;85282&quot;,
            &quot;country&quot;: &quot;US&quot;
          },
          &quot;customerPaymentProfileId&quot;: &quot;1807515631&quot;,
          &quot;payment&quot;: {
            &quot;creditCard&quot;: {
              &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
              &quot;expirationDate&quot;: &quot;XXXX&quot;
            }
          }
        },
        &quot;shippingProfile&quot;: {
          &quot;firstName&quot;: &quot;Aaron&quot;,
          &quot;lastName&quot;: &quot;Wright&quot;,
          &quot;company&quot;: &quot;Testing, Inc.&quot;,
          &quot;address&quot;: &quot;123 Testing St.&quot;,
          &quot;city&quot;: &quot;Lehi&quot;,
          &quot;state&quot;: &quot;UT&quot;,
          &quot;zip&quot;: &quot;84043&quot;,
          &quot;country&quot;: &quot;US&quot;,
          &quot;phoneNumber&quot;: &quot;520-254-5038&quot;,
          &quot;customerAddressId&quot;: &quot;1811684122&quot;
        }
      },
      &quot;arbTransactions&quot;: {
        &quot;arbTransaction&quot;: {
          &quot;response&quot;: &quot;The credit card has expired.&quot;,
          &quot;submitTimeUTC&quot;: &quot;2017-09-14T18:40:31.247&quot;,
          &quot;payNum&quot;: &quot;2&quot;,
          &quot;attemptNum&quot;: &quot;1&quot;
        }
      }
    }
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-subscription" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-subscription">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-subscription"></div>
<div id="showCode-php-get-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-subscription"></a>
</p>
<textarea class="php" id="textarea-php-get-subscription" name="textarea-php-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-subscription">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-subscription"></div>
<div id="showCode-cs-get-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-subscription"></a>
</p>
<textarea class="cs" id="textarea-cs-get-subscription" name="textarea-cs-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-subscription">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont javaCodeCont">
 <div class="sampleWarningCont" id="warning-java-get-subscription"></div>
<div id="showCode-java-get-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-subscription"></a>
</p>
<textarea class="java" id="textarea-java-get-subscription" name="textarea-java-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-subscription">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-subscription"></div>
<div id="showCode-rb-get-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-subscription"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-subscription" name="textarea-rb-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-subscription">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-subscription"></div>
<div id="showCode-py-get-subscription">
<p>
 This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-subscription"></a>
</p>
<textarea class="python" id="textarea-py-get-subscription" name="textarea-py-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-subscription">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-subscription">
</div>
<div class="showCodeCont" id="showCode-get-subscription">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-subscription"></div>
<div id="showCode-js-get-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-subscription"></a>
</p>
<textarea class="node" id="textarea-js-get-subscription" name="textarea-js-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-subscription">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-subscription">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-subscription">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-subscription">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-subscription">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-subscription">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-subscription">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-subscription">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-subscription"></div>
<div id="showCode-php-get-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-subscription" name="textarea-php-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-subscription"></div>
<div id="showCode-cs-get-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-subscription" name="textarea-cs-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-subscription"></div>
<div id="showCode-java-get-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-subscription" name="textarea-java-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-subscription"></div>
<div id="showCode-rb-get-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-subscription" name="textarea-rb-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-subscription"></div>
<div id="showCode-py-get-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-subscription" name="textarea-py-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-subscription"></div>
<div id="showCode-js-get-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-subscription" name="textarea-js-get-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-subscription" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-get-subscription">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-subscription" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-subscription">
<div class="panel-body">
<p><em>ARBGetSubscriptionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
 <td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td><strong>Required.</strong><br />
The payment gateway-assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>includeTransactions</td>
<td>Indicates whether to include information about transactions for this subscription.<br /><br />
If set to true, information about the most recent 20 transactions for this subscription will be included in the response.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-get-subscription">
 Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-subscription">
<div class="panel-body">
<p><em>ARBGetSubscriptionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>subscription</td>
<td><strong>Required.</strong><br />
Contains information about the subscription.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Merchant-assigned name for the subscription.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentSchedule</td>
<td><strong>Required.</strong><br />
Contains information about the payment schedule.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>interval</td>
<td><strong>Required.</strong><br />
Contains information about the time between payments.<br /><br />
The <code>length</code> and <code>unit</code> elements together define the interval in between payments. If specified in terms of days, the interval can be between seven (7) and 365 days. If specified in terms of months, the interval can be between one (1) and twelve (12) months.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>length</td>
<td><strong>Required.</strong><br />
 The measurement of time, in association with <code>unit</code>, that is used to define the frequency of the billing occurrences.<br /><br />
For a <code>unit</code> of <code>days</code>, use an integer between 7 and 365, inclusive. For a <code>unit</code> of <code>months</code>, use an integer between 1 and 12, inclusive.</td>
<td><div>Numeric string, up to 3 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unit</td>
<td><strong>Required.</strong><br />
The unit of time, in association with the <code>length</code>, between each billing occurrence.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>days</code> or <code>months</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>startDate</td>
<td><strong>Required.</strong><br />
The date of the first payment. Can not be prior to the subscription creation date.<br /><br />
The validation checks against the local server's time, which is expressed as Mountain Time. An error might occur if you try to submit a subscription from a time zone in which the resulting date is different; for example, if you are in the Pacific time zone and try to submit a subscription between 11:00 PM and midnight, with a start date set for today.<br /><br />If the start date is the 31st, and the interval is monthly, the billing date is the last day of each month (even when the month does not have 31 days).</td>
<td><div>String, 10 characters.<br /><br />Use XML date (YYYY-MM-DD) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>totalOccurrences</td>
<td><strong>Required.</strong><br />
Number of payments for the subscription.<br /><br />
If a trial period is specified, this value should include the number of payments during the trial period.<br /><br />To create an ongoing subscription without an end date, set <code>totalOccurrences</code> to "9999".</td>
<td><div>Numeric string, up to 4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>trialOccurrences</td>
<td>Number of payments in the trial period.<br /><br />
If a trial period is specified, include the number of payments during the trial period in <code>totalOccurrences</code>.</td>
<td><div>Numeric string, up to 2 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the charge to be run after the trial period.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>trialAmount</td>
<td><strong>Conditional.</strong><br /><br />The amount to be charged for each payment during the trial period.<br /><br />
Required when using <code>trialOccurrences</code>.<br /><br />During the trial period, we will bill <code>trialAmount</code> on each scheduled payment. Once the trial period is over, we will bill <code>amount</code> for the remaining scheduled payments.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>status</td>
<td>Contains information about the subscription status.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>active</code>, <code>expired</code>, <code>suspended</code>, <code>canceled</code>, or <code>terminated</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td>Contains information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>merchantCustomerId</td>
<td>Merchant-assigned ID for the customer.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the customer or customer profile.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td>Email address associated with the customer profile.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>paymentProfile</td>
<td>Contains payment information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerType</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
 </div></td>
</tr>
<tr>
<td class='fourBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='fiveBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
 <td><div></div></td>
</tr>
<tr>
<td class='fiveBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For recurring payments, do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>bankName</td>
<td>The name of the bank.<br /><br />
 </td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fiveBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>shippingProfile</td>
<td>Contains shipping address information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
 <td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains optional order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
The invoice number will be associated with each payment in the subscription.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the subscription.<br /><br />
The description will be associated with each payment in the subscription.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>arbTransactions</td>
 <td>Contains information about up to 20 recent transactions. <br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>arbTransaction</td>
<td>Contains information about 1 recent transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The identification number of the transaction.<br /><br />
This value is only returned for successful transactions, whether authorized or declined. If the transaction ends in error, you will not receive <code>transId</code> in the response.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>response</td>
<td>Contains explanatory text about the transaction. <br /><br />
</td>
<td><div>String.<br /><br />
For example, "The credit card has expired."</div></td>
</tr>
<tr>
<td class='threeBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payNum</td>
<td>Number of payments for this subscription to date. For example, if this is the fifth payment for this subscription, the value of <code>payNum</code> will be <code>5</code>. <br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>attemptNum</td>
<td>Number of attempts that were made for this payment.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-get-subscription-status">Get Subscription Status</h3>
<p>Retrieves the status of an existing ARB subscription.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-subscription-statusTryIt" href="#console-get-subscription-status" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-subscription-statusphp" href="#php-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-subscription-statuscs" href="#cs-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-subscription-statusjava" href="#java-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-subscription-statusrb" href="#ruby-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-subscription-statuspy" href="#python-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-subscription-statusjs" href="#node-get-subscription-status" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-subscription-status">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-subscription-status">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-subscription-status">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-subscription-status" spellcheck="false" class="XML XMLRequest">&lt;ARBGetSubscriptionStatusRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
&lt;/ARBGetSubscriptionStatusRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-subscription-status" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBGetSubscriptionStatusRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
&lt;/ARBGetSubscriptionStatusRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-subscription-status" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBGetSubscriptionStatusRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-subscription-status" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBGetSubscriptionStatusRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-subscription-status" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-subscription-status" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-subscription-status"></span>


<div class="errorDetails" id="detailsDiv-get-subscription-status">
<div class="tblErrors">
</div>
 </div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-subscription-status">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;ARBGetSubscriptionStatusResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot; note&#x3D;&quot;Status with a capital &#x27;S&#x27; is obsolete.&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Error&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;E00035&lt;/code&gt;
			&lt;text&gt;The subscription cannot be found.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
&lt;/ARBGetSubscriptionStatusResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-subscription-status" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;ARBGetSubscriptionStatusResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot; note&#x3D;&quot;Status with a capital &#x27;S&#x27; is obsolete.&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Error&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;E00035&lt;/code&gt;
			&lt;text&gt;The subscription cannot be found.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
&lt;/ARBGetSubscriptionStatusResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-subscription-status">{
	&quot;note&quot;: &quot;Status with a capital &#x27;S&#x27; is obsolete.&quot;,
	&quot;refId&quot;: &quot;123456&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Error&quot;,
		&quot;message&quot;: [
			{
				&quot;code&quot;: &quot;E00035&quot;,
				&quot;text&quot;: &quot;The subscription cannot be found.&quot;
			}
		]
	}
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-subscription-status" style="display: none !important">{
	&quot;note&quot;: &quot;Status with a capital &#x27;S&#x27; is obsolete.&quot;,
	&quot;refId&quot;: &quot;123456&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Error&quot;,
		&quot;message&quot;: [
			{
				&quot;code&quot;: &quot;E00035&quot;,
				&quot;text&quot;: &quot;The subscription cannot be found.&quot;
			}
		]
	}
}</code>
                                                </pre>
<div id="txtRespLoader-get-subscription-status" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-subscription-status">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

 <div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-subscription-status"></div>
<div id="showCode-php-get-subscription-status">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-subscription-status"></a>
</p>
<textarea class="php" id="textarea-php-get-subscription-status" name="textarea-php-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-subscription-status">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-subscription-status"></div>
<div id="showCode-cs-get-subscription-status">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-subscription-status"></a>
</p>
<textarea class="cs" id="textarea-cs-get-subscription-status" name="textarea-cs-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-subscription-status">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-subscription-status"></div>
<div id="showCode-java-get-subscription-status">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-subscription-status"></a>
</p>
<textarea class="java" id="textarea-java-get-subscription-status" name="textarea-java-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-subscription-status">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-subscription-status"></div>
<div id="showCode-rb-get-subscription-status">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-subscription-status"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-subscription-status" name="textarea-rb-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-subscription-status">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-subscription-status"></div>
<div id="showCode-py-get-subscription-status">
 <p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-subscription-status"></a>
</p>
<textarea class="python" id="textarea-py-get-subscription-status" name="textarea-py-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-subscription-status">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-subscription-status">
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-subscription-status"></div>
<div id="showCode-js-get-subscription-status">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-subscription-status"></a>
</p>
<textarea class="node" id="textarea-js-get-subscription-status" name="textarea-js-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-subscription-status">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-subscription-status">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-subscription-status">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-subscription-status">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-subscription-status">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-subscription-status">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-subscription-status">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-subscription-status">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-subscription-status"></div>
<div id="showCode-php-get-subscription-status">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-subscription-status" name="textarea-php-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-subscription-status"></div>
<div id="showCode-cs-get-subscription-status">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-subscription-status" name="textarea-cs-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-subscription-status"></div>
<div id="showCode-java-get-subscription-status">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-subscription-status" name="textarea-java-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-subscription-status"></div>
<div id="showCode-rb-get-subscription-status">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-subscription-status" name="textarea-rb-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-subscription-status"></div>
<div id="showCode-py-get-subscription-status">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-subscription-status" name="textarea-py-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-subscription-status"></div>
<div id="showCode-js-get-subscription-status">
<p>
 This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-subscription-status"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-subscription-status" name="textarea-js-get-subscription-status" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-subscription-status" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-subscription-status">
<h4 class="panel-title">
<a data-parent="#accordion-get-subscription-status">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-subscription-status" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-subscription-status">
<div class="panel-body">
<p><em>ARBGetSubscriptionStatusRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
 Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway. </td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td><strong>Required.</strong><br />
The payment gateway-assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-subscription-status">
<h4 class="panel-title">
<a data-parent="#accordion-get-subscription-status">
Response Field Description
</a>
</h4>
 </div>
<div class="DetailsResponse" id="collapseResp-get-subscription-status">
<div class="panel-body">
<p><em>ARBGetSubscriptionStatusResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>status</td>
<td>Contains information about the subscription status.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>active</code>, <code>expired</code>, <code>suspended</code>, <code>canceled</code>, or <code>terminated</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-update-a-subscription">Update a Subscription</h3>
<p>Updates an existing ARB subscription. Only the subscription ID and fields that you wish to modify must be submitted.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="update-a-subscriptionTryIt" href="#console-update-a-subscription" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="update-a-subscriptionphp" href="#php-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="update-a-subscriptioncs" href="#cs-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="update-a-subscriptionjava" href="#java-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="update-a-subscriptionrb" href="#ruby-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
 <a id="update-a-subscriptionpy" href="#python-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="update-a-subscriptionjs" href="#node-update-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-update-a-subscription">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="update-a-subscription">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="update-a-subscription">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-update-a-subscription" spellcheck="false" class="XML XMLRequest">&lt;ARBUpdateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;subscription&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
				&lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
	&lt;/subscription&gt;
&lt;/ARBUpdateSubscriptionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-update-a-subscription" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBUpdateSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
	&lt;subscription&gt;
		&lt;payment&gt;
			&lt;creditCard&gt;
				&lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
				&lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
			&lt;/creditCard&gt;
		&lt;/payment&gt;
	&lt;/subscription&gt;
&lt;/ARBUpdateSubscriptionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-update-a-subscription" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBUpdateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;,
        &quot;subscription&quot;: {
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;
                }
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-update-a-subscription" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBUpdateSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;,
        &quot;subscription&quot;: {
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2020-12&quot;
                }
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-update-a-subscription" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-update-a-subscription" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-update-a-subscription"></span>


<div class="errorDetails" id="detailsDiv-update-a-subscription">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-update-a-subscription">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBUpdateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;247150&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;215472&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;189691&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBUpdateSubscriptionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-update-a-subscription" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBUpdateSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/
AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;profile&gt;
		&lt;customerProfileId&gt;247150&lt;/customerProfileId&gt;
		&lt;customerPaymentProfileId&gt;215472&lt;/customerPaymentProfileId&gt;
		&lt;customerAddressId&gt;189691&lt;/customerAddressId&gt;
	&lt;/profile&gt;
&lt;/ARBUpdateSubscriptionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-update-a-subscription">{
	&quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;247135&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;215458&quot;,
		&quot;customerAddressId&quot;: &quot;189691&quot;
    },    
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-update-a-subscription" style="display: none !important">{
	&quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;247135&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;215458&quot;,
		&quot;customerAddressId&quot;: &quot;189691&quot;
    },    
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-update-a-subscription" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-update-a-subscription">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-update-a-subscription"></div>
<div id="showCode-php-update-a-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-a-subscription"></a>
</p>
<textarea class="php" id="textarea-php-update-a-subscription" name="textarea-php-update-a-subscription" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="cs-update-a-subscription">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-update-a-subscription"></div>
<div id="showCode-cs-update-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-a-subscription"></a>
</p>
<textarea class="cs" id="textarea-cs-update-a-subscription" name="textarea-cs-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-update-a-subscription">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-update-a-subscription"></div>
<div id="showCode-java-update-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-a-subscription"></a>
</p>
<textarea class="java" id="textarea-java-update-a-subscription" name="textarea-java-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
 <div class="tab-pane fade" id="ruby-update-a-subscription">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-update-a-subscription"></div>
<div id="showCode-rb-update-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-a-subscription"></a>
</p>
<textarea class="ruby" id="textarea-rb-update-a-subscription" name="textarea-rb-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-update-a-subscription">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-update-a-subscription"></div>
<div id="showCode-py-update-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-a-subscription"></a>
</p>
<textarea class="python" id="textarea-py-update-a-subscription" name="textarea-py-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-update-a-subscription">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="update-a-subscription">
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-update-a-subscription"></div>
<div id="showCode-js-update-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-a-subscription"></a>
</p>
<textarea class="node" id="textarea-js-update-a-subscription" name="textarea-js-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-update-a-subscription">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="update-a-subscription">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="update-a-subscription">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="update-a-subscription">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="update-a-subscription">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="update-a-subscription">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="update-a-subscription">Node</button>
</div>
<div class="showCodeCont" id="showCode-update-a-subscription">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-update-a-subscription"></div>
<div id="showCode-php-update-a-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-php-update-a-subscription" name="textarea-php-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-update-a-subscription"></div>
<div id="showCode-cs-update-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-cs-update-a-subscription" name="textarea-cs-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-update-a-subscription"></div>
<div id="showCode-java-update-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-java-update-a-subscription" name="textarea-java-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-update-a-subscription"></div>
<div id="showCode-rb-update-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-rb-update-a-subscription" name="textarea-rb-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-update-a-subscription"></div>
<div id="showCode-py-update-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-py-update-a-subscription" name="textarea-py-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-update-a-subscription"></div>
<div id="showCode-js-update-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-js-update-a-subscription" name="textarea-js-update-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-update-a-subscription" role="tablist" aria-multiselectable="true">
<div class="panel">
 <div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-update-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-update-a-subscription">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-update-a-subscription" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-update-a-subscription">
<div class="panel-body">
<p><em>ARBUpdateSubscriptionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td><strong>Required.</strong><br />
The payment gateway-assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>subscription</td>
<td><strong>Required.</strong><br />
Contains information about the subscription.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Merchant-assigned name for the subscription.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentSchedule</td>
<td><strong>Required.</strong><br />
Contains information about the payment schedule.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>interval</td>
<td><strong>Required.</strong><br />
Contains information about the time between payments.<br /><br />
The <code>length</code> and <code>unit</code> elements together define the interval in between payments. If specified in terms of days, the interval can be between seven (7) and 365 days. If specified in terms of months, the interval can be between one (1) and twelve (12) months.</td>
<td><div></div></td>
 </tr>
<tr>
<td class='threeBullet'>length</td>
<td><strong>Required.</strong><br />
The measurement of time, in association with <code>unit</code>, that is used to define the frequency of the billing occurrences.<br /><br />
For a <code>unit</code> of <code>days</code>, use an integer between 7 and 365, inclusive. For a <code>unit</code> of <code>months</code>, use an integer between 1 and 12, inclusive.</td>
<td><div>Numeric string, up to 3 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>unit</td>
<td><strong>Required.</strong><br />
The unit of time, in association with the <code>length</code>, between each billing occurrence.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>days</code> or <code>months</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>startDate</td>
<td><strong>Required.</strong><br />
The date of the first payment. Can not be prior to the subscription creation date.<br /><br />
The validation checks against the local server's time, which is expressed as Mountain Time. An error might occur if you try to submit a subscription from a time zone in which the resulting date is different; for example, if you are in the Pacific time zone and try to submit a subscription between 11:00 PM and midnight, with a start date set for today.<br /><br />If the start date is the 31st, and the interval is monthly, the billing date is the last day of each month (even when the month does not have 31 days).</td>
<td><div>String, 10 characters.<br /><br />Use XML date (YYYY-MM-DD) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>totalOccurrences</td>
<td><strong>Required.</strong><br />
Number of payments for the subscription.<br /><br />
If a trial period is specified, this value should include the number of payments during the trial period.<br /><br />To create an ongoing subscription without an end date, set <code>totalOccurrences</code> to "9999".</td>
<td><div>Numeric string, up to 4 digits.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>trialOccurrences</td>
<td>Number of payments in the trial period.<br /><br />
If a trial period is specified, include the number of payments during the trial period in <code>totalOccurrences</code>.</td>
<td><div>Numeric string, up to 2 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the charge to be run after the trial period.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>trialAmount</td>
<td><strong>Conditional.</strong><br /><br />The amount to be charged for each payment during the trial period.<br /><br />
Required when using <code>trialOccurrences</code>.<br /><br />During the trial period, we will bill <code>trialAmount</code> on each scheduled payment. Once the trial period is over, we will bill <code>amount</code> for the remaining scheduled payments.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
Only use <code>cardNumber</code> and <code>expirationDate</code> for Card Present transactions if the track data is unavailable. Note that using <code>cardNumber</code> and <code>expirationDate</code> in Card Present transactions may result in higher merchant rates.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For recurring payments, do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
 Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains optional order information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
The invoice number will be associated with each payment in the subscription.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the subscription.<br /><br />
The description will be associated with each payment in the subscription.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
 <td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
For example, janedoe@example.com.</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
 <tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
 Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
 <td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerAddressId</td>
<td>Payment gateway assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-update-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-update-a-subscription">
Response Field Description
</a>
</h4>
 </div>
<div class="DetailsResponse" id="collapseResp-update-a-subscription">
<div class="panel-body">
<p><em>ARBUpdateSubscriptionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerAddressId</td>
<td>Payment gateway assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-cancel-a-subscription">Cancel a Subscription</h3>
<p>Cancels an existing subscription.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="cancel-a-subscriptionTryIt" href="#console-cancel-a-subscription" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="cancel-a-subscriptionphp" href="#php-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="cancel-a-subscriptioncs" href="#cs-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="cancel-a-subscriptionjava" href="#java-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="cancel-a-subscriptionrb" href="#ruby-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="cancel-a-subscriptionpy" href="#python-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="cancel-a-subscriptionjs" href="#node-cancel-a-subscription" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-cancel-a-subscription">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="cancel-a-subscription">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="cancel-a-subscription">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-cancel-a-subscription" spellcheck="false" class="XML XMLRequest">&lt;ARBCancelSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
&lt;/ARBCancelSubscriptionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-cancel-a-subscription" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBCancelSubscriptionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;subscriptionId&gt;100748&lt;/subscriptionId&gt;
&lt;/ARBCancelSubscriptionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-cancel-a-subscription" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBCancelSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-cancel-a-subscription" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBCancelSubscriptionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;subscriptionId&quot;: &quot;100748&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-cancel-a-subscription" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-cancel-a-subscription" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-cancel-a-subscription"></span>


<div class="errorDetails" id="detailsDiv-cancel-a-subscription">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-cancel-a-subscription">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCancelSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
&lt;/ARBCancelSubscriptionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-cancel-a-subscription" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBCancelSubscriptionResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
&lt;/ARBCancelSubscriptionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-cancel-a-subscription">{
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-cancel-a-subscription" style="display: none !important">{
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-cancel-a-subscription" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-cancel-a-subscription">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="cancel-a-subscription">
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-cancel-a-subscription"></div>
<div id="showCode-php-cancel-a-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-cancel-a-subscription"></a>
</p>
<textarea class="php" id="textarea-php-cancel-a-subscription" name="textarea-php-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-cancel-a-subscription">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="cancel-a-subscription">
 </div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-cancel-a-subscription"></div>
<div id="showCode-cs-cancel-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-cancel-a-subscription"></a>
</p>
<textarea class="cs" id="textarea-cs-cancel-a-subscription" name="textarea-cs-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-cancel-a-subscription">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="cancel-a-subscription">
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-cancel-a-subscription"></div>
<div id="showCode-java-cancel-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-cancel-a-subscription"></a>
</p>
<textarea class="java" id="textarea-java-cancel-a-subscription" name="textarea-java-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-cancel-a-subscription">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="cancel-a-subscription">
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

 <div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-cancel-a-subscription"></div>
<div id="showCode-rb-cancel-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-cancel-a-subscription"></a>
</p>
<textarea class="ruby" id="textarea-rb-cancel-a-subscription" name="textarea-rb-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-cancel-a-subscription">
 <div class="bpn-show-py bpn-python" textareasection="py" textareaid="cancel-a-subscription">
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-cancel-a-subscription"></div>
<div id="showCode-py-cancel-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-cancel-a-subscription"></a>
</p>
<textarea class="python" id="textarea-py-cancel-a-subscription" name="textarea-py-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-cancel-a-subscription">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="cancel-a-subscription">
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-cancel-a-subscription"></div>
<div id="showCode-js-cancel-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-cancel-a-subscription"></a>
</p>
<textarea class="node" id="textarea-js-cancel-a-subscription" name="textarea-js-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-cancel-a-subscription">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
 <button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="cancel-a-subscription">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="cancel-a-subscription">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="cancel-a-subscription">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="cancel-a-subscription">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="cancel-a-subscription">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="cancel-a-subscription">Node</button>
</div>
<div class="showCodeCont" id="showCode-cancel-a-subscription">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-cancel-a-subscription"></div>
<div id="showCode-php-cancel-a-subscription">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-php-cancel-a-subscription" name="textarea-php-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-cancel-a-subscription"></div>
<div id="showCode-cs-cancel-a-subscription">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-cs-cancel-a-subscription" name="textarea-cs-cancel-a-subscription" cols="80" rows="6"></textarea>
 </div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-cancel-a-subscription"></div>
<div id="showCode-java-cancel-a-subscription">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-java-cancel-a-subscription" name="textarea-java-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-cancel-a-subscription"></div>
<div id="showCode-rb-cancel-a-subscription">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-rb-cancel-a-subscription" name="textarea-rb-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-cancel-a-subscription"></div>
<div id="showCode-py-cancel-a-subscription">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-py-cancel-a-subscription" name="textarea-py-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-cancel-a-subscription"></div>
<div id="showCode-js-cancel-a-subscription">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-cancel-a-subscription"></a>
</p>
<textarea class="sample-code" id="textarea-js-cancel-a-subscription" name="textarea-js-cancel-a-subscription" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-cancel-a-subscription" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-cancel-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-cancel-a-subscription">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-cancel-a-subscription" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-cancel-a-subscription">
<div class="panel-body">
<p><em>ARBCancelSubscriptionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionId</td>
<td><strong>Required.</strong><br />
The payment gateway-assigned identification number for the subscription.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-cancel-a-subscription">
<h4 class="panel-title">
<a data-parent="#accordion-cancel-a-subscription">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-cancel-a-subscription">
<div class="panel-body">
<p><em>ARBCancelSubscriptionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="recurring-billing-get-a-list-of-subscriptions">Get a List of Subscriptions</h3>
<p>You can use the following method to request a list of subscriptions. The function will return up to 1000 results in a single request. Paging options can be sent to limit the result set or to retrieve additional results beyond the 1000 item limit. You can add the sorting and paging options shown below to customize the result set.
</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-a-list-of-subscriptionsTryIt" href="#console-get-a-list-of-subscriptions" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-a-list-of-subscriptionsphp" href="#php-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-a-list-of-subscriptionscs" href="#cs-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-a-list-of-subscriptionsjava" href="#java-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-a-list-of-subscriptionsrb" href="#ruby-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-a-list-of-subscriptionspy" href="#python-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-a-list-of-subscriptionsjs" href="#node-get-a-list-of-subscriptions" class="recurring-billing" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-a-list-of-subscriptions">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-a-list-of-subscriptions">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-a-list-of-subscriptions">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-a-list-of-subscriptions" spellcheck="false" class="XML XMLRequest">&lt;ARBGetSubscriptionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
   &lt;merchantAuthentication&gt;
      &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
      &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
   &lt;/merchantAuthentication&gt;
   &lt;refId&gt;123456&lt;/refId&gt;
   &lt;searchType&gt;subscriptionActive&lt;/searchType&gt;
   &lt;sorting&gt;
      &lt;orderBy&gt;id&lt;/orderBy&gt;
      &lt;orderDescending&gt;false&lt;/orderDescending&gt;
   &lt;/sorting&gt;
   &lt;paging&gt;
      &lt;limit&gt;1000&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
   &lt;/paging&gt;
&lt;/ARBGetSubscriptionListRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-a-list-of-subscriptions" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;ARBGetSubscriptionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
   &lt;merchantAuthentication&gt;
      &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
      &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
   &lt;/merchantAuthentication&gt;
   &lt;refId&gt;123456&lt;/refId&gt;
   &lt;searchType&gt;subscriptionActive&lt;/searchType&gt;
   &lt;sorting&gt;
      &lt;orderBy&gt;id&lt;/orderBy&gt;
      &lt;orderDescending&gt;false&lt;/orderDescending&gt;
   &lt;/sorting&gt;
   &lt;paging&gt;
      &lt;limit&gt;1000&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
   &lt;/paging&gt;
&lt;/ARBGetSubscriptionListRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-a-list-of-subscriptions" spellcheck="false" class="JSON JSONRequest">{
    &quot;ARBGetSubscriptionListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;searchType&quot;: &quot;subscriptionActive&quot;,
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;id&quot;,
            &quot;orderDescending&quot;: &quot;false&quot;
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;1000&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-a-list-of-subscriptions" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;ARBGetSubscriptionListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;searchType&quot;: &quot;subscriptionActive&quot;,
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;id&quot;,
            &quot;orderDescending&quot;: &quot;false&quot;
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;1000&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-a-list-of-subscriptions" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-a-list-of-subscriptions" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-a-list-of-subscriptions"></span>


<div class="errorDetails" id="detailsDiv-get-a-list-of-subscriptions">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-a-list-of-subscriptions">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBGetSubscriptionListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
	&lt;subscriptionDetails&gt;
		&lt;subscriptionDetail&gt;
			&lt;id&gt;155551&lt;/id&gt;
			&lt;name&gt;ARB Subscription Test&lt;/name&gt;
			&lt;status&gt;active&lt;/status&gt;
			&lt;createTimeStampUTC&gt;2014-07-11T02:52:42.96&lt;/createTimeStampUTC&gt;
			&lt;firstName&gt;John&lt;/firstName&gt;
			&lt;lastName&gt;Doe&lt;/lastName&gt;
			&lt;totalOccurrences&gt;8&lt;/totalOccurrences&gt;
			&lt;pastOccurrences&gt;5&lt;/pastOccurrences&gt;
			&lt;paymentMethod&gt;creditCard&lt;/paymentMethod&gt;
			&lt;accountNumber&gt;XXXX1234&lt;/accountNumber&gt;
			&lt;invoice /&gt;
			&lt;amount&gt;19.99&lt;/amount&gt;
			&lt;currencyCode&gt;USE&lt;/currencyCode&gt;
			&lt;customerProfileId&gt;35177884&lt;/customerProfileId&gt;
			&lt;customerPaymentProfileId&gt;32072504&lt;/customerPaymentProfileId&gt;
			&lt;customerShippingProfileId&gt;33354881&lt;/customerShippingProfileId&gt;
		&lt;/subscriptionDetail&gt;
	&lt;/subscriptionDetails&gt;
&lt;/ARBGetSubscriptionListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-a-list-of-subscriptions" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;ARBGetSubscriptionListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;refId&gt;123456&lt;/refId&gt;
	&lt;messages&gt;
		&lt;resultCode&gt;Ok&lt;/resultCode&gt;
		&lt;message&gt;
			&lt;code&gt;I00001&lt;/code&gt;
			&lt;text&gt;Successful.&lt;/text&gt;
		&lt;/message&gt;
	&lt;/messages&gt;
	&lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
	&lt;subscriptionDetails&gt;
		&lt;subscriptionDetail&gt;
			&lt;id&gt;155551&lt;/id&gt;
			&lt;name&gt;ARB Subscription Test&lt;/name&gt;
			&lt;status&gt;active&lt;/status&gt;
			&lt;createTimeStampUTC&gt;2014-07-11T02:52:42.96&lt;/createTimeStampUTC&gt;
			&lt;firstName&gt;John&lt;/firstName&gt;
			&lt;lastName&gt;Doe&lt;/lastName&gt;
			&lt;totalOccurrences&gt;8&lt;/totalOccurrences&gt;
			&lt;pastOccurrences&gt;5&lt;/pastOccurrences&gt;
			&lt;paymentMethod&gt;creditCard&lt;/paymentMethod&gt;
			&lt;accountNumber&gt;XXXX1234&lt;/accountNumber&gt;
			&lt;invoice /&gt;
			&lt;amount&gt;19.99&lt;/amount&gt;
			&lt;currencyCode&gt;USE&lt;/currencyCode&gt;
			&lt;customerProfileId&gt;35177884&lt;/customerProfileId&gt;
			&lt;customerPaymentProfileId&gt;32072504&lt;/customerPaymentProfileId&gt;
			&lt;customerShippingProfileId&gt;33354881&lt;/customerShippingProfileId&gt;
		&lt;/subscriptionDetail&gt;
	&lt;/subscriptionDetails&gt;
&lt;/ARBGetSubscriptionListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-a-list-of-subscriptions">{
    &quot;totalNumInResultSet&quot;: 1273,
    &quot;totalNumInResultSetSpecified&quot;: true,
    &quot;subscriptionDetails&quot;: [
        {
            &quot;id&quot;: 100188,
            &quot;name&quot;: &quot;subscription&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-04-28T23:59:47.33&quot;,
            &quot;firstName&quot;: &quot;Joe&quot;,
            &quot;lastName&quot;: &quot;Tester&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 6,
            &quot;paymentMethod&quot;: &quot;creditCard&quot;,
            &quot;accountNumber&quot;: &quot;XXXX5454&quot;,
            &quot;invoice&quot;: &quot;42820041325496571&quot;,
            &quot;amount&quot;: 10,
            &quot;currencyCode&quot;: &quot;USD&quot;
        },
        {
            &quot;id&quot;: 100222,
            &quot;name&quot;: &quot;&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-10-22T21:00:15.503&quot;,
            &quot;firstName&quot;: &quot;asdf&quot;,
            &quot;lastName&quot;: &quot;asdf&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 0,
            &quot;paymentMethod&quot;: &quot;creditCard&quot;,
            &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
            &quot;invoice&quot;: &quot;&quot;,
            &quot;amount&quot;: 1,
            &quot;currencyCode&quot;: &quot;USD&quot;
        },
        {
            &quot;id&quot;: 100223,
            &quot;name&quot;: &quot;&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-10-22T21:01:27.69&quot;,
            &quot;firstName&quot;: &quot;asdf&quot;,
            &quot;lastName&quot;: &quot;asdf&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 1,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;,
            &quot;accountNumber&quot;: &quot;XXXX3888&quot;,
            &quot;invoice&quot;: &quot;&quot;,
            &quot;amount&quot;: 10,
            &quot;currencyCode&quot;: &quot;USD&quot;
        }
    ],
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-a-list-of-subscriptions" style="display: none !important">{
    &quot;totalNumInResultSet&quot;: 1273,
    &quot;totalNumInResultSetSpecified&quot;: true,
    &quot;subscriptionDetails&quot;: [
        {
            &quot;id&quot;: 100188,
            &quot;name&quot;: &quot;subscription&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-04-28T23:59:47.33&quot;,
            &quot;firstName&quot;: &quot;Joe&quot;,
            &quot;lastName&quot;: &quot;Tester&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 6,
            &quot;paymentMethod&quot;: &quot;creditCard&quot;,
            &quot;accountNumber&quot;: &quot;XXXX5454&quot;,
            &quot;invoice&quot;: &quot;42820041325496571&quot;,
            &quot;amount&quot;: 10,
            &quot;currencyCode&quot;: &quot;USD&quot;
        },
        {
            &quot;id&quot;: 100222,
            &quot;name&quot;: &quot;&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-10-22T21:00:15.503&quot;,
            &quot;firstName&quot;: &quot;asdf&quot;,
            &quot;lastName&quot;: &quot;asdf&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 0,
            &quot;paymentMethod&quot;: &quot;creditCard&quot;,
            &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
            &quot;invoice&quot;: &quot;&quot;,
            &quot;amount&quot;: 1,
            &quot;currencyCode&quot;: &quot;USD&quot;
        },
        {
            &quot;id&quot;: 100223,
            &quot;name&quot;: &quot;&quot;,
            &quot;status&quot;: &quot;canceled&quot;,
            &quot;createTimeStampUTC&quot;: &quot;2004-10-22T21:01:27.69&quot;,
            &quot;firstName&quot;: &quot;asdf&quot;,
            &quot;lastName&quot;: &quot;asdf&quot;,
            &quot;totalOccurrences&quot;: 12,
            &quot;pastOccurrences&quot;: 1,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;,
            &quot;accountNumber&quot;: &quot;XXXX3888&quot;,
            &quot;invoice&quot;: &quot;&quot;,
            &quot;amount&quot;: 10,
            &quot;currencyCode&quot;: &quot;USD&quot;
        }
    ],
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
 <div id="txtRespLoader-get-a-list-of-subscriptions" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-a-list-of-subscriptions">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-a-list-of-subscriptions"></div>
<div id="showCode-php-get-a-list-of-subscriptions">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-a-list-of-subscriptions"></a>
</p>
<textarea class="php" id="textarea-php-get-a-list-of-subscriptions" name="textarea-php-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-a-list-of-subscriptions">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-a-list-of-subscriptions"></div>
<div id="showCode-cs-get-a-list-of-subscriptions">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-a-list-of-subscriptions"></a>
</p>
<textarea class="cs" id="textarea-cs-get-a-list-of-subscriptions" name="textarea-cs-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-a-list-of-subscriptions">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-a-list-of-subscriptions"></div>
<div id="showCode-java-get-a-list-of-subscriptions">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-a-list-of-subscriptions"></a>
</p>
<textarea class="java" id="textarea-java-get-a-list-of-subscriptions" name="textarea-java-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-a-list-of-subscriptions">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-a-list-of-subscriptions"></div>
<div id="showCode-rb-get-a-list-of-subscriptions">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-a-list-of-subscriptions"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-a-list-of-subscriptions" name="textarea-rb-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-a-list-of-subscriptions">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-a-list-of-subscriptions"></div>
<div id="showCode-py-get-a-list-of-subscriptions">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-a-list-of-subscriptions"></a>
</p>
<textarea class="python" id="textarea-py-get-a-list-of-subscriptions" name="textarea-py-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-a-list-of-subscriptions">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-a-list-of-subscriptions">
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-a-list-of-subscriptions"></div>
<div id="showCode-js-get-a-list-of-subscriptions">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-a-list-of-subscriptions"></a>
</p>
<textarea class="node" id="textarea-js-get-a-list-of-subscriptions" name="textarea-js-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="sample-get-a-list-of-subscriptions">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-a-list-of-subscriptions">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-a-list-of-subscriptions">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-a-list-of-subscriptions">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-a-list-of-subscriptions">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-a-list-of-subscriptions">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-a-list-of-subscriptions">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-a-list-of-subscriptions">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-a-list-of-subscriptions"></div>
<div id="showCode-php-get-a-list-of-subscriptions">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-a-list-of-subscriptions" name="textarea-php-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-a-list-of-subscriptions"></div>
<div id="showCode-cs-get-a-list-of-subscriptions">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-a-list-of-subscriptions" name="textarea-cs-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-a-list-of-subscriptions"></div>
<div id="showCode-java-get-a-list-of-subscriptions">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-a-list-of-subscriptions" name="textarea-java-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-a-list-of-subscriptions"></div>
<div id="showCode-rb-get-a-list-of-subscriptions">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-a-list-of-subscriptions" name="textarea-rb-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-a-list-of-subscriptions"></div>
<div id="showCode-py-get-a-list-of-subscriptions">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-a-list-of-subscriptions" name="textarea-py-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-a-list-of-subscriptions"></div>
<div id="showCode-js-get-a-list-of-subscriptions">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-a-list-of-subscriptions"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-a-list-of-subscriptions" name="textarea-js-get-a-list-of-subscriptions" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-a-list-of-subscriptions" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-a-list-of-subscriptions">
<h4 class="panel-title">
<a data-parent="#accordion-get-a-list-of-subscriptions">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-a-list-of-subscriptions" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-a-list-of-subscriptions">
<div class="panel-body">
<p><em>ARBGetSubscriptionListRequest</em>
</p>
<table class="table table-condensed">
<thead>
 <tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>searchType</td>
<td><strong>Required.</strong><br />
Specifies how to filter search results.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>cardExpiringThisMonth</code>, <code>subscriptionActive</code>, <code>subscriptionInactive</code>, or <code>subscriptionExpiringThisMonth</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
<td><strong>Required.</strong><br />
Order of results in response.<br /><br />
</td>
<td><div>String.<br /><br />One of the following: <code>id</code><br /><code>name</code><br /><code>status</code><br /><code>createTimeStampUTC</code><br /><code>lastName</code><br /><code>firstName</code><br /><code>accountNumber</code> (ordered by last four digits)<br /><code>amount</code><br /><code>pastOccurences</code><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
<td>Sort the results in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 subscriptions per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 subscriptions, setting <code>offset</code> to 2 will return the second 100 subscriptions, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-a-list-of-subscriptions">
<h4 class="panel-title">
<a data-parent="#accordion-get-a-list-of-subscriptions">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-a-list-of-subscriptions">
<div class="panel-body">
<p><em>ARBGetSubscriptionListResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
We return a non-zero value for <code>totalNumInResultSet</code> only for the first page of results, that is, if <code>offset</code> equals <code>1</code>.</td>
<td><div>Numeric string.<br /><br />Defaults to <code>0</code><br /><br />
</div></td>
</tr>
<tr>
 <td>subscriptionDetails</td>
<td>Contains one or more instances of <code>subscriptionDetail</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>subscriptionDetail</td>
<td>Contains the results of one query.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td><strong>Required.</strong><br />
Subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name specified when the subscription was created.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>status</td>
<td>Contains information about the subscription status.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>active</code>, <code>expired</code>, <code>suspended</code>, <code>canceled</code>, or <code>terminated</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>createTimeStampUTC</td>
<td><strong>Required.</strong><br />
When the subscription was created.<br /><br />
The T character separates the date from the time. This element interprets the time as Universal Time (UTC).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>totalOccurences</td>
<td><strong>Required.</strong><br />
How many total payments will make up the completed subscription. This includes both past and future scheduled payments.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>pastOccurences</td>
<td><strong>Required.</strong><br />
How many payments have been attempted, whether they were completed or not.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>paymentMethod</td>
<td><strong>Required.</strong><br />
The payment method used.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>creditCard</code>, <code>eCheck</code>, or <code>payPal</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The last 4 digits of card or bank account number.<br /><br />
</td>
<td><div>Numeric string, 4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>invoice</td>
<td>The invoice number specified when the subscription was created.<br /><br />
</td>
 <td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the charge to be run after the trial period.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='twoBullet'>currencyCode</td>
<td>The three-letter ISO code for the currency used in the transaction.<br /><br />
See <a href="https://www.iso.org/iso-4217-currency-codes.html">ISO 4217</a> for a complete list of three-letter currency codes.</td>
<td><div>String, 3 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td><strong>Required.</strong><br />
ID of the payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerShippingProfileId</td>
<td>ID of the shipping profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
 </div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="customer-profiles" class="section-title">Customer Profiles</h2>
<p class="lead">This API enables you to store customer payment and address data for subsequent use. For more information about customer profiles, see the <a href="features/customer_profiles.html">Customer Profiles developer guide</a>.</p>
<h3 id="customer-profiles-create-customer-profile">Create Customer Profile</h3>
<p>Use this function to create a new customer profile including any customer payment profiles and customer shipping addresses.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-customer-profileTryIt" href="#console-create-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-customer-profilephp" href="#php-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-customer-profilecs" href="#cs-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-customer-profilejava" href="#java-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-customer-profilerb" href="#ruby-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-customer-profilepy" href="#python-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-customer-profilejs" href="#node-create-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-customer-profile">XML</button>
 </div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;createCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
   &lt;merchantAuthentication&gt;
     &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
     &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
   &lt;profile&gt;
     &lt;merchantCustomerId&gt;Merchant_Customer_ID&lt;/merchantCustomerId&gt;
     &lt;description&gt;Profile description here&lt;/description&gt;
     &lt;email&gt;customer-profile-email@here.com&lt;/email&gt;
     &lt;paymentProfiles&gt;
       &lt;customerType&gt;individual&lt;/customerType&gt;
        &lt;payment&gt;
          &lt;creditCard&gt;
            &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
            &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
          &lt;/creditCard&gt;
         &lt;/payment&gt;
      &lt;/paymentProfiles&gt;
    &lt;/profile&gt;
	&lt;validationMode&gt;testMode&lt;/validationMode&gt;
  &lt;/createCustomerProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt; 
   &lt;merchantAuthentication&gt;
     &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
     &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
   &lt;profile&gt;
     &lt;merchantCustomerId&gt;Merchant_Customer_ID&lt;/merchantCustomerId&gt;
     &lt;description&gt;Profile description here&lt;/description&gt;
     &lt;email&gt;customer-profile-email@here.com&lt;/email&gt;
     &lt;paymentProfiles&gt;
       &lt;customerType&gt;individual&lt;/customerType&gt;
        &lt;payment&gt;
          &lt;creditCard&gt;
            &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
            &lt;expirationDate&gt;2020-12&lt;/expirationDate&gt;
          &lt;/creditCard&gt;
         &lt;/payment&gt;
      &lt;/paymentProfiles&gt;
    &lt;/profile&gt;
	&lt;validationMode&gt;testMode&lt;/validationMode&gt;
  &lt;/createCustomerProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;createCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;profile&quot;: {
            &quot;merchantCustomerId&quot;: &quot;Merchant_Customer_ID&quot;,
            &quot;description&quot;: &quot;Profile description here&quot;,
            &quot;email&quot;: &quot;customer-profile-email@here.com&quot;,
            &quot;paymentProfiles&quot;: {
                &quot;customerType&quot;: &quot;individual&quot;,
                &quot;payment&quot;: {
                    &quot;creditCard&quot;: {
                        &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                        &quot;expirationDate&quot;: &quot;2020-12&quot;
                    }
                }
            }
        },
        &quot;validationMode&quot;: &quot;testMode&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;profile&quot;: {
            &quot;merchantCustomerId&quot;: &quot;Merchant_Customer_ID&quot;,
            &quot;description&quot;: &quot;Profile description here&quot;,
            &quot;email&quot;: &quot;customer-profile-email@here.com&quot;,
            &quot;paymentProfiles&quot;: {
                &quot;customerType&quot;: &quot;individual&quot;,
                &quot;payment&quot;: {
                    &quot;creditCard&quot;: {
                        &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                        &quot;expirationDate&quot;: &quot;2020-12&quot;
                    }
                }
            }
        },
        &quot;validationMode&quot;: &quot;testMode&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-customer-profile"></span>


<div class="errorDetails" id="detailsDiv-create-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
&lt;customerPaymentProfileIdList&gt;
   &lt;numericString&gt;20000&lt;/numericString&gt;
   &lt;numericString&gt;20001&lt;/numericString&gt;
&lt;/customerPaymentProfileIdList&gt;
&lt;customerShippingAddressIdList&gt;
   &lt;numericString&gt;30000&lt;/numericString&gt;
   &lt;numericString&gt;30001&lt;/numericString&gt;
&lt;/customerShippingAddressIdList&gt;
&lt;validationDirectResponseList&gt;
&lt;string&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for
ValidateCustomerPaymentProfile.,0.01,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,mark@example.com,,,,,,,,,0.00,0.00,0.00,,none,
D18EB6B211FE0BBF556B271FDA6F92EE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,&lt;/string&gt;
  &lt;/validationDirectResponseList&gt;  
&lt;/createCustomerProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
&lt;customerPaymentProfileIdList&gt;
   &lt;numericString&gt;20000&lt;/numericString&gt;
   &lt;numericString&gt;20001&lt;/numericString&gt;
&lt;/customerPaymentProfileIdList&gt;
&lt;customerShippingAddressIdList&gt;
   &lt;numericString&gt;30000&lt;/numericString&gt;
   &lt;numericString&gt;30001&lt;/numericString&gt;
&lt;/customerShippingAddressIdList&gt;
&lt;validationDirectResponseList&gt;
&lt;string&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for
ValidateCustomerPaymentProfile.,0.01,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,mark@example.com,,,,,,,,,0.00,0.00,0.00,,none,
D18EB6B211FE0BBF556B271FDA6F92EE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,&lt;/string&gt;
  &lt;/validationDirectResponseList&gt;  
&lt;/createCustomerProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-customer-profile">{
    &quot;customerProfileId&quot;: &quot;190178&quot;,
    &quot;customerPaymentProfileIdList&quot;: [
        &quot;157497&quot;
    ],
    &quot;customerShippingAddressIdList&quot;: [],
    &quot;validationDirectResponseList&quot;: [
        &quot;1,1,1,(TESTMODE) This transaction has been approved.,000000,P,0,none,Test transaction for ValidateCustomerPaymentProfile.,1.00,CC,auth_only,Merchant_Customer_ID,,,,,,,,,,,customer-profile-email@her.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,207BCBBF78E85CF174C87AE286B472D2,,,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-customer-profile" style="display: none !important">{
    &quot;customerProfileId&quot;: &quot;190178&quot;,
    &quot;customerPaymentProfileIdList&quot;: [
        &quot;157497&quot;
    ],
    &quot;customerShippingAddressIdList&quot;: [],
    &quot;validationDirectResponseList&quot;: [
        &quot;1,1,1,(TESTMODE) This transaction has been approved.,000000,P,0,none,Test transaction for ValidateCustomerPaymentProfile.,1.00,CC,auth_only,Merchant_Customer_ID,,,,,,,,,,,customer-profile-email@her.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,207BCBBF78E85CF174C87AE286B472D2,,,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
 </div>
<div class="tab-pane fade" id="php-create-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-customer-profile"></div>
<div id="showCode-php-create-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-create-customer-profile" name="textarea-php-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-customer-profile"></div>
<div id="showCode-cs-create-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-create-customer-profile" name="textarea-cs-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-customer-profile">
 <div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-customer-profile"></div>
<div id="showCode-java-create-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-create-customer-profile" name="textarea-java-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-customer-profile"></div>
<div id="showCode-rb-create-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-customer-profile" name="textarea-rb-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-customer-profile">
</div>
 <div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-customer-profile"></div>
<div id="showCode-py-create-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-create-customer-profile" name="textarea-py-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-customer-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-customer-profile"></div>
<div id="showCode-js-create-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-create-customer-profile" name="textarea-js-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-customer-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-customer-profile"></div>
<div id="showCode-php-create-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-customer-profile" name="textarea-php-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-customer-profile"></div>
<div id="showCode-cs-create-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-customer-profile" name="textarea-cs-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
 <div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-customer-profile"></div>
<div id="showCode-java-create-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-customer-profile" name="textarea-java-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-customer-profile"></div>
<div id="showCode-rb-create-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-customer-profile" name="textarea-rb-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-customer-profile"></div>
<div id="showCode-py-create-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-customer-profile" name="textarea-py-create-customer-profile" cols="80" rows="6"></textarea>
</div>
 </div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-customer-profile"></div>
<div id="showCode-js-create-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-customer-profile" name="textarea-js-create-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-customer-profile">
<div class="panel-body">
<p><em>createCustomerProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td>Contains the information for the customer profile.<br /><br />
At least one of the following fields must be submitted under <code>profile</code>: <code>merchantCustomerId</code>, <code>description</code>, or <code>email</code>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>merchantCustomerId</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br />Merchant assigned ID for the customer.<br /><br />
Required only when no values for <code>description</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td><strong>Conditional.</strong><br />Description of the customer or customer profile.<br /><br />
Required only when no values for <code>merchantCustomerId</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td><strong>Conditional.</strong><br />Email address associated with the customer profile.<br /><br />
Required when no values for <code>description</code> and <code>merchantCustomerId</code> are submitted.<br /><br />Required when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentProfiles</td>
<td>Contains payment profiles for the customer profile.<br /><br />
Multiple instances of this element can be submitted to create multiple payment profiles for the customer profile.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerType</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String. Either <code>individual</code> or <code>business</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
 <td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div><code>creditCard</code>, <code>bankAccount</code>, or <code>opaqueData</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>creditCard</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />Contains human-readable information from the customer's card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>cardCode</td>
<td>The customer's card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br />The <code>cardCode</code> field is only used for validation and is not stored in the customer profile. It should only be used when submitting <code>validationMode</code> with a value of <code>testMode</code> or <code>liveMode</code>.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
 </tr>
<tr>
<td class='fourBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code> for recurring charges.</td>
<td><div>String. Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='threeBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><p>For Apple Pay, use <code>COMMON.APPLE.INAPP.PAYMENT</code>.</p><br /><p>For Android Pay, use <code>COMMON.ANDROID.INAPP.PAYMENT</code>.</p><br /><br /><br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
<p>The payment gateway expects the encrypted payment data and meta data for the encryption keys.</p></td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>shipToList</td>
<td>Contains shipping address information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
 <td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>profileType</td>
<td>Indicates whether a profile is a guest profile.<br /><br />
We recommend submitting <code>profileType</code> only when you need a guest profile. If you do not need guest profiles, you do not need to send this element.<br /><br />We retain guest profiles for 90 days after their last usage in a transaction request. If you create no more transactions using a given guest profile, we purge the guest profile from our system.</td>
<td><div>String.<br /><br />Either <code>guest</code> or <code>regular</code>. Defaults to <code>regular</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>validationMode</td>
<td>Indicates the processing mode for the request. If the customer profile contains no payment data, this field should not be sent.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>testMode</code> to perform a Luhn mod-10 check on the card number, without further validation. Use <code>liveMode</code> to submit a zero-dollar or one-cent transaction (depending on card type and processor support) to confirm the card number belongs to an active credit or debit account.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-customer-profile">
<div class="panel-body">
<p><em>createCustomerProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
 <th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileIdList</td>
<td>A list of all payment profile IDs created with the request.<br /><br />
This output is present only for requests that contain one or more payment profiles.<br /><br />The payment profile IDs are returned in the same order as they were in the request.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerShippingAddressIdList</td>
<td>A list of all shipping profile IDs created with the request.<br /><br />
This output is present only for requests that contain multiple shipping profiles.<br /><br />The shipping profile IDs are returned in the same order as they were in the request.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>validationDirectResponseList</td>
<td>A list of the direct response results for the validation transaction for each payment profile.<br /><br />
This value is present only when using <code>validationMode</code>, either with <code>testMode</code> or <code>liveMode</code>.<br /><br />The list is returned in the same order as the payment profiles were submitted in the request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-get-customer-profile">Get Customer Profile</h3>
<p>Use this function to retrieve an existing customer profile along with all the associated payment profiles and shipping addresses.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">

<li id="console" class="active">
<a id="get-customer-profileTryIt" href="#console-get-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-profilephp" href="#php-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-profilecs" href="#cs-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-profilejava" href="#java-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-profilerb" href="#ruby-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-profilepy" href="#python-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-profilejs" href="#node-get-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;getCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;includeIssuerInfo&gt;true&lt;/includeIssuerInfo&gt;
&lt;/getCustomerProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;includeIssuerInfo&gt;true&lt;/includeIssuerInfo&gt;
&lt;/getCustomerProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;getCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;includeIssuerInfo&quot;: &quot;true&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;includeIssuerInfo&quot;: &quot;true&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-customer-profile"></span>


<div class="errorDetails" id="detailsDiv-get-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;profile&gt;
      &lt;merchantCustomerId&gt;CUST001&lt;/merchantCustomerId&gt;
      &lt;description&gt;Profile created by Subscription: 3078153&lt;/description&gt;
      &lt;email&gt;joe@mail.com&lt;/email&gt;
      &lt;customerProfileId&gt;39598611&lt;/customerProfileId&gt;
      &lt;paymentProfiles&gt;
         &lt;customerType&gt;individual&lt;/customerType&gt;
         &lt;billTo&gt;
            &lt;firstName&gt;John&lt;/firstName&gt;
            &lt;lastName&gt;Smith&lt;/lastName&gt;
         &lt;/billTo&gt;
         &lt;defaultPaymentProfile&gt;true&lt;/defaultPaymentProfile&gt;
         &lt;customerPaymentProfileId&gt;35936989&lt;/customerPaymentProfileId&gt;
         &lt;payment&gt;
           &lt;creditCard&gt;
               &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
               &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
               &lt;cardType&gt;Visa&lt;/cardType&gt;
               &lt;issuerNumber&gt;411111&lt;/issuerNumber&gt;
               &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt; 
           &lt;/creditCard&gt;
         &lt;/payment&gt;
      &lt;/paymentProfiles&gt;
   &lt;/profile&gt;
   &lt;subscriptionIds&gt;
      &lt;subscriptionId&gt;3078153&lt;/subscriptionId&gt;
      &lt;subscriptionId&gt;3078154&lt;/subscriptionId&gt;
   &lt;/subscriptionIds&gt;
&lt;/getCustomerProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;profile&gt;
      &lt;merchantCustomerId&gt;CUST001&lt;/merchantCustomerId&gt;
      &lt;description&gt;Profile created by Subscription: 3078153&lt;/description&gt;
      &lt;email&gt;joe@mail.com&lt;/email&gt;
      &lt;customerProfileId&gt;39598611&lt;/customerProfileId&gt;
      &lt;paymentProfiles&gt;
         &lt;customerType&gt;individual&lt;/customerType&gt;
         &lt;billTo&gt;
            &lt;firstName&gt;John&lt;/firstName&gt;
            &lt;lastName&gt;Smith&lt;/lastName&gt;
         &lt;/billTo&gt;
         &lt;defaultPaymentProfile&gt;true&lt;/defaultPaymentProfile&gt;
         &lt;customerPaymentProfileId&gt;35936989&lt;/customerPaymentProfileId&gt;
         &lt;payment&gt;
           &lt;creditCard&gt;
               &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
               &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
               &lt;cardType&gt;Visa&lt;/cardType&gt;
               &lt;issuerNumber&gt;411111&lt;/issuerNumber&gt;
               &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt; 
           &lt;/creditCard&gt;
         &lt;/payment&gt;
      &lt;/paymentProfiles&gt;
   &lt;/profile&gt;
   &lt;subscriptionIds&gt;
      &lt;subscriptionId&gt;3078153&lt;/subscriptionId&gt;
      &lt;subscriptionId&gt;3078154&lt;/subscriptionId&gt;
   &lt;/subscriptionIds&gt;
&lt;/getCustomerProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-profile">{
    &quot;profile&quot;: {
        &quot;paymentProfiles&quot;: [
            {
                &quot;defaultPaymentProfile&quot;: true,
                &quot;customerPaymentProfileId&quot;: &quot;35936989&quot;,
                &quot;payment&quot;: {
                    &quot;creditCard&quot;: {
                        &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
                        &quot;expirationDate&quot;: &quot;XXXX&quot;,
                        &quot;cardType&quot;: &quot;Visa&quot;,
                        &quot;issuerNumber&quot;: &quot;411111&quot;,
                        &quot;isPaymentToken&quot;: true
                    }
                },
                &quot;customerType&quot;: &quot;individual&quot;,
                &quot;billTo&quot;: {
                    &quot;firstName&quot;: &quot;John&quot;,
                    &quot;lastName&quot;: &quot;Smith&quot;
                }
            }
        ],
        &quot;customerProfileId&quot;: &quot;39598611&quot;,
        &quot;merchantCustomerId&quot;: &quot;CUST001&quot;,
        &quot;description&quot;: &quot;Profile created by Subscription: 3078153&quot;,
        &quot;email&quot;: &quot;joe@mail.com&quot;
    },
    &quot;subscriptionIds&quot;: [
        &quot;3078153&quot;,
        &quot;3078154&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-profile" style="display: none !important">{
    &quot;profile&quot;: {
        &quot;paymentProfiles&quot;: [
            {
                &quot;defaultPaymentProfile&quot;: true,
                &quot;customerPaymentProfileId&quot;: &quot;35936989&quot;,
                &quot;payment&quot;: {
                    &quot;creditCard&quot;: {
                        &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
                        &quot;expirationDate&quot;: &quot;XXXX&quot;,
                        &quot;cardType&quot;: &quot;Visa&quot;,
                        &quot;issuerNumber&quot;: &quot;411111&quot;,
                        &quot;isPaymentToken&quot;: true
                    }
                },
                &quot;customerType&quot;: &quot;individual&quot;,
                &quot;billTo&quot;: {
                    &quot;firstName&quot;: &quot;John&quot;,
                    &quot;lastName&quot;: &quot;Smith&quot;
                }
            }
        ],
        &quot;customerProfileId&quot;: &quot;39598611&quot;,
        &quot;merchantCustomerId&quot;: &quot;CUST001&quot;,
        &quot;description&quot;: &quot;Profile created by Subscription: 3078153&quot;,
        &quot;email&quot;: &quot;joe@mail.com&quot;
    },
    &quot;subscriptionIds&quot;: [
        &quot;3078153&quot;,
        &quot;3078154&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                </pre>
<div id="txtRespLoader-get-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-profile"></div>
 <div id="showCode-php-get-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-profile" name="textarea-php-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile"></div>
<div id="showCode-cs-get-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-profile" name="textarea-cs-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-profile"></div>
<div id="showCode-java-get-customer-profile">
<p>
 This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-profile" name="textarea-java-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile"></div>
<div id="showCode-rb-get-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-profile" name="textarea-rb-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-profile"></div>
<div id="showCode-py-get-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-profile" name="textarea-py-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-profile"></div>
<div id="showCode-js-get-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-profile" name="textarea-js-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-profile">Python</button>
 <button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-profile"></div>
<div id="showCode-php-get-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-customer-profile" name="textarea-php-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile"></div>
<div id="showCode-cs-get-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-profile" name="textarea-cs-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-profile"></div>
<div id="showCode-java-get-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-profile" name="textarea-java-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile"></div>
<div id="showCode-rb-get-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-profile" name="textarea-rb-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-profile"></div>
<div id="showCode-py-get-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-profile" name="textarea-py-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-profile"></div>
<div id="showCode-js-get-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-profile" name="textarea-js-get-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-profile">
<div class="panel-body">
<p><em>getCustomerProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>merchantCustomerId</td>
<td>Merchant-assigned customer reference ID.<br /><br />
Must be unique among all of the customer IDs stored with profiles to be able to retrieve.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>email</td>
<td>Merchant-assigned customer email address.<br /><br />
Must be unique among all of the customer IDs stored with profiles to be able to retrieve.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>unmaskExpirationDate</td>
<td>Set to true if you want the expiration date to be returned unmasked.<br /><br />
</td>
 <td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>includeIssuerInfo</td>
<td>When set to true, this optional field requests that the issuer number <a href="https://www.iso.org/standard/70484.html">(IIN)</a> be included in the response, in the field <code>issuerNumber</code>.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-profile">
<div class="panel-body">
<p><em>getCustomerProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
 <td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td>Contains the information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>merchantCustomerId</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br />Merchant assigned ID for the customer.<br /><br />
Required only when no values for <code>description</code> and <code>email</code> are submitted.</td>
 <td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td><strong>Conditional.</strong><br />Description of the customer or customer profile.<br /><br />
Required only when no values for <code>merchantCustomerId</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td>Email address associated with the customer profile.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentProfiles</td>
<td>Contains one or more payment profiles for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
</td>
 <td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>defaultPaymentProfile</td>
<td>Indicates whether this profile is the default.<br /><br />
If a customer profile does not have a default payment profile, then the <code>defaultPaymentProfile</code> element is not displayed in the <code>getCustomerProfileResponse</code>.<br /><br />If a profile has multiple payment profiles, the default profile returns <code>defaultPaymentProfile</code> set to <code>true</code>. Non-default profiles do not return <code>defaultPaymentProfile</code>.</td>
<td><div>Boolean.<br /><br />EIther <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div>Contains either <code>creditCard</code> or <code>bankAccount</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>creditCard</td>
<td>Contains credit card payment information for the payment profile.<br /><br />
For information about the fields in this object, see the <code>creditCard</code> object in <a href="#customer-profiles-get-customer-payment-profile"><code>getCustomerPaymentProfileResponse</code></a></td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>cardNumber</td>
<td>The customer’s masked credit card number.<br /><br />
All sensitive payment information in the output is masked.</td>
<td><div>String, 8 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>expirationDate</td>
<td>The expiration date for the customer’s credit card.<br /><br />
All sensitive payment information in the output is masked unless you set <code>unmaskExpirationDate</code> to <code>true</code> in the request. When masked, <code>expirationDate<code> set to "XXXX".</td>
<td><div>String, 7 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>cardType</td>
<td>Type of credit card.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>AmericanExpress</code>, <code>Discover</code>, <code>JCB</code>, or <code>DinersClub</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>issuerNumber</td>
<td>Unique identifier <a href="https://www.iso.org/standard/70484.html">(IIN)</a> for the issuer of the card. This element is only returned if you set the <code>includeIssuerInfo</code> field to true in the request.<br /><br />
</td>
<td><div>Numeric string, six digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>isPaymentToken</td>
<td>Indicates whether the payment method used an encrypted token. <br /><br />
</td>
<td><div>Boolean.<br /><br />EIther <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
 <tr>
<td class='threeBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code> for recurring charges.</td>
<td><div>String. Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
 </tr>
<tr>
<td class='fourBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipToList</td>
<td>One or more of this field will be returned for any shipping profiles associated with this customer.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Address associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State associated with this customer's shipping profile.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>zip</td>
<td>Postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerAddressId</td>
<td>customerAddressId associated with this customer's shipping profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profileType</td>
<td>Indicates whether a profile is a guest profile.<br /><br />
We recommend submitting <code>profileType</code> only when you need a guest profile. If you do not need guest profiles, you do not need to send this element.<br /><br />We retain guest profiles for 90 days after their last usage in a transaction request. If you create no more transactions using a given guest profile, we purge the guest profile from our system.</td>
<td><div>String.<br /><br />Either <code>guest</code> or <code>regular</code>. Defaults to <code>regular</code>.<br /><br />
 </div></td>
</tr>
<tr>
<td>subscriptionIds</td>
<td>Contains one or more <code>subscriptionId</code> fields associated with the customer.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>subscriptionId</td>
<td>Contains one or more subscription IDs associated with the customer.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-get-customer-profile-ids">Get Customer Profile IDs</h3>
<p>Use this function to retrieve all existing customer profile IDs.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-customer-profile-idsTryIt" href="#console-get-customer-profile-ids" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-profile-idsphp" href="#php-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-profile-idscs" href="#cs-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-profile-idsjava" href="#java-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-profile-idsrb" href="#ruby-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-profile-idspy" href="#python-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-profile-idsjs" href="#node-get-customer-profile-ids" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-profile-ids">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-profile-ids">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-profile-ids">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-profile-ids" spellcheck="false" class="XML XMLRequest">&lt;getCustomerProfileIdsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
&lt;/getCustomerProfileIdsRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-profile-ids" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getCustomerProfileIdsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
&lt;/getCustomerProfileIdsRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-profile-ids" spellcheck="false" class="JSON JSONRequest">{
    &quot;getCustomerProfileIdsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-profile-ids" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getCustomerProfileIdsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-customer-profile-ids" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-profile-ids" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
 </form>
<div>
<span id="spnStatusCode-get-customer-profile-ids"></span>


<div class="errorDetails" id="detailsDiv-get-customer-profile-ids">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-profile-ids">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerProfileIdsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;ids&gt;
    &lt;numericString&gt;10000&lt;/numericString&gt;
    &lt;numericString&gt;10001&lt;/numericString&gt;
    &lt;numericString&gt;10002&lt;/numericString&gt;
  &lt;/ids&gt;
&lt;/getCustomerProfileIdsResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-profile-ids" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerProfileIdsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;ids&gt;
    &lt;numericString&gt;10000&lt;/numericString&gt;
    &lt;numericString&gt;10001&lt;/numericString&gt;
    &lt;numericString&gt;10002&lt;/numericString&gt;
  &lt;/ids&gt;
&lt;/getCustomerProfileIdsResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-profile-ids">{
    &quot;ids&quot;: [
        &quot;47988&quot;,
        &quot;47997&quot;,
        &quot;48458&quot;,
        &quot;48468&quot;,
        &quot;189118&quot;,
        &quot;190178&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-profile-ids" style="display: none !important">{
    &quot;ids&quot;: [
        &quot;47988&quot;,
        &quot;47997&quot;,
        &quot;48458&quot;,
        &quot;48468&quot;,
        &quot;189118&quot;,
        &quot;190178&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-get-customer-profile-ids" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-customer-profile-ids">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-profile-ids"></div>
<div id="showCode-php-get-customer-profile-ids">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile-ids"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-profile-ids" name="textarea-php-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-profile-ids">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile-ids"></div>
<div id="showCode-cs-get-customer-profile-ids">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile-ids"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-profile-ids" name="textarea-cs-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-profile-ids">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-profile-ids"></div>
<div id="showCode-java-get-customer-profile-ids">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile-ids"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-profile-ids" name="textarea-java-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-profile-ids">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile-ids"></div>
<div id="showCode-rb-get-customer-profile-ids">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile-ids"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-profile-ids" name="textarea-rb-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
 </div>
<div class="tab-pane fade" id="python-get-customer-profile-ids">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-profile-ids"></div>
<div id="showCode-py-get-customer-profile-ids">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile-ids"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-profile-ids" name="textarea-py-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-profile-ids">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-profile-ids">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-profile-ids"></div>
<div id="showCode-js-get-customer-profile-ids">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile-ids"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-profile-ids" name="textarea-js-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-customer-profile-ids">
 <div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-profile-ids">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-profile-ids">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-profile-ids">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-profile-ids">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-profile-ids">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-profile-ids">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-ids">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-profile-ids"></div>
<div id="showCode-php-get-customer-profile-ids">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-customer-profile-ids" name="textarea-php-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile-ids"></div>
<div id="showCode-cs-get-customer-profile-ids">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-profile-ids" name="textarea-cs-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-profile-ids"></div>
<div id="showCode-java-get-customer-profile-ids">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-profile-ids" name="textarea-java-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile-ids"></div>
<div id="showCode-rb-get-customer-profile-ids">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-profile-ids" name="textarea-rb-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-profile-ids"></div>
<div id="showCode-py-get-customer-profile-ids">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-profile-ids" name="textarea-py-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-profile-ids"></div>
<div id="showCode-js-get-customer-profile-ids">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile-ids"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-profile-ids" name="textarea-js-get-customer-profile-ids" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-profile-ids" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-profile-ids">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile-ids">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-profile-ids" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-profile-ids">
<div class="panel-body">
<p><em>getCustomerProfileIdsRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
 </thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-profile-ids">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile-ids">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-profile-ids">
<div class="panel-body">
<p><em>getCustomerProfileIdsResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>ids</td>
<td>Payment gateway assigned IDs associated with the customer profiles.<br /><br />
This output is present only for successful requests.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>numericString</td>
<td>The ID number associated with a customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-update-customer-profile">Update Customer Profile</h3>
<p>Use this function to update an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="update-customer-profileTryIt" href="#console-update-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="update-customer-profilephp" href="#php-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="update-customer-profilecs" href="#cs-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="update-customer-profilejava" href="#java-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="update-customer-profilerb" href="#ruby-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="update-customer-profilepy" href="#python-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="update-customer-profilejs" href="#node-update-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-update-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="update-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="update-customer-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-update-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;updateCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;profile&gt;
    &lt;merchantCustomerId&gt;custId123&lt;/merchantCustomerId&gt;
    &lt;description&gt;some description&lt;/description&gt;
    &lt;email&gt;newaddress@example.com&lt;/email&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;/profile&gt;
&lt;/updateCustomerProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-update-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;updateCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;profile&gt;
    &lt;merchantCustomerId&gt;custId123&lt;/merchantCustomerId&gt;
    &lt;description&gt;some description&lt;/description&gt;
    &lt;email&gt;newaddress@example.com&lt;/email&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;/profile&gt;
&lt;/updateCustomerProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-update-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;updateCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;profile&quot;: {
            &quot;merchantCustomerId&quot;: &quot;custId123&quot;,
            &quot;description&quot;: &quot;some description&quot;,
            &quot;email&quot;: &quot;newaddress@example.com&quot;,
            &quot;customerProfileId&quot;: &quot;10000&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-update-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;updateCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;profile&quot;: {
            &quot;merchantCustomerId&quot;: &quot;custId123&quot;,
            &quot;description&quot;: &quot;some description&quot;,
            &quot;email&quot;: &quot;newaddress@example.com&quot;,
            &quot;customerProfileId&quot;: &quot;10000&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-update-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-update-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-update-customer-profile"></span>


<div class="errorDetails" id="detailsDiv-update-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-update-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateCustomerProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-update-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateCustomerProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-update-customer-profile">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-update-customer-profile" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-update-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-update-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="update-customer-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-update-customer-profile"></div>
<div id="showCode-php-update-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-update-customer-profile" name="textarea-php-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-update-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="update-customer-profile">
</div>
 <div class="showCodeCont" id="showCode-update-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-update-customer-profile"></div>
<div id="showCode-cs-update-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-update-customer-profile" name="textarea-cs-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-update-customer-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="update-customer-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-update-customer-profile"></div>
<div id="showCode-java-update-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-update-customer-profile" name="textarea-java-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-update-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="update-customer-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">

 <div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-update-customer-profile"></div>
<div id="showCode-rb-update-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-update-customer-profile" name="textarea-rb-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-update-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="update-customer-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-update-customer-profile"></div>
<div id="showCode-py-update-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-update-customer-profile" name="textarea-py-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-update-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="update-customer-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-update-customer-profile"></div>
<div id="showCode-js-update-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-update-customer-profile" name="textarea-js-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-update-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="update-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="update-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="update-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="update-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="update-customer-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="update-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-update-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-update-customer-profile"></div>
<div id="showCode-php-update-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-profile"></a>
</p>
 <textarea class="sample-code" id="textarea-php-update-customer-profile" name="textarea-php-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-update-customer-profile"></div>
<div id="showCode-cs-update-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-update-customer-profile" name="textarea-cs-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-update-customer-profile"></div>
<div id="showCode-java-update-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-update-customer-profile" name="textarea-java-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-update-customer-profile"></div>
<div id="showCode-rb-update-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-update-customer-profile" name="textarea-rb-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-update-customer-profile"></div>
<div id="showCode-py-update-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-update-customer-profile" name="textarea-py-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-update-customer-profile"></div>
<div id="showCode-js-update-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-update-customer-profile" name="textarea-js-update-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-update-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-update-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-update-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-update-customer-profile">
<div class="panel-body">
<p><em>updateCustomerProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
 <th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td>Contains the information for the customer profile.<br /><br />
At least one of the following fields must be submitted under <code>profile</code>: <code>merchantCustomerId</code>, <code>description</code>, or <code>email</code>.</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>merchantCustomerId</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br />Merchant assigned ID for the customer.<br /><br />
Required only when no values for <code>description</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td><strong>Conditional.</strong><br />Description of the customer or customer profile.<br /><br />
Required only when no values for <code>merchantCustomerId</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td><strong>Conditional.</strong><br />Email address associated with the customer profile.<br /><br />
Required when no values for <code>description</code> and <code>merchantCustomerId</code> are submitted.<br /><br />Required when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>profileType</td>
<td>Indicates whether a profile is a guest profile.<br /><br />
We recommend submitting <code>profileType</code> only when you need a guest profile. If you do not need guest profiles, you do not need to send this element.<br /><br />We retain guest profiles for 90 days after their last usage in a transaction request. If you create no more transactions using a given guest profile, we purge the guest profile from our system.</td>
<td><div>String.<br /><br />Either <code>guest</code> or <code>regular</code>. Defaults to <code>regular</code>.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-update-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-update-customer-profile">
<div class="panel-body">
<p><em>updateCustomerProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-delete-customer-profile">Delete Customer Profile</h3>
<p>Use this function to delete an existing customer profile along with all associated customer payment profiles and customer shipping addresses.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="delete-customer-profileTryIt" href="#console-delete-customer-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="delete-customer-profilephp" href="#php-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="delete-customer-profilecs" href="#cs-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="delete-customer-profilejava" href="#java-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
 </li>
<li id="RUBY">
<a id="delete-customer-profilerb" href="#ruby-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="delete-customer-profilepy" href="#python-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="delete-customer-profilejs" href="#node-delete-customer-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-delete-customer-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="delete-customer-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="delete-customer-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-delete-customer-profile" spellcheck="false" class="XML XMLRequest">&lt;deleteCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
&lt;/deleteCustomerProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-delete-customer-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;deleteCustomerProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
&lt;/deleteCustomerProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-delete-customer-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;deleteCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-delete-customer-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;deleteCustomerProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-delete-customer-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-delete-customer-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-delete-customer-profile"></span>


<div class="errorDetails" id="detailsDiv-delete-customer-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-delete-customer-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-delete-customer-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-delete-customer-profile">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-delete-customer-profile" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-delete-customer-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-delete-customer-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-delete-customer-profile"></div>
<div id="showCode-php-delete-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-profile"></a>
</p>
<textarea class="php" id="textarea-php-delete-customer-profile" name="textarea-php-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-delete-customer-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-delete-customer-profile"></div>
<div id="showCode-cs-delete-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-delete-customer-profile" name="textarea-cs-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-delete-customer-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-delete-customer-profile"></div>
<div id="showCode-java-delete-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-profile"></a>
</p>
<textarea class="java" id="textarea-java-delete-customer-profile" name="textarea-java-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-delete-customer-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-delete-customer-profile"></div>
<div id="showCode-rb-delete-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-delete-customer-profile" name="textarea-rb-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-delete-customer-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-delete-customer-profile"></div>
<div id="showCode-py-delete-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-profile"></a>
</p>
<textarea class="python" id="textarea-py-delete-customer-profile" name="textarea-py-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-delete-customer-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="delete-customer-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-delete-customer-profile"></div>
<div id="showCode-js-delete-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-profile"></a>
</p>
<textarea class="node" id="textarea-js-delete-customer-profile" name="textarea-js-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="sample-delete-customer-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="delete-customer-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="delete-customer-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="delete-customer-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="delete-customer-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="delete-customer-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="delete-customer-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-delete-customer-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-delete-customer-profile"></div>
<div id="showCode-php-delete-customer-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-delete-customer-profile" name="textarea-php-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-delete-customer-profile"></div>
<div id="showCode-cs-delete-customer-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-delete-customer-profile" name="textarea-cs-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-delete-customer-profile"></div>
<div id="showCode-java-delete-customer-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-delete-customer-profile" name="textarea-java-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-delete-customer-profile"></div>
<div id="showCode-rb-delete-customer-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-delete-customer-profile" name="textarea-rb-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-delete-customer-profile"></div>
<div id="showCode-py-delete-customer-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-delete-customer-profile" name="textarea-py-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-delete-customer-profile"></div>
<div id="showCode-js-delete-customer-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-delete-customer-profile" name="textarea-js-delete-customer-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-delete-customer-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-delete-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-delete-customer-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-delete-customer-profile">
<div class="panel-body">
<p><em>deleteCustomerProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
 <th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-delete-customer-profile">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-delete-customer-profile">
<div class="panel-body">
<p><em>deleteCustomerProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-create-customer-payment-profile">Create Customer Payment Profile</h3>
<p>Use this function to create a new customer payment profile for an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-customer-payment-profileTryIt" href="#console-create-customer-payment-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-customer-payment-profilephp" href="#php-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-customer-payment-profilecs" href="#cs-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-customer-payment-profilejava" href="#java-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
 </li>
<li id="RUBY">
<a id="create-customer-payment-profilerb" href="#ruby-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-customer-payment-profilepy" href="#python-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-customer-payment-profilejs" href="#node-create-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-customer-payment-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-customer-payment-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-customer-payment-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-customer-payment-profile" spellcheck="false" class="XML XMLRequest">&lt;createCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;paymentProfile&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;company&gt;&lt;/company&gt;
      &lt;address&gt;123 Main St.&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
      &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;/billTo&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2023-12&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;defaultPaymentProfile&gt;false&lt;/defaultPaymentProfile&gt;
  &lt;/paymentProfile&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/createCustomerPaymentProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-customer-payment-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;paymentProfile&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;company&gt;&lt;/company&gt;
      &lt;address&gt;123 Main St.&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
      &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;/billTo&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2023-12&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;defaultPaymentProfile&gt;false&lt;/defaultPaymentProfile&gt;
  &lt;/paymentProfile&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/createCustomerPaymentProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-customer-payment-profile" spellcheck="false" class="JSON JSONRequest">{
  &quot;createCustomerPaymentProfileRequest&quot;: {
      &quot;merchantAuthentication&quot;: {
    &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
    &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
  },
    &quot;customerProfileId&quot;: &quot;10000&quot;,
    &quot;paymentProfile&quot;: {
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;,
        &quot;phoneNumber&quot;: &quot;000-000-0000&quot;
      },
      &quot;payment&quot;: {
        &quot;creditCard&quot;: {
          &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
          &quot;expirationDate&quot;: &quot;2023-12&quot;
        }
      },
      &quot;defaultPaymentProfile&quot;: false
    },
    &quot;validationMode&quot;: &quot;liveMode&quot;
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-customer-payment-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;createCustomerPaymentProfileRequest&quot;: {
      &quot;merchantAuthentication&quot;: {
    &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
    &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
  },
    &quot;customerProfileId&quot;: &quot;10000&quot;,
    &quot;paymentProfile&quot;: {
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;,
        &quot;phoneNumber&quot;: &quot;000-000-0000&quot;
      },
      &quot;payment&quot;: {
        &quot;creditCard&quot;: {
          &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
          &quot;expirationDate&quot;: &quot;2023-12&quot;
        }
      },
      &quot;defaultPaymentProfile&quot;: false
    },
    &quot;validationMode&quot;: &quot;liveMode&quot;
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-customer-payment-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-customer-payment-profile" name="btnReset" class="btn  " onclick="">RESET</button>
 <span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-customer-payment-profile"></span>


<div class="errorDetails" id="detailsDiv-create-customer-payment-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-customer-payment-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerPaymentProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
    &lt;validationDirectResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,none,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,E42C2F81807AA1B581DEA12EB6727604,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&lt;/validationDirectResponse&gt;
&lt;/createCustomerPaymentProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-customer-payment-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerPaymentProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
    &lt;validationDirectResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,none,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,E42C2F81807AA1B581DEA12EB6727604,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&lt;/validationDirectResponse&gt;
&lt;/createCustomerPaymentProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-customer-payment-profile">{
  &quot;customerProfileId&quot;: &quot;10000&quot;,
  &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
  &quot;validationDirectResponse&quot;: &quot;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,
D18EB6B211FE0BBF556B271FDA6F92EE,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-customer-payment-profile" style="display: none !important">{
  &quot;customerProfileId&quot;: &quot;10000&quot;,
  &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
  &quot;validationDirectResponse&quot;: &quot;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,
D18EB6B211FE0BBF556B271FDA6F92EE,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                </pre>
<div id="txtRespLoader-create-customer-payment-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-customer-payment-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-customer-payment-profile"></div>
<div id="showCode-php-create-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-payment-profile"></a>
</p>
<textarea class="php" id="textarea-php-create-customer-payment-profile" name="textarea-php-create-customer-payment-profile" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-customer-payment-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-customer-payment-profile"></div>
<div id="showCode-cs-create-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-payment-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-create-customer-payment-profile" name="textarea-cs-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-customer-payment-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-customer-payment-profile"></div>
<div id="showCode-java-create-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-payment-profile"></a>
</p>
<textarea class="java" id="textarea-java-create-customer-payment-profile" name="textarea-java-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-customer-payment-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-customer-payment-profile"></div>
<div id="showCode-rb-create-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-payment-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-customer-payment-profile" name="textarea-rb-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-customer-payment-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-customer-payment-profile"></div>
<div id="showCode-py-create-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-payment-profile"></a>
</p>
<textarea class="python" id="textarea-py-create-customer-payment-profile" name="textarea-py-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-customer-payment-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-customer-payment-profile"></div>
<div id="showCode-js-create-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-payment-profile"></a>
</p>
<textarea class="node" id="textarea-js-create-customer-payment-profile" name="textarea-js-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-customer-payment-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-customer-payment-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-customer-payment-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-customer-payment-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-customer-payment-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-customer-payment-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-customer-payment-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-customer-payment-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-customer-payment-profile"></div>
<div id="showCode-php-create-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-customer-payment-profile" name="textarea-php-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-customer-payment-profile"></div>
<div id="showCode-cs-create-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-customer-payment-profile" name="textarea-cs-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-customer-payment-profile"></div>
<div id="showCode-java-create-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-customer-payment-profile" name="textarea-java-create-customer-payment-profile" cols="80" rows="6"></textarea>
 </div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-customer-payment-profile"></div>
<div id="showCode-rb-create-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-customer-payment-profile" name="textarea-rb-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-customer-payment-profile"></div>
<div id="showCode-py-create-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-customer-payment-profile" name="textarea-py-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-customer-payment-profile"></div>
<div id="showCode-js-create-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-payment-profile"></a>
</p>
 <textarea class="sample-code" id="textarea-js-create-customer-payment-profile" name="textarea-js-create-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-customer-payment-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-payment-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-customer-payment-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-customer-payment-profile">
<div class="panel-body">
<p><em>createCustomerPaymentProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>paymentProfile</td>
<td><strong>Required.</strong><br />
Contains payment information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerType</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
 </td>
<td><div><code>creditCard</code>, <code>bankAccount</code>, or <code>opaqueData</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Contains credit card payment information for the payment profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card number.<br /><br />
</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
<strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s credit card expiration date.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td>The customer's card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br />The <code>cardCode</code> field is only used for validation and is not stored in the customer profile. It should only be used when submitting <code>validationMode</code> with a value of <code>testMode</code> or <code>liveMode</code>.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code> for recurring charges.</td>
<td><div>Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
 </td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br /><p>For Apple Pay, use <code>COMMON.APPLE.INAPP.PAYMENT</code>.</p><br /><br /><p>For Android Pay, use <code>COMMON.ANDROID.INAPP.PAYMENT</code>.</p><br /><br /><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
<p>The payment gateway expects the encrypted payment data and meta data for the encryption keys.</p></td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>defaultPaymentProfile</td>
<td>When set to true, this field designates the payment profile as the default payment profile.<br /><br />
When a default payment profile has been designated, you can use <a href="https://developer.authorize.net/api/reference/#customer-profiles-get-customer-payment-profile">getCustomerPaymentProfileRequest</a> with <code>customerProfileId</code> as the only parameter.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>validationMode</td>
<td>Indicates the processing mode for the request. If the customer profile contains no payment data, this field should not be sent.<br /><br />
</td>
 <td><div>String.<br /><br />Use <code>testMode</code> to perform a Luhn mod-10 check on the card number, without further validation. Use <code>liveMode</code> to submit a zero-dollar or one-cent transaction (depending on card type and processor support) to confirm the card number belongs to an active credit or debit account.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-payment-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-customer-payment-profile">
<div class="panel-body">
<p><em>createCustomerPaymentProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>validationDirectResponse</td>
<td>Contains detailed information about the result of the transaction.<br /><br />
This output is present only if the <code>validationMode</code> input parameter is passed with a value of <code>testMode</code> or <code>liveMode</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-get-customer-payment-profile">Get Customer Payment Profile</h3>
<p>Use this function to retrieve the details of a customer payment profile associated with an existing customer profile.<br /><br /><b>Note:</b> If the payment profile has previously been set as the default payment profile, you can submit this request using <code>customerProfileId</code> as the only parameter. Submitting this request with only the customer profile ID will cause the information for the default payment profile to be returned if a default payment profile has been previously designated. If no payment profile has been designated as the default payment profile, failing to specify a payment profile will result in an error.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-customer-payment-profileTryIt" href="#console-get-customer-payment-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-payment-profilephp" href="#php-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-payment-profilecs" href="#cs-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-payment-profilejava" href="#java-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-payment-profilerb" href="#ruby-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-payment-profilepy" href="#python-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-payment-profilejs" href="#node-get-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-payment-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-payment-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-payment-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-payment-profile" spellcheck="false" class="XML XMLRequest">&lt;getCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;includeIssuerInfo&gt;true&lt;/includeIssuerInfo&gt;
&lt;/getCustomerPaymentProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-payment-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;includeIssuerInfo&gt;true&lt;/includeIssuerInfo&gt;
&lt;/getCustomerPaymentProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-payment-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;getCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
        &quot;includeIssuerInfo&quot;: &quot;true&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-payment-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
        &quot;includeIssuerInfo&quot;: &quot;true&quot;
    }
}</code>
                                                        </pre>
 <p class="rightshift">
<button type="button" id="btnSend-get-customer-payment-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-payment-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-customer-payment-profile"></span>


<div class="errorDetails" id="detailsDiv-get-customer-payment-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-payment-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;paymentProfile&gt;
      &lt;customerType&gt;individual&lt;/customerType&gt;
      &lt;billTo&gt;
         &lt;firstName&gt;John&lt;/firstName&gt;
         &lt;lastName&gt;Smith&lt;/lastName&gt;
      &lt;/billTo&gt;
      &lt;customerProfileId&gt;39598611&lt;/customerProfileId&gt;
      &lt;customerPaymentProfileId&gt;35936989&lt;/customerPaymentProfileId&gt;
      &lt;payment&gt;
         &lt;creditCard&gt;
            &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
            &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
            &lt;cardType&gt;Visa&lt;/cardType&gt;
            &lt;issuerNumber&gt;411111&lt;/issuerNumber&gt;
            &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
         &lt;/creditCard&gt;
      &lt;/payment&gt;
      &lt;subscriptionIds&gt;
         &lt;subscriptionId&gt;3078153&lt;/subscriptionId&gt;
         &lt;subscriptionId&gt;3078154&lt;/subscriptionId&gt;
      &lt;/subscriptionIds&gt;
   &lt;/paymentProfile&gt;
&lt;/getCustomerPaymentProfileResponse&gt;
</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-payment-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;paymentProfile&gt;
      &lt;customerType&gt;individual&lt;/customerType&gt;
      &lt;billTo&gt;
         &lt;firstName&gt;John&lt;/firstName&gt;
         &lt;lastName&gt;Smith&lt;/lastName&gt;
      &lt;/billTo&gt;
      &lt;customerProfileId&gt;39598611&lt;/customerProfileId&gt;
      &lt;customerPaymentProfileId&gt;35936989&lt;/customerPaymentProfileId&gt;
      &lt;payment&gt;
         &lt;creditCard&gt;
            &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
            &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
            &lt;cardType&gt;Visa&lt;/cardType&gt;
            &lt;issuerNumber&gt;411111&lt;/issuerNumber&gt;
            &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
         &lt;/creditCard&gt;
      &lt;/payment&gt;
      &lt;subscriptionIds&gt;
         &lt;subscriptionId&gt;3078153&lt;/subscriptionId&gt;
         &lt;subscriptionId&gt;3078154&lt;/subscriptionId&gt;
      &lt;/subscriptionIds&gt;
   &lt;/paymentProfile&gt;
&lt;/getCustomerPaymentProfileResponse&gt;
</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-payment-profile">{
    &quot;paymentProfile&quot;: {
        &quot;customerProfileId&quot;: &quot;39598611&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;35936989&quot;,
        &quot;payment&quot;: {
            &quot;creditCard&quot;: {
                &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
                &quot;expirationDate&quot;: &quot;XXXX&quot;,
                &quot;cardType&quot;: &quot;Visa&quot;,
                &quot;issuerNumber&quot;: &quot;411111&quot;,
                &quot;isPaymentToken&quot;: true
            }
        },
        &quot;subscriptionIds&quot;: [
            &quot;3078153&quot;,
            &quot;3078154&quot;
        ],
        &quot;customerType&quot;: &quot;individual&quot;,
        &quot;billTo&quot;: {
            &quot;firstName&quot;: &quot;John&quot;,
            &quot;lastName&quot;: &quot;Smith&quot;
        }
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
               &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-payment-profile" style="display: none !important">{
    &quot;paymentProfile&quot;: {
        &quot;customerProfileId&quot;: &quot;39598611&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;35936989&quot;,
        &quot;payment&quot;: {
            &quot;creditCard&quot;: {
                &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
                &quot;expirationDate&quot;: &quot;XXXX&quot;,
                &quot;cardType&quot;: &quot;Visa&quot;,
                &quot;issuerNumber&quot;: &quot;411111&quot;,
                &quot;isPaymentToken&quot;: true
            }
        },
        &quot;subscriptionIds&quot;: [
            &quot;3078153&quot;,
            &quot;3078154&quot;
        ],
        &quot;customerType&quot;: &quot;individual&quot;,
        &quot;billTo&quot;: {
            &quot;firstName&quot;: &quot;John&quot;,
            &quot;lastName&quot;: &quot;Smith&quot;
        }
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
               &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                </pre>
<div id="txtRespLoader-get-customer-payment-profile" class="loaderContainer">
 <div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-customer-payment-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-payment-profile"></div>
<div id="showCode-php-get-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-payment-profile"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-payment-profile" name="textarea-php-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-payment-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-payment-profile"></div>
<div id="showCode-cs-get-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-payment-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-payment-profile" name="textarea-cs-get-customer-payment-profile" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-payment-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-payment-profile"></div>
<div id="showCode-java-get-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-payment-profile"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-payment-profile" name="textarea-java-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-payment-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-payment-profile"></div>
<div id="showCode-rb-get-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-payment-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-payment-profile" name="textarea-rb-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="python-get-customer-payment-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-payment-profile"></div>
<div id="showCode-py-get-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-payment-profile"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-payment-profile" name="textarea-py-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-payment-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-payment-profile"></div>
<div id="showCode-js-get-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-payment-profile"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-payment-profile" name="textarea-js-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
 </div>
<div class="tab-pane fade" id="sample-get-customer-payment-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-payment-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-payment-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-payment-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-payment-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-payment-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-payment-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-payment-profile"></div>
<div id="showCode-php-get-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-customer-payment-profile" name="textarea-php-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-payment-profile"></div>
<div id="showCode-cs-get-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-payment-profile" name="textarea-cs-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-payment-profile"></div>
<div id="showCode-java-get-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-payment-profile" name="textarea-java-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-payment-profile"></div>
<div id="showCode-rb-get-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-payment-profile" name="textarea-rb-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-payment-profile"></div>
<div id="showCode-py-get-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-payment-profile" name="textarea-py-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-payment-profile"></div>
<div id="showCode-js-get-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-payment-profile" name="textarea-js-get-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-payment-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-payment-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-payment-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-payment-profile">
<div class="panel-body">
<p><em>getCustomerPaymentProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
 <tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
 Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileId</td>
<td>Payment gateway-assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string..<br /><br />
</div></td>
</tr>
<tr>
<td>unmaskExpirationDate</td>
<td>Pass true to return an unmasked expiration date in the response.<br /><br />
Default is <code>false</code>.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>includeIssuerInfo</td>
<td>When set to true, this optional field requests that the issuer number <a href="https://www.iso.org/standard/70484.html">(IIN)</a> be included in the response, in the field <code>issuerNumber</code>.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-payment-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-payment-profile">
<div class="panel-body">
<p><em>getCustomerPaymentProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>paymentProfile</td>
<td>Contains payment information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerType</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
 <td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div>Use either <code>creditCard</code> or <code>bankAccount</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Contains credit card payment information for the payment profile.<br /><br />
For information about the fields in this object, see the <code>creditCard</code> object in <a href="#customer-profiles-get-customer-payment-profile"><code>getCustomerPaymentProfileResponse</code></a></td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>The customer’s masked credit card number.<br /><br />
All sensitive payment information in the output is masked.</td>
<td><div>String.<br /><br><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>The expiration date for the customer’s credit card.<br /><br />
All sensitive payment information in the output is masked unless you set <code>unmaskExpirationDate</code> to <code>true</code> in the request. When masked, <code>expirationDate<code> will return as "XXXX".</td>
<td><div>String, 7 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='threeBullet'>cardType</td>
<td>Type of credit card.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>AmericanExpress</code>, <code>Discover</code>, <code>JCB</code>, or <code>DinersClub</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>issuerNumber</td>
<td>Unique identifier <a href="https://www.iso.org/standard/70484.html">(IIN)</a> for the issuer of the card. This element is only returned if you set the <code>includeIssuerInfo</code> field to true in the request.<br /><br />
</td>
<td><div>Numeric string, six digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>isPaymentToken</td>
<td>Indicates whether the payment method used an encrypted token.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
 </div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code> for recurring charges.</td>
<td><div>Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>. <br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>subscriptionIds</td>
<td>Contains one or more <code>subscriptionId</code> fields.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>subscriptionId</td>
<td>Contains a subscription ID associated with this customer.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
 </div>
</div>
<h3 id="customer-profiles-get-customer-payment-profile-list">Get Customer Payment Profile List</h3>
<p>Use this function to get list of all the payment profiles that match the submitted searchType. You can use this function to get the list of all cards expiring this month. The function will return up to 10 results in a single request. Paging options can be sent to limit the result set or to retrieve additional results beyond the 10 item limit. You can add the sorting and paging options shown below to customize the result set.
</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-customer-payment-profile-listTryIt" href="#console-get-customer-payment-profile-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-payment-profile-listphp" href="#php-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-payment-profile-listcs" href="#cs-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-payment-profile-listjava" href="#java-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-payment-profile-listrb" href="#ruby-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-payment-profile-listpy" href="#python-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-payment-profile-listjs" href="#node-get-customer-payment-profile-list" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-payment-profile-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-payment-profile-list">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-payment-profile-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-payment-profile-list" spellcheck="false" class="XML XMLRequest">&lt;getCustomerPaymentProfileListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;searchType&gt;cardsExpiringInMonth&lt;/searchType&gt;
  &lt;month&gt;2020-12&lt;/month&gt;
  &lt;sorting&gt;
  	&lt;orderBy&gt;id&lt;/orderBy&gt;
    &lt;orderDescending&gt;false&lt;/orderDescending&gt;
  &lt;/sorting&gt;
  &lt;paging&gt;
    &lt;limit&gt;10&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getCustomerPaymentProfileListRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-payment-profile-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getCustomerPaymentProfileListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;searchType&gt;cardsExpiringInMonth&lt;/searchType&gt;
  &lt;month&gt;2020-12&lt;/month&gt;
  &lt;sorting&gt;
  	&lt;orderBy&gt;id&lt;/orderBy&gt;
    &lt;orderDescending&gt;false&lt;/orderDescending&gt;
  &lt;/sorting&gt;
  &lt;paging&gt;
    &lt;limit&gt;10&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getCustomerPaymentProfileListRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-payment-profile-list" spellcheck="false" class="JSON JSONRequest">{ 
 	 &quot;getCustomerPaymentProfileListRequest&quot;: { 
  	 	 &quot;merchantAuthentication&quot;: { 
 	 	 	 &quot;name&quot;: &quot;API_LOGIN_ID&quot;, 
 	 	 	 &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot; 
 	 	 }, 
 	 	 &quot;searchType&quot;: &quot;cardsExpiringInMonth&quot;, 
 	 	 &quot;month&quot;: &quot;2020-12&quot;, 
 	 	 &quot;sorting&quot;: { 
 	 	 	 &quot;orderBy&quot;: &quot;id&quot;, 
 	 	 	 &quot;orderDescending&quot;: &quot;false&quot; 
 	 	 }, 
 	 	 &quot;paging&quot;: { 
  	 	 	 &quot;limit&quot;: &quot;10&quot;, 
 	 	 	 &quot;offset&quot;: &quot;1&quot; 
 	 	 } 
 	 } 
 }</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-payment-profile-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{ 
 	 &quot;getCustomerPaymentProfileListRequest&quot;: { 
  	 	 &quot;merchantAuthentication&quot;: { 
 	 	 	 &quot;name&quot;: &quot;API_LOGIN_ID&quot;, 
 	 	 	 &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot; 
 	 	 }, 
 	 	 &quot;searchType&quot;: &quot;cardsExpiringInMonth&quot;, 
 	 	 &quot;month&quot;: &quot;2020-12&quot;, 
 	 	 &quot;sorting&quot;: { 
 	 	 	 &quot;orderBy&quot;: &quot;id&quot;, 
 	 	 	 &quot;orderDescending&quot;: &quot;false&quot; 
 	 	 }, 
 	 	 &quot;paging&quot;: { 
  	 	 	 &quot;limit&quot;: &quot;10&quot;, 
 	 	 	 &quot;offset&quot;: &quot;1&quot; 
 	 	 } 
 	 } 
 }</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-customer-payment-profile-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-payment-profile-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-customer-payment-profile-list"></span>


<div class="errorDetails" id="detailsDiv-get-customer-payment-profile-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-payment-profile-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;getCustomerPaymentProfileListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;totalNumInResultSet&gt;
    1
  &lt;/totalNumInResultSet&gt;
  &lt;paymentProfiles&gt;
    &lt;paymentProfile&gt;
      &lt;customerPaymentProfileId&gt;
        1051079
      &lt;/customerPaymentProfileId&gt;
      &lt;customerProfileId&gt;
        918787
      &lt;/customerProfileId&gt;
      &lt;billTo&gt;
        &lt;firstName&gt;
          John
        &lt;/firstName&gt;
        &lt;lastName&gt;
          Smith
        &lt;/lastName&gt;
        &lt;company /&gt;
        &lt;city /&gt;
        &lt;state /&gt;
        &lt;zip /&gt;
        &lt;country /&gt;
      &lt;/billTo&gt;
      &lt;payment&gt;
        &lt;creditCard&gt;
          &lt;cardNumber&gt;
            XXXX1111
          &lt;/cardNumber&gt;
          &lt;expirationDate&gt;
            XXXX
          &lt;/expirationDate&gt;
        &lt;/creditCard&gt;
      &lt;/payment&gt;
    &lt;/paymentProfile&gt;
    &lt;paymentProfile&gt;
      &lt;customerPaymentProfileId&gt;40251535&lt;/customerPaymentProfileId&gt;
      &lt;customerProfileId&gt;40228614&lt;/customerProfileId&gt;
      &lt;billTo&gt;
        &lt;firstName&gt;Cheena&lt;/firstName&gt;
        &lt;lastName&gt;Gupta&lt;/lastName&gt;
        &lt;address&gt;Hemdal avenue, Funf Strass, Reichteig&lt;/address&gt;
        &lt;city&gt;Kaiserslautern&lt;/city&gt;
        &lt;state&gt;Deutschland&lt;/state&gt;
        &lt;zip&gt;560102&lt;/zip&gt;
      &lt;/billTo&gt;
      &lt;payment&gt;
        &lt;creditCard&gt;
          &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
          &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
          &lt;cardType&gt;Visa&lt;/cardType&gt;
          &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
        &lt;/creditCard&gt;
     &lt;/payment&gt;
  &lt;/paymentProfiles&gt;
&lt;/getCustomerPaymentProfileListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-payment-profile-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;getCustomerPaymentProfileListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;totalNumInResultSet&gt;
    1
  &lt;/totalNumInResultSet&gt;
  &lt;paymentProfiles&gt;
    &lt;paymentProfile&gt;
      &lt;customerPaymentProfileId&gt;
        1051079
      &lt;/customerPaymentProfileId&gt;
      &lt;customerProfileId&gt;
        918787
      &lt;/customerProfileId&gt;
      &lt;billTo&gt;
        &lt;firstName&gt;
          John
        &lt;/firstName&gt;
        &lt;lastName&gt;
          Smith
        &lt;/lastName&gt;
        &lt;company /&gt;
        &lt;city /&gt;
        &lt;state /&gt;
        &lt;zip /&gt;
        &lt;country /&gt;
      &lt;/billTo&gt;
      &lt;payment&gt;
        &lt;creditCard&gt;
          &lt;cardNumber&gt;
            XXXX1111
          &lt;/cardNumber&gt;
          &lt;expirationDate&gt;
            XXXX
          &lt;/expirationDate&gt;
        &lt;/creditCard&gt;
      &lt;/payment&gt;
    &lt;/paymentProfile&gt;
    &lt;paymentProfile&gt;
      &lt;customerPaymentProfileId&gt;40251535&lt;/customerPaymentProfileId&gt;
      &lt;customerProfileId&gt;40228614&lt;/customerProfileId&gt;
      &lt;billTo&gt;
        &lt;firstName&gt;Cheena&lt;/firstName&gt;
        &lt;lastName&gt;Gupta&lt;/lastName&gt;
        &lt;address&gt;Hemdal avenue, Funf Strass, Reichteig&lt;/address&gt;
        &lt;city&gt;Kaiserslautern&lt;/city&gt;
        &lt;state&gt;Deutschland&lt;/state&gt;
        &lt;zip&gt;560102&lt;/zip&gt;
      &lt;/billTo&gt;
      &lt;payment&gt;
        &lt;creditCard&gt;
          &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
          &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
          &lt;cardType&gt;Visa&lt;/cardType&gt;
          &lt;isPaymentToken&gt;true&lt;/isPaymentToken&gt;
        &lt;/creditCard&gt;
     &lt;/payment&gt;
  &lt;/paymentProfiles&gt;
&lt;/getCustomerPaymentProfileListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-payment-profile-list">{ 
 	 &quot;getCustomerPaymentProfileListResponse&quot;: { 
 	 	 &quot;messages&quot;: { 
 	 	 	 &quot;resultCode&quot;: &quot;Ok&quot;, 
 	 	 	 &quot;message&quot;: { 
 	 	 	 	&quot;code&quot;: &quot;I00001&quot;, 
 	 	 	 	&quot;text&quot;: &quot;Successful.&quot; 
 	 	 	 } 
 	 	}, 
 	 	 &quot;totalNumInResultSet&quot;: &quot;1&quot;, 
 	 	 &quot;paymentProfiles&quot;: { 
 	 	 	 &quot;paymentProfile&quot;: { 
 	 	 	 	&quot;customerPaymentProfileId&quot;: &quot;1051079&quot;, 
 	 	 	 	 &quot;customerProfileId&quot;: &quot;918787&quot;, 
 	 	 	 	 &quot;billTo&quot;: { 
 	 	 	 	 	 &quot;firstName&quot;: &quot;John&quot;, 
 	 	 	 	 	 &quot;lastName&quot;: &quot;Smith&quot; 
 	 	 	 	 }, 
 	 	 	 	 &quot;payment&quot;: { 
 	 	 	 	 	 &quot;creditCard&quot;: { 
 	 	 	 	 	 	&quot;cardNumber&quot;: &quot;XXXX1111&quot;, 
 	 	 	 	 	 	 &quot;expirationDate&quot;: &quot;XXXX&quot; 
 	 	 	 	 	 } 
 	 	 	 	 } 
 	 	 	} 
 	 	 } 
 	} 
 }</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-payment-profile-list" style="display: none !important">{ 
 	 &quot;getCustomerPaymentProfileListResponse&quot;: { 
 	 	 &quot;messages&quot;: { 
 	 	 	 &quot;resultCode&quot;: &quot;Ok&quot;, 
 	 	 	 &quot;message&quot;: { 
 	 	 	 	&quot;code&quot;: &quot;I00001&quot;, 
 	 	 	 	&quot;text&quot;: &quot;Successful.&quot; 
 	 	 	 } 
 	 	}, 
 	 	 &quot;totalNumInResultSet&quot;: &quot;1&quot;, 
 	 	 &quot;paymentProfiles&quot;: { 
 	 	 	 &quot;paymentProfile&quot;: { 
 	 	 	 	&quot;customerPaymentProfileId&quot;: &quot;1051079&quot;, 
 	 	 	 	 &quot;customerProfileId&quot;: &quot;918787&quot;, 
 	 	 	 	 &quot;billTo&quot;: { 
 	 	 	 	 	 &quot;firstName&quot;: &quot;John&quot;, 
 	 	 	 	 	 &quot;lastName&quot;: &quot;Smith&quot; 
 	 	 	 	 }, 
 	 	 	 	 &quot;payment&quot;: { 
 	 	 	 	 	 &quot;creditCard&quot;: { 
 	 	 	 	 	 	&quot;cardNumber&quot;: &quot;XXXX1111&quot;, 
 	 	 	 	 	 	 &quot;expirationDate&quot;: &quot;XXXX&quot; 
 	 	 	 	 	 } 
 	 	 	 	 } 
 	 	 	} 
 	 	 } 
 	} 
 }</code>
                                                </pre>
<div id="txtRespLoader-get-customer-payment-profile-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-customer-payment-profile-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-payment-profile-list"></div>
<div id="showCode-php-get-customer-payment-profile-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-payment-profile-list"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-payment-profile-list" name="textarea-php-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-payment-profile-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-payment-profile-list"></div>
<div id="showCode-cs-get-customer-payment-profile-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-payment-profile-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-payment-profile-list" name="textarea-cs-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-payment-profile-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-payment-profile-list"></div>
<div id="showCode-java-get-customer-payment-profile-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-payment-profile-list"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-payment-profile-list" name="textarea-java-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-payment-profile-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-payment-profile-list"></div>
<div id="showCode-rb-get-customer-payment-profile-list">
 <p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-payment-profile-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-payment-profile-list" name="textarea-rb-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-customer-payment-profile-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-payment-profile-list"></div>
<div id="showCode-py-get-customer-payment-profile-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-payment-profile-list"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-payment-profile-list" name="textarea-py-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-payment-profile-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-payment-profile-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-payment-profile-list"></div>
<div id="showCode-js-get-customer-payment-profile-list">
 <p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-payment-profile-list"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-payment-profile-list" name="textarea-js-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-customer-payment-profile-list">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-payment-profile-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-payment-profile-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-payment-profile-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-payment-profile-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-payment-profile-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-payment-profile-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-payment-profile-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-payment-profile-list"></div>
<div id="showCode-php-get-customer-payment-profile-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-payment-profile-list"></a>
</p>
 <textarea class="sample-code" id="textarea-php-get-customer-payment-profile-list" name="textarea-php-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-payment-profile-list"></div>
<div id="showCode-cs-get-customer-payment-profile-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-payment-profile-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-payment-profile-list" name="textarea-cs-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-payment-profile-list"></div>
<div id="showCode-java-get-customer-payment-profile-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-payment-profile-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-payment-profile-list" name="textarea-java-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-payment-profile-list"></div>
<div id="showCode-rb-get-customer-payment-profile-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-payment-profile-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-payment-profile-list" name="textarea-rb-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-payment-profile-list"></div>
<div id="showCode-py-get-customer-payment-profile-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-payment-profile-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-payment-profile-list" name="textarea-py-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-payment-profile-list"></div>
<div id="showCode-js-get-customer-payment-profile-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-payment-profile-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-payment-profile-list" name="textarea-js-get-customer-payment-profile-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-payment-profile-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-payment-profile-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-payment-profile-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-payment-profile-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-payment-profile-list">
<div class="panel-body">
<p><em>getCustomerPaymentProfileListRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>searchType</td>
<td><strong>Required.</strong><br />
Specifies how to filter search results.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>cardsExpiringInMonth</code> to filter profiles with cards that expire in a given month.<br /><br />
</div></td>
</tr>
<tr>
<td>month</td>
<td><strong>Required.</strong><br />
The expiration month for the type of payment profiles.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
<td>Order of results in response.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>id</code> to sort results by payment profile ID.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
<td>Sort the results in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 payment profiles per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
 For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 profiles, setting <code>offset</code> to 2 will return the second 100 profiles, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-payment-profile-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-payment-profile-list">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-payment-profile-list">
<div class="panel-body">
<p><em>getCustomerPaymentProfileListResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>paymentProfiles</td>
<td>Contains one or more instances of <code>paymentProfile</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>paymentProfile</td>
<td>Contains the results of one query.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='twoBullet'>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you previously designated this profile as the default payment profile.</td>
<td><div>true<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td><strong>Required.</strong><br />
Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td><strong>Required.</strong><br />
Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
 Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>payment</td>
<td>Contains either a <code>creditCard</code> or <code>BankAccount</code> element and its sub-elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>creditCard</td>
<td>Contains credit card information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>cardNumber</td>
<td><strong>Required.</strong><br />
The customer’s credit card number.<br /><br />
This is sensitive cardholder information and must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br />For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 13-16 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>expirationDate</td>
<td><strong>Required.</strong><br />
The customer’s credit card expiration date.<br /><br />
This is sensitive cardholder information and must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br />For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>cardType</td>
<td>The customer’s card type.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>isPaymentToken</td>
<td>Indicates whether the payment method used an encrypted token.<br /><br />
</td>
<td><div>Boolean.<br /><br />EIther <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>cardArt</td>
<td>The display parameters for the customer's card type.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='fiveBullet'>cardBrand</td>
<td>The customer’s card brand.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>cardImageHeight</td>
<td>The height of customer’s card image, in pixels<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>cardImageUrl</td>
<td>The url of customer’s card image.<br /><br />
</td>
<td><div>String.<br /><br />A valid and well-formed URL.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>cardImageWidth</td>
<td>The height of customer’s card image, in pixels.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='fiveBullet'>cardType</td>
<td>The customer’s card type.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. <br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>routingNumber</td>
<td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
Do not use <code>TEL</code>, <code>ARC</code>, or <code>BOC</code> for recurring transactions.<br /><br />The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, or <code>CCD</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
 </tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-validate-customer-payment-profile">Validate Customer Payment Profile</h3>
<p>Use this function to generate a test transaction that verifies an existing customer payment profile. No customer receipt emails are sent when the validateCustomerPaymentProfileRequest function is called.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="validate-customer-payment-profileTryIt" href="#console-validate-customer-payment-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="validate-customer-payment-profilephp" href="#php-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="validate-customer-payment-profilecs" href="#cs-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="validate-customer-payment-profilejava" href="#java-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="validate-customer-payment-profilerb" href="#ruby-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="validate-customer-payment-profilepy" href="#python-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="validate-customer-payment-profilejs" href="#node-validate-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-validate-customer-payment-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="validate-customer-payment-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="validate-customer-payment-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-validate-customer-payment-profile" spellcheck="false" class="XML XMLRequest">&lt;validateCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/validateCustomerPaymentProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-validate-customer-payment-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;validateCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/validateCustomerPaymentProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-validate-customer-payment-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;validateCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
        &quot;validationMode&quot;: &quot;liveMode&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-validate-customer-payment-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;validateCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;,
        &quot;validationMode&quot;: &quot;liveMode&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-validate-customer-payment-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-validate-customer-payment-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>

<div>
<span id="spnStatusCode-validate-customer-payment-profile"></span>


<div class="errorDetails" id="detailsDiv-validate-customer-payment-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-validate-customer-payment-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;validateCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;directResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000003,none,Test transaction for ValidateCustomerPaymentProfile.,0.01,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,mark@example.com,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,0.00,0.00,0.00,,none,
D18EB6B211FE0BBF556B271FDA6F92EE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
  &lt;/directResponse&gt;
&lt;/validateCustomerPaymentProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-validate-customer-payment-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;validateCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;directResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000003,none,Test transaction for ValidateCustomerPaymentProfile.,0.01,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,mark@example.com,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,0.00,0.00,0.00,,none,
D18EB6B211FE0BBF556B271FDA6F92EE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
  &lt;/directResponse&gt;
&lt;/validateCustomerPaymentProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-validate-customer-payment-profile">{
    &quot;directResponse&quot;: &quot;1,1,1,This transaction has been approved.,8F14E1,Y,2149186958,none,Test transaction for ValidateCustomerPaymentProfile.,0.00,CC,auth_only,ydidgxugkfsjqpdmxwby,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,enitsigjfk@authorize.net,,,,,,,,,0.00,0.00,0.00,FALSE,none,32CB5A012BEC7145759EDC186968351A,M,8,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-validate-customer-payment-profile" style="display: none !important">{
    &quot;directResponse&quot;: &quot;1,1,1,This transaction has been approved.,8F14E1,Y,2149186958,none,Test transaction for ValidateCustomerPaymentProfile.,0.00,CC,auth_only,ydidgxugkfsjqpdmxwby,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,enitsigjfk@authorize.net,,,,,,,,,0.00,0.00,0.00,FALSE,none,32CB5A012BEC7145759EDC186968351A,M,8,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-validate-customer-payment-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-validate-customer-payment-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-validate-customer-payment-profile"></div>
<div id="showCode-php-validate-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-validate-customer-payment-profile"></a>
</p>
<textarea class="php" id="textarea-php-validate-customer-payment-profile" name="textarea-php-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-validate-customer-payment-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-validate-customer-payment-profile"></div>
 <div id="showCode-cs-validate-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-validate-customer-payment-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-validate-customer-payment-profile" name="textarea-cs-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-validate-customer-payment-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-validate-customer-payment-profile"></div>
<div id="showCode-java-validate-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-validate-customer-payment-profile"></a>
</p>
<textarea class="java" id="textarea-java-validate-customer-payment-profile" name="textarea-java-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-validate-customer-payment-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-validate-customer-payment-profile"></div>
 <div id="showCode-rb-validate-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-validate-customer-payment-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-validate-customer-payment-profile" name="textarea-rb-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-validate-customer-payment-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-validate-customer-payment-profile"></div>
<div id="showCode-py-validate-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-validate-customer-payment-profile"></a>
</p>
<textarea class="python" id="textarea-py-validate-customer-payment-profile" name="textarea-py-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-validate-customer-payment-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="validate-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-validate-customer-payment-profile"></div>
 <div id="showCode-js-validate-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-validate-customer-payment-profile"></a>
</p>
<textarea class="node" id="textarea-js-validate-customer-payment-profile" name="textarea-js-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-validate-customer-payment-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="validate-customer-payment-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="validate-customer-payment-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="validate-customer-payment-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="validate-customer-payment-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="validate-customer-payment-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="validate-customer-payment-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-validate-customer-payment-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-validate-customer-payment-profile"></div>
<div id="showCode-php-validate-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-validate-customer-payment-profile"></a>
 </p>
<textarea class="sample-code" id="textarea-php-validate-customer-payment-profile" name="textarea-php-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-validate-customer-payment-profile"></div>
<div id="showCode-cs-validate-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-validate-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-validate-customer-payment-profile" name="textarea-cs-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-validate-customer-payment-profile"></div>
<div id="showCode-java-validate-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-validate-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-validate-customer-payment-profile" name="textarea-java-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-validate-customer-payment-profile"></div>
<div id="showCode-rb-validate-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-validate-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-validate-customer-payment-profile" name="textarea-rb-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-validate-customer-payment-profile"></div>
<div id="showCode-py-validate-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-validate-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-validate-customer-payment-profile" name="textarea-py-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-validate-customer-payment-profile"></div>
<div id="showCode-js-validate-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-validate-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-validate-customer-payment-profile" name="textarea-js-validate-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-validate-customer-payment-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
 <div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-validate-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-validate-customer-payment-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-validate-customer-payment-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-validate-customer-payment-profile">
<div class="panel-body">
<p><em>validateCustomerPaymentProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileId</td>
<td>Payment gateway-assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerShippingAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
If customerShippingAddressId is not passed, shipping information will not be included with the transaction.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>cardCode</td>
<td><strong>Conditional.</strong><br /><br />Applies to Card Not Present transactions only.<br /><br />The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.<br /><br /> For more information about PCI, please refer to the Standards, Compliance and Security developer training video at https://developer.authorize.net/training.</td>
<td><div>Numeric string, 3-4 digits.<br /><br />
</div></td>
</tr>
<tr>
<td>validationMode</td>
 <td>Indicates the processing mode for the request. If the customer profile contains no payment data, this field should not be sent.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>testMode</code> to perform a Luhn mod-10 check on the card number, without further validation. Use <code>liveMode</code> to submit a zero-dollar or one-cent transaction (depending on card type and processor support) to confirm the card number belongs to an active credit or debit account.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-validate-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-validate-customer-payment-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-validate-customer-payment-profile">
<div class="panel-body">
<p><em>validateCustomerPaymentProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>directResponse</td>
<td>Contains detailed information about the result of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-update-customer-payment-profile">Update Customer Payment Profile</h3>
<p>Use this function to update a payment profile for an existing customer profile.<br /><br /><b>Note:</b> If some fields in this request are not submitted or are submitted with a blank value, the values in the original profile are removed. As a best practice to prevent this from happening, call <a href="https://developer.authorize.net/api/reference/#customer-profiles-get-customer-payment-profile">getCustomerPaymentProfileRequest</a> to receive all current information including masked payment information. Change the field or fields that you wish to update, and then reuse all the fields you received, with updates, in a call to <a href="https://developer.authorize.net/api/reference/#customer-profiles-update-customer-payment-profile">updateCustomerPaymentProfileRequest</a>.<br /><br />To test the validity of new payment information, call <a href="https://developer.authorize.net/api/reference/#customer-profiles-validate-customer-payment-profile">validateCustomerPaymentProfileRequest</a> after successfully updating the payment profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="update-customer-payment-profileTryIt" href="#console-update-customer-payment-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="update-customer-payment-profilephp" href="#php-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="update-customer-payment-profilecs" href="#cs-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="update-customer-payment-profilejava" href="#java-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="update-customer-payment-profilerb" href="#ruby-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="update-customer-payment-profilepy" href="#python-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="update-customer-payment-profilejs" href="#node-update-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-update-customer-payment-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="update-customer-payment-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="update-customer-payment-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-update-customer-payment-profile" spellcheck="false" class="XML XMLRequest">&lt;updateCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;paymentProfile&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;company&gt;&lt;/company&gt;
      &lt;address&gt;123 Main St.&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
      &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;/billTo&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2026-01&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;defaultPaymentProfile&gt;false&lt;/defaultPaymentProfile&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;/paymentProfile&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/updateCustomerPaymentProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-update-customer-payment-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;updateCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;paymentProfile&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;company&gt;&lt;/company&gt;
      &lt;address&gt;123 Main St.&lt;/address&gt;
      &lt;city&gt;Bellevue&lt;/city&gt;
      &lt;state&gt;WA&lt;/state&gt;
      &lt;zip&gt;98004&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
      &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;/billTo&gt;
    &lt;payment&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;4111111111111111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;2026-01&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/payment&gt;
    &lt;defaultPaymentProfile&gt;false&lt;/defaultPaymentProfile&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
  &lt;/paymentProfile&gt;
  &lt;validationMode&gt;liveMode&lt;/validationMode&gt;
&lt;/updateCustomerPaymentProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-update-customer-payment-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;updateCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;paymentProfile&quot;: {
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;John&quot;,
                &quot;lastName&quot;: &quot;Doe&quot;,
                &quot;company&quot;: &quot;&quot;,
                &quot;address&quot;: &quot;123 Main St.&quot;,
                &quot;city&quot;: &quot;Bellevue&quot;,
                &quot;state&quot;: &quot;WA&quot;,
                &quot;zip&quot;: &quot;98004&quot;,
                &quot;country&quot;: &quot;USA&quot;,
                &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
                &quot;faxNumber&quot;: &quot;&quot;
            },
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2026-01&quot;
                }
            },
            &quot;defaultPaymentProfile&quot;: false,
            &quot;customerPaymentProfileId&quot;: &quot;20000&quot;
        },
        &quot;validationMode&quot;: &quot;liveMode&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-update-customer-payment-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;updateCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;paymentProfile&quot;: {
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;John&quot;,
                &quot;lastName&quot;: &quot;Doe&quot;,
                &quot;company&quot;: &quot;&quot;,
                &quot;address&quot;: &quot;123 Main St.&quot;,
                &quot;city&quot;: &quot;Bellevue&quot;,
                &quot;state&quot;: &quot;WA&quot;,
                &quot;zip&quot;: &quot;98004&quot;,
                &quot;country&quot;: &quot;USA&quot;,
                &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
                &quot;faxNumber&quot;: &quot;&quot;
            },
            &quot;payment&quot;: {
                &quot;creditCard&quot;: {
                    &quot;cardNumber&quot;: &quot;4111111111111111&quot;,
                    &quot;expirationDate&quot;: &quot;2026-01&quot;
                }
            },
            &quot;defaultPaymentProfile&quot;: false,
            &quot;customerPaymentProfileId&quot;: &quot;20000&quot;
        },
        &quot;validationMode&quot;: &quot;liveMode&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-update-customer-payment-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-update-customer-payment-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-update-customer-payment-profile"></span>


<div class="errorDetails" id="detailsDiv-update-customer-payment-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-update-customer-payment-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerPaymentProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;validationDirectResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,none,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,E42C2F81807AA1B581DEA12EB6727604,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&lt;/validationDirectResponse&gt;
&lt;/updateCustomerPaymentProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-update-customer-payment-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerPaymentProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;validationDirectResponse&gt;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,none,John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,E42C2F81807AA1B581DEA12EB6727604,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&lt;/validationDirectResponse&gt;
&lt;/updateCustomerPaymentProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-update-customer-payment-profile">{
  &quot;validationDirectResponse&quot;: &quot;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,
D18EB6B211FE0BBF556B271FDA6F92EE,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-update-customer-payment-profile" style="display: none !important">{
  &quot;validationDirectResponse&quot;: &quot;1,1,1,This transaction has been approved.,000000,Y,2000000000,none,Test transaction for 
ValidateCustomerPaymentProfile.,0.00,CC,auth_only,custId123,
John,Doe,,123 Main St.,Bellevue,WA,98004,USA,000-000-0000,,email@example.com,,,,,,,,,0.00,0.00,0.00,FALSE,none,
D18EB6B211FE0BBF556B271FDA6F92EE,P,2,,,,,,,,,,,XXXX1111,Visa,,,,,,,,,,,,,,,,,&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                </pre>
<div id="txtRespLoader-update-customer-payment-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-update-customer-payment-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-update-customer-payment-profile"></div>
<div id="showCode-php-update-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-payment-profile"></a>
</p>
<textarea class="php" id="textarea-php-update-customer-payment-profile" name="textarea-php-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-update-customer-payment-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-update-customer-payment-profile"></div>
<div id="showCode-cs-update-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-payment-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-update-customer-payment-profile" name="textarea-cs-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-update-customer-payment-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-update-customer-payment-profile"></div>
<div id="showCode-java-update-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-payment-profile"></a>
</p>
<textarea class="java" id="textarea-java-update-customer-payment-profile" name="textarea-java-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-update-customer-payment-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-update-customer-payment-profile"></div>
<div id="showCode-rb-update-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-payment-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-update-customer-payment-profile" name="textarea-rb-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-update-customer-payment-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-update-customer-payment-profile"></div>
<div id="showCode-py-update-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-payment-profile"></a>
</p>
<textarea class="python" id="textarea-py-update-customer-payment-profile" name="textarea-py-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-update-customer-payment-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="update-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-update-customer-payment-profile"></div>
<div id="showCode-js-update-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-payment-profile"></a>
</p>
<textarea class="node" id="textarea-js-update-customer-payment-profile" name="textarea-js-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-update-customer-payment-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="update-customer-payment-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="update-customer-payment-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="update-customer-payment-profile">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="update-customer-payment-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="update-customer-payment-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="update-customer-payment-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-update-customer-payment-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-update-customer-payment-profile"></div>
<div id="showCode-php-update-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-update-customer-payment-profile" name="textarea-php-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
 <div class="sampleWarningCont" id="warning-cs-update-customer-payment-profile"></div>
<div id="showCode-cs-update-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-update-customer-payment-profile" name="textarea-cs-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-update-customer-payment-profile"></div>
<div id="showCode-java-update-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-update-customer-payment-profile" name="textarea-java-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-update-customer-payment-profile"></div>
<div id="showCode-rb-update-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-update-customer-payment-profile" name="textarea-rb-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
 </div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-update-customer-payment-profile"></div>
<div id="showCode-py-update-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-update-customer-payment-profile" name="textarea-py-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-update-customer-payment-profile"></div>
<div id="showCode-js-update-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-update-customer-payment-profile" name="textarea-js-update-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-update-customer-payment-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-update-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-payment-profile">
Request Field Description
</a>
 </h4>
</div>
<div class="DetailsResponse" id="collapseReq-update-customer-payment-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-update-customer-payment-profile">
<div class="panel-body">
<p><em>updateCustomerPaymentProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
 <td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>paymentProfile</td>
<td>Contains payment information for the customer profile.<br /><br />
Sensitive information that is not being updated can be masked.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerType</td>
<td>Type of customer.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String. Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>If this entire <code>billTo</code> element is not submitted, the original billing information for the profile will stay the same.<br /><br />If you update only one or more elements under <code>billTo</code>, all elements must be submitted with their valid values to prevent the original values from being removed.<br /><br />If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>The customer’s first name.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>The customer’s last name.<br /><br />
 If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>The name of the company associated with the customer, if applicable.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>The customer’s address.<br /><br />
If this field is not submitted in the request, or submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>The city of the customer’s shipping address.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>The state of the customer’s address.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s billing address.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>The country of the customer’s address.<br /><br />
If this field is not submitted in the request, or is submitted with a blank value, the original value will be removed from the profile.</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
Use <code>creditCard</code> if you have payment card information. Use <code>bankAccount</code> if you have bank account information. Use <code>opaqueData</code> if you have encrypted payment data from Accept. Do not include more than one option per request.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td>Contains credit card payment information for the payment profile.<br /><br />
This parameter and its children are required only when the payment profile is credit card.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>The customer’s credit card number.<br /><br />
If the value is masked, the last four digits must match the original value in the profile.<br /><br />If a masked value is submitted, the original value will not be updated.</td>
 <td><div>String, 13 to 16 characters. Masked card numbers accepted.<br /><br />
For example, 4111111111111111 or XXXX1234.</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>The expiration date for the customer’s credit card.<br /><br />
If a masked value is submitted, the original value will not be updated.</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting. For masked expiration dates, use <code>XXXX</code>.<br /><br />
For example, 2020-12 or XXXX.</div></td>
</tr>
<tr>
<td class='threeBullet'>cardCode</td>
<td>The customer’s card code.<br /><br />
The three- or four-digit number on the back of a credit card (on the front for American Express).<br /><br />This element is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br />cardCode is only used for validation and is not stored in the customer profile. It should only be used when submitting <code>validationMode</code> with a value of <code>testMode</code> or <code>liveMode</code>.</td>
<td><div>Numeric string, 3 to 4 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>bankAccount</td>
<td><strong>Conditional.</strong><br />Applies to eCheck.Net transactions only. Used to submit bank account information. If this element is sent, its child elements are required.<br /><br />
For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The type of bank account used for the eCheck.Net transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>checking</code>, <code>savings</code>, or <code>businessChecking</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>routingNumber</td>
 <td>The ABA routing number.<br /><br />
</td>
<td><div>Numeric string, up to 9 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The bank account number.<br /><br />
</td>
<td><div>Numeric string, up to 17 digits.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
The value of <code>accountType</code> must be valid for the <code>echeckType</code> value submitted.<br /><br />For more details please see the <a href="https://developer.authorize.net/api/reference/features/echeck.html">eCheck.Net API Documentation</a>.</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, <code>CCD</code>, <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>bankName</td>
<td>The name of the bank.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
 The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>defaultPaymentProfile</td>
<td>When set to true, this field designates the payment profile as the default payment profile.<br /><br />
When a default payment profile has been designated, you can use <a href="https://developer.authorize.net/api/reference/#customer-profiles-get-customer-payment-profile">getCustomerPaymentProfileRequest</a> with <code>customerProfileId</code> as the only parameter.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>Payment gateway-assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric.<br /><br />
</div></td>
</tr>
<tr>
<td>validationMode</td>
<td>Indicates the processing mode for the request. If the customer profile contains no payment data, this field should not be sent.<br /><br />
- <code>liveMode</code>: A $0 or $0.01 (depending on card type and processor) live transaction is processed against the card and then immediately voided. Address is required for cards that support $0 authorizations and will be validated along with card code if submitted.<br /><br />- <code>testMode</code>: Card data is validated using simple mathematical checks to confirm that it appears to be valid. It is not a guarantee that the card is legitimate and customer data is not validated.</td>
<td><div><code>testMode</code> or <code>liveMode</code><br /><br />
</div></td>
</tr>
</tbody>
 </table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-update-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-payment-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-update-customer-payment-profile">
<div class="panel-body">
<p><em>updateCustomerPaymentProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td><code>Ok</code> or <code>Error</code>.<br /><br />
States whether the request was handled successfully, or ended with an error.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
 <td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td>validationDirectResponse</td>
<td>Contains detailed information about the result of the transaction.<br /><br />
This output is only present if the <code>validationMode</code> input element is passed with a value of <code>testMode</code> or <code>liveMode</code>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-delete-customer-payment-profile">Delete Customer Payment Profile</h3>
<p>Use this function to delete a customer payment profile from an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="delete-customer-payment-profileTryIt" href="#console-delete-customer-payment-profile" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="delete-customer-payment-profilephp" href="#php-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="delete-customer-payment-profilecs" href="#cs-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="delete-customer-payment-profilejava" href="#java-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="delete-customer-payment-profilerb" href="#ruby-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="delete-customer-payment-profilepy" href="#python-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="delete-customer-payment-profilejs" href="#node-delete-customer-payment-profile" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-delete-customer-payment-profile">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="delete-customer-payment-profile">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="delete-customer-payment-profile">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-delete-customer-payment-profile" spellcheck="false" class="XML XMLRequest">&lt;deleteCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
&lt;/deleteCustomerPaymentProfileRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-delete-customer-payment-profile" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;deleteCustomerPaymentProfileRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
&lt;/deleteCustomerPaymentProfileRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-delete-customer-payment-profile" spellcheck="false" class="JSON JSONRequest">{
    &quot;deleteCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-delete-customer-payment-profile" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;deleteCustomerPaymentProfileRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;20000&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-delete-customer-payment-profile" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-delete-customer-payment-profile" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-delete-customer-payment-profile"></span>


<div class="errorDetails" id="detailsDiv-delete-customer-payment-profile">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-delete-customer-payment-profile">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerPaymentProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-delete-customer-payment-profile" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerPaymentProfileResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerPaymentProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-delete-customer-payment-profile">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-delete-customer-payment-profile" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-delete-customer-payment-profile" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-delete-customer-payment-profile">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-delete-customer-payment-profile"></div>
<div id="showCode-php-delete-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-payment-profile"></a>
</p>
<textarea class="php" id="textarea-php-delete-customer-payment-profile" name="textarea-php-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-delete-customer-payment-profile">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-delete-customer-payment-profile"></div>
<div id="showCode-cs-delete-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-payment-profile"></a>
</p>
<textarea class="cs" id="textarea-cs-delete-customer-payment-profile" name="textarea-cs-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-delete-customer-payment-profile">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-delete-customer-payment-profile"></div>
<div id="showCode-java-delete-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-payment-profile"></a>
</p>
<textarea class="java" id="textarea-java-delete-customer-payment-profile" name="textarea-java-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-delete-customer-payment-profile">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-delete-customer-payment-profile"></div>
<div id="showCode-rb-delete-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-payment-profile"></a>
</p>
<textarea class="ruby" id="textarea-rb-delete-customer-payment-profile" name="textarea-rb-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-delete-customer-payment-profile">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-delete-customer-payment-profile"></div>
<div id="showCode-py-delete-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-payment-profile"></a>
</p>
<textarea class="python" id="textarea-py-delete-customer-payment-profile" name="textarea-py-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-delete-customer-payment-profile">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="delete-customer-payment-profile">
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-delete-customer-payment-profile"></div>
<div id="showCode-js-delete-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-payment-profile"></a>
</p>
<textarea class="node" id="textarea-js-delete-customer-payment-profile" name="textarea-js-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-delete-customer-payment-profile">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="delete-customer-payment-profile">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="delete-customer-payment-profile">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="delete-customer-payment-profile">Java</button>
 <button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="delete-customer-payment-profile">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="delete-customer-payment-profile">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="delete-customer-payment-profile">Node</button>
</div>
<div class="showCodeCont" id="showCode-delete-customer-payment-profile">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-delete-customer-payment-profile"></div>
<div id="showCode-php-delete-customer-payment-profile">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-php-delete-customer-payment-profile" name="textarea-php-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-delete-customer-payment-profile"></div>
<div id="showCode-cs-delete-customer-payment-profile">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-cs-delete-customer-payment-profile" name="textarea-cs-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-delete-customer-payment-profile"></div>
<div id="showCode-java-delete-customer-payment-profile">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-java-delete-customer-payment-profile" name="textarea-java-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-delete-customer-payment-profile"></div>
<div id="showCode-rb-delete-customer-payment-profile">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-rb-delete-customer-payment-profile" name="textarea-rb-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-delete-customer-payment-profile"></div>
<div id="showCode-py-delete-customer-payment-profile">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-py-delete-customer-payment-profile" name="textarea-py-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-delete-customer-payment-profile"></div>
<div id="showCode-js-delete-customer-payment-profile">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-payment-profile"></a>
</p>
<textarea class="sample-code" id="textarea-js-delete-customer-payment-profile" name="textarea-js-delete-customer-payment-profile" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-delete-customer-payment-profile" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-delete-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-payment-profile">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-delete-customer-payment-profile" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-delete-customer-payment-profile">
<div class="panel-body">
<p><em>deleteCustomerPaymentProfileRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileId</td>
<td>Payment gateway assigned ID associated with the customer payment profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
 </div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-delete-customer-payment-profile">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-payment-profile">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-delete-customer-payment-profile">
<div class="panel-body">
<p><em>deleteCustomerPaymentProfileResponse </em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
 <td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-create-customer-shipping-address">Create Customer Shipping Address</h3>
<p>Use this function to create a new customer shipping address for an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-customer-shipping-addressTryIt" href="#console-create-customer-shipping-address" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-customer-shipping-addressphp" href="#php-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-customer-shipping-addresscs" href="#cs-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-customer-shipping-addressjava" href="#java-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-customer-shipping-addressrb" href="#ruby-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-customer-shipping-addresspy" href="#python-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-customer-shipping-addressjs" href="#node-create-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-customer-shipping-address">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-customer-shipping-address">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-customer-shipping-address">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-customer-shipping-address" spellcheck="false" class="XML XMLRequest">&lt;createCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;address&gt;
    &lt;firstName&gt;John&lt;/firstName&gt;
    &lt;lastName&gt;Doe&lt;/lastName&gt;
    &lt;company&gt;&lt;/company&gt;
    &lt;address&gt;123 Main St.&lt;/address&gt;
    &lt;city&gt;Bellevue&lt;/city&gt;
    &lt;state&gt;WA&lt;/state&gt;
    &lt;zip&gt;98004&lt;/zip&gt;
    &lt;country&gt;USA&lt;/country&gt;
    &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
    &lt;faxNumber&gt;&lt;/faxNumber&gt;
  &lt;/address&gt;
  &lt;defaultShippingAddress&gt;false&lt;/defaultShippingAddress&gt;
&lt;/createCustomerShippingAddressRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-customer-shipping-address" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;address&gt;
    &lt;firstName&gt;John&lt;/firstName&gt;
    &lt;lastName&gt;Doe&lt;/lastName&gt;
    &lt;company&gt;&lt;/company&gt;
    &lt;address&gt;123 Main St.&lt;/address&gt;
    &lt;city&gt;Bellevue&lt;/city&gt;
    &lt;state&gt;WA&lt;/state&gt;
    &lt;zip&gt;98004&lt;/zip&gt;
    &lt;country&gt;USA&lt;/country&gt;
    &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
    &lt;faxNumber&gt;&lt;/faxNumber&gt;
  &lt;/address&gt;
  &lt;defaultShippingAddress&gt;false&lt;/defaultShippingAddress&gt;
&lt;/createCustomerShippingAddressRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-customer-shipping-address" spellcheck="false" class="JSON JSONRequest">{
    &quot;createCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;address&quot;: {
            &quot;firstName&quot;: &quot;John&quot;,
            &quot;lastName&quot;: &quot;Doe&quot;,
            &quot;company&quot;: &quot;&quot;,
            &quot;address&quot;: &quot;123 Main St.&quot;,
            &quot;city&quot;: &quot;Bellevue&quot;,
            &quot;state&quot;: &quot;WA&quot;,
            &quot;zip&quot;: &quot;98004&quot;,
            &quot;country&quot;: &quot;USA&quot;,
            &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
            &quot;faxNumber&quot;: &quot;&quot;
        },
        &quot;defaultShippingAddress&quot;: false
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-customer-shipping-address" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;address&quot;: {
            &quot;firstName&quot;: &quot;John&quot;,
            &quot;lastName&quot;: &quot;Doe&quot;,
            &quot;company&quot;: &quot;&quot;,
            &quot;address&quot;: &quot;123 Main St.&quot;,
            &quot;city&quot;: &quot;Bellevue&quot;,
            &quot;state&quot;: &quot;WA&quot;,
            &quot;zip&quot;: &quot;98004&quot;,
            &quot;country&quot;: &quot;USA&quot;,
            &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
            &quot;faxNumber&quot;: &quot;&quot;
        },
        &quot;defaultShippingAddress&quot;: false
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-customer-shipping-address" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-customer-shipping-address" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-customer-shipping-address"></span>


<div class="errorDetails" id="detailsDiv-create-customer-shipping-address">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-customer-shipping-address">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/createCustomerShippingAddressResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-customer-shipping-address" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/createCustomerShippingAddressResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-customer-shipping-address">{
    &quot;customerAddressId&quot;: &quot;126406&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-customer-shipping-address" style="display: none !important">{
    &quot;customerAddressId&quot;: &quot;126406&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-customer-shipping-address" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-customer-shipping-address">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-customer-shipping-address"></div>
 <div id="showCode-php-create-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-shipping-address"></a>
</p>
<textarea class="php" id="textarea-php-create-customer-shipping-address" name="textarea-php-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-customer-shipping-address">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-customer-shipping-address"></div>
<div id="showCode-cs-create-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-shipping-address"></a>
</p>
<textarea class="cs" id="textarea-cs-create-customer-shipping-address" name="textarea-cs-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-customer-shipping-address">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-customer-shipping-address"></div>
 <div id="showCode-java-create-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-shipping-address"></a>
</p>
<textarea class="java" id="textarea-java-create-customer-shipping-address" name="textarea-java-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-customer-shipping-address">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-customer-shipping-address"></div>
<div id="showCode-rb-create-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-shipping-address"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-customer-shipping-address" name="textarea-rb-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-customer-shipping-address">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-customer-shipping-address"></div>
<div id="showCode-py-create-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-shipping-address"></a>
</p>
<textarea class="python" id="textarea-py-create-customer-shipping-address" name="textarea-py-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-customer-shipping-address">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-customer-shipping-address"></div>
<div id="showCode-js-create-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-shipping-address"></a>
</p>
<textarea class="node" id="textarea-js-create-customer-shipping-address" name="textarea-js-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-customer-shipping-address">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-customer-shipping-address">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-customer-shipping-address">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-customer-shipping-address">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-customer-shipping-address">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-customer-shipping-address">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-customer-shipping-address">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-customer-shipping-address">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-customer-shipping-address"></div>
<div id="showCode-php-create-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-customer-shipping-address" name="textarea-php-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-customer-shipping-address"></div>
<div id="showCode-cs-create-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-customer-shipping-address" name="textarea-cs-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-customer-shipping-address"></div>
<div id="showCode-java-create-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-customer-shipping-address" name="textarea-java-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-customer-shipping-address"></div>
<div id="showCode-rb-create-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-customer-shipping-address" name="textarea-rb-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-customer-shipping-address"></div>
<div id="showCode-py-create-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-customer-shipping-address" name="textarea-py-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-customer-shipping-address"></div>
<div id="showCode-js-create-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-customer-shipping-address" name="textarea-js-create-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-customer-shipping-address" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-shipping-address">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-customer-shipping-address" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-customer-shipping-address">
<div class="panel-body">
<p><em>createCustomerShippingAddressRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
 Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>address</td>
<td>Contains shipping address information for the customer profile.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
 <td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td>defaultShippingAddress</td>
<td>When set to true, this field designates the shipping address as the default shipping address.<br /><br />
 When a default shipping address has been designated, you can use <a href="https://developer.authorize.net/api/reference/#customer-profiles-get-customer-shipping-address">getCustomerShippingAddressRequest</a> with <code>customerProfileId</code> as the only parameter.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-create-customer-shipping-address">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-customer-shipping-address">
<div class="panel-body">
<p><em>createCustomerShippingAddressResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>customerShippingAddressId</td>
<td>Payment gateway assigned ID associated with the customer shipping address.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
 </tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-get-customer-shipping-address">Get Customer Shipping Address</h3>
<p>Use this function to retrieve the details of a customer shipping address associated with an existing customer profile.<br /><br /><b>Note:</b> If the shipping address has previously been set as the default shipping address, you can submit this request using <code>customerProfileId</code> as the only parameter. Submitting this request with only the customer profile ID will cause the information for the default shipping address to be returned if a default shipping address has been previously designated. If no shipping address has been designated as the default shipping address, failing to specify a shipping address will result in an error.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-customer-shipping-addressTryIt" href="#console-get-customer-shipping-address" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-shipping-addressphp" href="#php-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-shipping-addresscs" href="#cs-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-shipping-addressjava" href="#java-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-shipping-addressrb" href="#ruby-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-shipping-addresspy" href="#python-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-shipping-addressjs" href="#node-get-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-shipping-address">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-shipping-address">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-shipping-address">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-shipping-address" spellcheck="false" class="XML XMLRequest">&lt;getCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/getCustomerShippingAddressRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-shipping-address" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/getCustomerShippingAddressRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-shipping-address" spellcheck="false" class="JSON JSONRequest">{
    &quot;getCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerAddressId&quot;: &quot;30000&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-shipping-address" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerAddressId&quot;: &quot;30000&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-customer-shipping-address" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-shipping-address" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>

<div>
<span id="spnStatusCode-get-customer-shipping-address"></span>


<div class="errorDetails" id="detailsDiv-get-customer-shipping-address">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-shipping-address">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;address&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;customerAddressId&gt;37457091&lt;/customerAddressId&gt;
   &lt;/address&gt;
   &lt;subscriptionIds&gt;
      &lt;subscriptionId&gt;3078184&lt;/subscriptionId&gt;
   &lt;/subscriptionIds&gt;
&lt;/getCustomerShippingAddressResponse&gt;
</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-shipping-address" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;messages&gt;
      &lt;resultCode&gt;Ok&lt;/resultCode&gt;
      &lt;message&gt;
         &lt;code&gt;I00001&lt;/code&gt;
         &lt;text&gt;Successful.&lt;/text&gt;
      &lt;/message&gt;
   &lt;/messages&gt;
   &lt;address&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
      &lt;customerAddressId&gt;37457091&lt;/customerAddressId&gt;
   &lt;/address&gt;
   &lt;subscriptionIds&gt;
      &lt;subscriptionId&gt;3078184&lt;/subscriptionId&gt;
   &lt;/subscriptionIds&gt;
&lt;/getCustomerShippingAddressResponse&gt;
</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-shipping-address">{
    &quot;address&quot;: {
        &quot;customerAddressId&quot;: &quot;37457091&quot;,
       &quot;firstName&quot;: &quot;China&quot;,
        &quot;lastName&quot;: &quot;Bayles&quot;,
        &quot;company&quot;: &quot;Thyme for Tea&quot;,
        &quot;address&quot;: &quot;12 Main Street&quot;,
        &quot;city&quot;: &quot;Pecan Springs&quot;,
        &quot;state&quot;: &quot;TX&quot;,
        &quot;zip&quot;: &quot;44628&quot;,
        &quot;country&quot;: &quot;USA&quot;
    },
    &quot;subscriptionIds&quot;: [
        &quot;3078184&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-shipping-address" style="display: none !important">{
    &quot;address&quot;: {
        &quot;customerAddressId&quot;: &quot;37457091&quot;,
       &quot;firstName&quot;: &quot;China&quot;,
        &quot;lastName&quot;: &quot;Bayles&quot;,
        &quot;company&quot;: &quot;Thyme for Tea&quot;,
        &quot;address&quot;: &quot;12 Main Street&quot;,
        &quot;city&quot;: &quot;Pecan Springs&quot;,
        &quot;state&quot;: &quot;TX&quot;,
        &quot;zip&quot;: &quot;44628&quot;,
        &quot;country&quot;: &quot;USA&quot;
    },
    &quot;subscriptionIds&quot;: [
        &quot;3078184&quot;
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}
</code>
                                                </pre>
<div id="txtRespLoader-get-customer-shipping-address" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-customer-shipping-address">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-shipping-address"></div>
<div id="showCode-php-get-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-shipping-address"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-shipping-address" name="textarea-php-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-shipping-address">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-shipping-address"></div>
<div id="showCode-cs-get-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-shipping-address"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-shipping-address" name="textarea-cs-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-shipping-address">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-shipping-address"></div>
<div id="showCode-java-get-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-shipping-address"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-shipping-address" name="textarea-java-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-shipping-address">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-shipping-address"></div>
<div id="showCode-rb-get-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-shipping-address"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-shipping-address" name="textarea-rb-get-customer-shipping-address" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-customer-shipping-address">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-shipping-address"></div>
<div id="showCode-py-get-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-shipping-address"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-shipping-address" name="textarea-py-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-shipping-address">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-shipping-address"></div>
<div id="showCode-js-get-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-shipping-address"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-shipping-address" name="textarea-js-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-customer-shipping-address">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-shipping-address">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-shipping-address">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-shipping-address">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-shipping-address">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-shipping-address">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-shipping-address">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-shipping-address">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-shipping-address"></div>
<div id="showCode-php-get-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-customer-shipping-address" name="textarea-php-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-shipping-address"></div>
<div id="showCode-cs-get-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-shipping-address" name="textarea-cs-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-shipping-address"></div>
<div id="showCode-java-get-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-shipping-address" name="textarea-java-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-shipping-address"></div>
<div id="showCode-rb-get-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-shipping-address" name="textarea-rb-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-shipping-address"></div>
<div id="showCode-py-get-customer-shipping-address">
<p>
 This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-shipping-address" name="textarea-py-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-shipping-address"></div>
<div id="showCode-js-get-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-shipping-address" name="textarea-js-get-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-shipping-address" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-shipping-address">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-shipping-address" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-shipping-address">
<div class="panel-body">
<p><em>getCustomerShippingAddressRequest</em>
</p>
 <table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-shipping-address">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-shipping-address">
<div class="panel-body">
<p><em>getCustomerShippingAddressResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultPaymentProfile</td>
<td>Designates whether this payment profile is set as the default payment profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>address</td>
<td>Contains shipping address information for the customer profile.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='oneBullet'>customerAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
 </td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td>subscriptionIds</td>
<td>Contains one or more <code>subscriptionId</code> fields.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>subscriptionId</td>
<td>Contains a subscription ID associated with this customer.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
 </div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-update-customer-shipping-address">Update Customer Shipping Address</h3>
<p>Use this function to update a shipping address for an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="update-customer-shipping-addressTryIt" href="#console-update-customer-shipping-address" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="update-customer-shipping-addressphp" href="#php-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="update-customer-shipping-addresscs" href="#cs-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="update-customer-shipping-addressjava" href="#java-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="update-customer-shipping-addressrb" href="#ruby-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="update-customer-shipping-addresspy" href="#python-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="update-customer-shipping-addressjs" href="#node-update-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-update-customer-shipping-address">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="update-customer-shipping-address">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="update-customer-shipping-address">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-update-customer-shipping-address" spellcheck="false" class="XML XMLRequest">&lt;updateCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;address&gt;
    &lt;firstName&gt;Newfirstname&lt;/firstName&gt;
    &lt;lastName&gt;Doe&lt;/lastName&gt;
    &lt;company&gt;&lt;/company&gt;
    &lt;address&gt;123 Main St.&lt;/address&gt;
    &lt;city&gt;Bellevue&lt;/city&gt;
    &lt;state&gt;WA&lt;/state&gt;
    &lt;zip&gt;98004&lt;/zip&gt;
    &lt;country&gt;USA&lt;/country&gt;
    &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
    &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
  &lt;/address&gt;
  &lt;defaultShippingAddress&gt;false&lt;/defaultShippingAddress&gt;
&lt;/updateCustomerShippingAddressRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-update-customer-shipping-address" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;updateCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;address&gt;
    &lt;firstName&gt;Newfirstname&lt;/firstName&gt;
    &lt;lastName&gt;Doe&lt;/lastName&gt;
    &lt;company&gt;&lt;/company&gt;
    &lt;address&gt;123 Main St.&lt;/address&gt;
    &lt;city&gt;Bellevue&lt;/city&gt;
    &lt;state&gt;WA&lt;/state&gt;
    &lt;zip&gt;98004&lt;/zip&gt;
    &lt;country&gt;USA&lt;/country&gt;
    &lt;phoneNumber&gt;000-000-0000&lt;/phoneNumber&gt;
    &lt;faxNumber&gt;&lt;/faxNumber&gt;
    &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
  &lt;/address&gt;
  &lt;defaultShippingAddress&gt;false&lt;/defaultShippingAddress&gt;
&lt;/updateCustomerShippingAddressRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-update-customer-shipping-address" spellcheck="false" class="JSON JSONRequest">{
    &quot;updateCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;address&quot;: {
            &quot;firstName&quot;: &quot;Newfirstname&quot;,
            &quot;lastName&quot;: &quot;Doe&quot;,
            &quot;company&quot;: &quot;&quot;,
            &quot;address&quot;: &quot;123 Main St.&quot;,
            &quot;city&quot;: &quot;Bellevue&quot;,
            &quot;state&quot;: &quot;WA&quot;,
            &quot;zip&quot;: &quot;98004&quot;,
            &quot;country&quot;: &quot;USA&quot;,
            &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
            &quot;faxNumber&quot;: &quot;&quot;,
            &quot;customerAddressId&quot;: &quot;30000&quot;
        },
        &quot;defaultShippingAddress&quot;: false
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-update-customer-shipping-address" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;updateCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;address&quot;: {
            &quot;firstName&quot;: &quot;Newfirstname&quot;,
            &quot;lastName&quot;: &quot;Doe&quot;,
            &quot;company&quot;: &quot;&quot;,
            &quot;address&quot;: &quot;123 Main St.&quot;,
            &quot;city&quot;: &quot;Bellevue&quot;,
            &quot;state&quot;: &quot;WA&quot;,
            &quot;zip&quot;: &quot;98004&quot;,
            &quot;country&quot;: &quot;USA&quot;,
            &quot;phoneNumber&quot;: &quot;000-000-0000&quot;,
            &quot;faxNumber&quot;: &quot;&quot;,
            &quot;customerAddressId&quot;: &quot;30000&quot;
        },
        &quot;defaultShippingAddress&quot;: false
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-update-customer-shipping-address" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-update-customer-shipping-address" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-update-customer-shipping-address"></span>


<div class="errorDetails" id="detailsDiv-update-customer-shipping-address">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-update-customer-shipping-address">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateCustomerShippingAddressResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-update-customer-shipping-address" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;updateCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/updateCustomerShippingAddressResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-update-customer-shipping-address">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-update-customer-shipping-address" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-update-customer-shipping-address" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-update-customer-shipping-address">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-update-customer-shipping-address"></div>
<div id="showCode-php-update-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-shipping-address"></a>
</p>
<textarea class="php" id="textarea-php-update-customer-shipping-address" name="textarea-php-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-update-customer-shipping-address">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-update-customer-shipping-address"></div>
 <div id="showCode-cs-update-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-shipping-address"></a>
</p>
<textarea class="cs" id="textarea-cs-update-customer-shipping-address" name="textarea-cs-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-update-customer-shipping-address">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-update-customer-shipping-address"></div>
<div id="showCode-java-update-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-shipping-address"></a>
</p>
<textarea class="java" id="textarea-java-update-customer-shipping-address" name="textarea-java-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-update-customer-shipping-address">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-update-customer-shipping-address"></div>
 <div id="showCode-rb-update-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-shipping-address"></a>
</p>
<textarea class="ruby" id="textarea-rb-update-customer-shipping-address" name="textarea-rb-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-update-customer-shipping-address">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-update-customer-shipping-address"></div>
<div id="showCode-py-update-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-shipping-address"></a>
</p>
<textarea class="python" id="textarea-py-update-customer-shipping-address" name="textarea-py-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-update-customer-shipping-address">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="update-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-update-customer-shipping-address"></div>
<div id="showCode-js-update-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-shipping-address"></a>
</p>
<textarea class="node" id="textarea-js-update-customer-shipping-address" name="textarea-js-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-update-customer-shipping-address">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="update-customer-shipping-address">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="update-customer-shipping-address">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="update-customer-shipping-address">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="update-customer-shipping-address">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="update-customer-shipping-address">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="update-customer-shipping-address">Node</button>
</div>
<div class="showCodeCont" id="showCode-update-customer-shipping-address">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-update-customer-shipping-address"></div>
<div id="showCode-php-update-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-update-customer-shipping-address"></a>
 </p>
<textarea class="sample-code" id="textarea-php-update-customer-shipping-address" name="textarea-php-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-update-customer-shipping-address"></div>
<div id="showCode-cs-update-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-update-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-cs-update-customer-shipping-address" name="textarea-cs-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-update-customer-shipping-address"></div>
<div id="showCode-java-update-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-update-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-java-update-customer-shipping-address" name="textarea-java-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-update-customer-shipping-address"></div>
<div id="showCode-rb-update-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-update-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-rb-update-customer-shipping-address" name="textarea-rb-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-update-customer-shipping-address"></div>
<div id="showCode-py-update-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-update-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-py-update-customer-shipping-address" name="textarea-py-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-update-customer-shipping-address"></div>
<div id="showCode-js-update-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-update-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-js-update-customer-shipping-address" name="textarea-js-update-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-update-customer-shipping-address" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-update-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-shipping-address">
Request Field Description
</a>
</h4>
</div>
 <div class="DetailsResponse" id="collapseReq-update-customer-shipping-address" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-update-customer-shipping-address">
<div class="panel-body">
<p><em>updateCustomerShippingAddressRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>address</td>
<td>Contains shipping address information for the customer profile.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
 For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>customerAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultShippingAddress</td>
<td>When set to true, this field designates the shipping address as the default shipping address.<br /><br />
When a default shipping address has been designated, you can use <a href="https://developer.authorize.net/api/reference/#customer-profiles-get-customer-shipping-address">getCustomerShippingAddressRequest</a> with <code>customerProfileId</code> as the only parameter.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-update-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-update-customer-shipping-address">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-update-customer-shipping-address">
<div class="panel-body">
<p><em>updateCustomerShippingAddressResponse</em>
</p>
<table class="table table-condensed">
<thead>
 <tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>defaultShippingAddress</td>
<td>Designates whether this shipping profile is set as the default shipping profile.<br /><br />
This is returned only if you designated this profile as the default in the request.</td>
<td><div>String.<br /><br />Defaults to <code>true</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-delete-customer-shipping-address">Delete Customer Shipping Address</h3>
<p>Use this function to delete a customer shipping address from an existing customer profile.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="delete-customer-shipping-addressTryIt" href="#console-delete-customer-shipping-address" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="delete-customer-shipping-addressphp" href="#php-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="delete-customer-shipping-addresscs" href="#cs-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="delete-customer-shipping-addressjava" href="#java-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="delete-customer-shipping-addressrb" href="#ruby-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="delete-customer-shipping-addresspy" href="#python-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="delete-customer-shipping-addressjs" href="#node-delete-customer-shipping-address" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-delete-customer-shipping-address">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="delete-customer-shipping-address">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="delete-customer-shipping-address">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-delete-customer-shipping-address" spellcheck="false" class="XML XMLRequest">&lt;deleteCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/deleteCustomerShippingAddressRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-delete-customer-shipping-address" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;deleteCustomerShippingAddressRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
  &lt;customerAddressId&gt;30000&lt;/customerAddressId&gt;
&lt;/deleteCustomerShippingAddressRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-delete-customer-shipping-address" spellcheck="false" class="JSON JSONRequest">{
    &quot;deleteCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerAddressId&quot;: &quot;30000&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-delete-customer-shipping-address" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;deleteCustomerShippingAddressRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;10000&quot;,
        &quot;customerAddressId&quot;: &quot;30000&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-delete-customer-shipping-address" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-delete-customer-shipping-address" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-delete-customer-shipping-address"></span>


<div class="errorDetails" id="detailsDiv-delete-customer-shipping-address">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-delete-customer-shipping-address">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerShippingAddressResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-delete-customer-shipping-address" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;deleteCustomerShippingAddressResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
&lt;/deleteCustomerShippingAddressResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-delete-customer-shipping-address">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-delete-customer-shipping-address" style="display: none !important">{
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-delete-customer-shipping-address" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-delete-customer-shipping-address">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-delete-customer-shipping-address"></div>
<div id="showCode-php-delete-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-shipping-address"></a>
</p>
<textarea class="php" id="textarea-php-delete-customer-shipping-address" name="textarea-php-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-delete-customer-shipping-address">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-delete-customer-shipping-address"></div>
<div id="showCode-cs-delete-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-shipping-address"></a>
</p>
<textarea class="cs" id="textarea-cs-delete-customer-shipping-address" name="textarea-cs-delete-customer-shipping-address" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-delete-customer-shipping-address">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-delete-customer-shipping-address"></div>
<div id="showCode-java-delete-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-shipping-address"></a>
</p>
<textarea class="java" id="textarea-java-delete-customer-shipping-address" name="textarea-java-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-delete-customer-shipping-address">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-delete-customer-shipping-address"></div>
<div id="showCode-rb-delete-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-shipping-address"></a>
</p>
<textarea class="ruby" id="textarea-rb-delete-customer-shipping-address" name="textarea-rb-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
<div class="tab-pane fade" id="python-delete-customer-shipping-address">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-delete-customer-shipping-address"></div>
<div id="showCode-py-delete-customer-shipping-address">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-shipping-address"></a>
</p>
<textarea class="python" id="textarea-py-delete-customer-shipping-address" name="textarea-py-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-delete-customer-shipping-address">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="delete-customer-shipping-address">
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-delete-customer-shipping-address"></div>
<div id="showCode-js-delete-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-shipping-address"></a>
</p>
<textarea class="node" id="textarea-js-delete-customer-shipping-address" name="textarea-js-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-delete-customer-shipping-address">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="delete-customer-shipping-address">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="delete-customer-shipping-address">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="delete-customer-shipping-address">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="delete-customer-shipping-address">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="delete-customer-shipping-address">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="delete-customer-shipping-address">Node</button>
</div>
<div class="showCodeCont" id="showCode-delete-customer-shipping-address">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-delete-customer-shipping-address"></div>
<div id="showCode-php-delete-customer-shipping-address">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-php-delete-customer-shipping-address" name="textarea-php-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-delete-customer-shipping-address"></div>
<div id="showCode-cs-delete-customer-shipping-address">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-cs-delete-customer-shipping-address" name="textarea-cs-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-delete-customer-shipping-address"></div>
<div id="showCode-java-delete-customer-shipping-address">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-java-delete-customer-shipping-address" name="textarea-java-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-delete-customer-shipping-address"></div>
<div id="showCode-rb-delete-customer-shipping-address">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-rb-delete-customer-shipping-address" name="textarea-rb-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-delete-customer-shipping-address"></div>
<div id="showCode-py-delete-customer-shipping-address">
 <p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-py-delete-customer-shipping-address" name="textarea-py-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-delete-customer-shipping-address"></div>
<div id="showCode-js-delete-customer-shipping-address">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-delete-customer-shipping-address"></a>
</p>
<textarea class="sample-code" id="textarea-js-delete-customer-shipping-address" name="textarea-js-delete-customer-shipping-address" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-delete-customer-shipping-address" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-delete-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-shipping-address">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-delete-customer-shipping-address" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-delete-customer-shipping-address">
<div class="panel-body">
 <p><em>deleteCustomerShippingAddressRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway-assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerShippingAddressId</td>
<td>Payment gateway-assigned ID associated with the customer shipping address.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-delete-customer-shipping-address">
<h4 class="panel-title">
<a data-parent="#accordion-delete-customer-shipping-address">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-delete-customer-shipping-address">
<div class="panel-body">
<p><em>deleteCustomerShippingAddressResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
 <td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="customer-profiles-create-a-customer-profile-from-a-transaction">Create a Customer Profile from a Transaction</h3>
<p>This request enables you to create a customer profile, payment profile, and shipping profile
from an existing successful transaction.<br /><br /><b>Note:</b> Tokenized transactions (e.g. Apple Pay) should not be used to create payment profiles.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">

<li id="console" class="active">
<a id="create-a-customer-profile-from-a-transactionTryIt" href="#console-create-a-customer-profile-from-a-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-a-customer-profile-from-a-transactionphp" href="#php-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-a-customer-profile-from-a-transactioncs" href="#cs-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-a-customer-profile-from-a-transactionjava" href="#java-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-a-customer-profile-from-a-transactionrb" href="#ruby-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-a-customer-profile-from-a-transactionpy" href="#python-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-a-customer-profile-from-a-transactionjs" href="#node-create-a-customer-profile-from-a-transaction" class="customer-profiles" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-a-customer-profile-from-a-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-a-customer-profile-from-a-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-a-customer-profile-from-a-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-a-customer-profile-from-a-transaction" spellcheck="false" class="XML XMLRequest">&lt;createCustomerProfileFromTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;transId&gt;122&lt;/transId&gt;
&lt;/createCustomerProfileFromTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-a-customer-profile-from-a-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createCustomerProfileFromTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
	&lt;merchantAuthentication&gt;
		&lt;name&gt;API_LOGIN_ID&lt;/name&gt;
		&lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
	&lt;/merchantAuthentication&gt;
	&lt;transId&gt;122&lt;/transId&gt;
&lt;/createCustomerProfileFromTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-a-customer-profile-from-a-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createCustomerProfileFromTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transId&quot;: &quot;122&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-a-customer-profile-from-a-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createCustomerProfileFromTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transId&quot;: &quot;122&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-a-customer-profile-from-a-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-a-customer-profile-from-a-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-a-customer-profile-from-a-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-a-customer-profile-from-a-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-a-customer-profile-from-a-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createCustomerProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerProfileId&gt;
    1234
  &lt;/customerProfileId&gt;
  &lt;customerPaymentProfileIdList&gt;
    &lt;numericString&gt;
      5678
    &lt;/numericString&gt;
  &lt;/customerPaymentProfileIdList&gt;
  &lt;customerShippingAddressIdList&gt;
    &lt;numericString&gt;
      1212
    &lt;/numericString&gt;
  &lt;/customerShippingAddressIdList&gt;
  &lt;validationDirectResponseList /&gt;
&lt;/createCustomerProfileResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-a-customer-profile-from-a-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; 
&lt;createCustomerProfileResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;
      Ok
    &lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;
        I00001
      &lt;/code&gt;
      &lt;text&gt;
        Successful.
      &lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;customerProfileId&gt;
    1234
  &lt;/customerProfileId&gt;
  &lt;customerPaymentProfileIdList&gt;
    &lt;numericString&gt;
      5678
    &lt;/numericString&gt;
  &lt;/customerPaymentProfileIdList&gt;
  &lt;customerShippingAddressIdList&gt;
    &lt;numericString&gt;
      1212
    &lt;/numericString&gt;
  &lt;/customerShippingAddressIdList&gt;
  &lt;validationDirectResponseList /&gt;
&lt;/createCustomerProfileResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-a-customer-profile-from-a-transaction">{
    &quot;customerProfileId&quot;: &quot;190179&quot;,
    &quot;customerPaymentProfileIdList&quot;: [
        &quot;157500&quot;
    ],
    &quot;customerShippingAddressIdList&quot;: [
        &quot;126407&quot;
    ],
    &quot;validationDirectResponseList&quot;: [],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-a-customer-profile-from-a-transaction" style="display: none !important">{
    &quot;customerProfileId&quot;: &quot;190179&quot;,
    &quot;customerPaymentProfileIdList&quot;: [
        &quot;157500&quot;
    ],
    &quot;customerShippingAddressIdList&quot;: [
        &quot;126407&quot;
    ],
    &quot;validationDirectResponseList&quot;: [],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-a-customer-profile-from-a-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="php-create-a-customer-profile-from-a-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-php-create-a-customer-profile-from-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-a-customer-profile-from-a-transaction" name="textarea-php-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-a-customer-profile-from-a-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-cs-create-a-customer-profile-from-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-a-customer-profile-from-a-transaction" name="textarea-cs-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-a-customer-profile-from-a-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-java-create-a-customer-profile-from-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-a-customer-profile-from-a-transaction" name="textarea-java-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
 </div>
<div class="tab-pane fade" id="ruby-create-a-customer-profile-from-a-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-rb-create-a-customer-profile-from-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="ruby" id="textarea-rb-create-a-customer-profile-from-a-transaction" name="textarea-rb-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-a-customer-profile-from-a-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-py-create-a-customer-profile-from-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-a-customer-profile-from-a-transaction" name="textarea-py-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-a-customer-profile-from-a-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-a-customer-profile-from-a-transaction">
</div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-js-create-a-customer-profile-from-a-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-a-customer-profile-from-a-transaction" name="textarea-js-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-a-customer-profile-from-a-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-a-customer-profile-from-a-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-a-customer-profile-from-a-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-a-customer-profile-from-a-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-a-customer-profile-from-a-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-a-customer-profile-from-a-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-a-customer-profile-from-a-transaction">Node</button>
 </div>
<div class="showCodeCont" id="showCode-create-a-customer-profile-from-a-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-php-create-a-customer-profile-from-a-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-a-customer-profile-from-a-transaction" name="textarea-php-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-cs-create-a-customer-profile-from-a-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-a-customer-profile-from-a-transaction" name="textarea-cs-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-java-create-a-customer-profile-from-a-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-a-customer-profile-from-a-transaction" name="textarea-java-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-rb-create-a-customer-profile-from-a-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-a-customer-profile-from-a-transaction" name="textarea-rb-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-py-create-a-customer-profile-from-a-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-a-customer-profile-from-a-transaction" name="textarea-py-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-a-customer-profile-from-a-transaction"></div>
<div id="showCode-js-create-a-customer-profile-from-a-transaction">
<p>
 This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-a-customer-profile-from-a-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-a-customer-profile-from-a-transaction" name="textarea-js-create-a-customer-profile-from-a-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-a-customer-profile-from-a-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-a-customer-profile-from-a-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-customer-profile-from-a-transaction">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-a-customer-profile-from-a-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-a-customer-profile-from-a-transaction">
<div class="panel-body">
<p><em>createCustomerProfileFromTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transId</td>
<td><strong>Required.</strong><br />
The transaction ID for the successful transaction from which you would like to generate a customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customer</td>
<td>Contains the information for the customer profile.<br /><br />
At least one of the following fields must be submitted under <code>customer</code>: <code>merchantCustomerId</code>, <code>description</code>, or <code>email</code>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>merchantCustomerId</td>
<td><strong>Conditional.</strong><br />Merchant assigned ID for the customer.<br /><br />
Required only when no values for <code>description</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td><strong>Conditional.</strong><br />Description of the customer or customer profile.<br /><br />
Required only when no values for <code>merchantCustomerId</code> and <code>email</code> are submitted.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td><strong>Conditional.</strong><br />Email address associated with the customer profile.<br /><br />
Required when no values for <code>description</code> and <code>merchantCustomerId</code> are submitted.<br /><br />Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>profileType</td>
<td>Indicates whether a profile is a guest profile.<br /><br />
We recommend submitting <code>profileType</code> only when you need a guest profile. If you do not need guest profiles, you do not need to send this element.<br /><br />We retain guest profiles for 90 days after their last usage in a transaction request. If you create no more transactions using a given guest profile, we purge the guest profile from our system.</td>
<td><div>String.<br /><br />Either <code>guest</code> or <code>regular</code>. Defaults to <code>regular</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
 <div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-a-customer-profile-from-a-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-a-customer-profile-from-a-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-a-customer-profile-from-a-transaction">
<div class="panel-body">
<p><em>createCustomerProfileResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
This output is present only for successful requests.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileIdList</td>
<td>A list of all payment profile IDs created with the request.<br /><br />
This output is present only for requests that contain one or more payment profiles.<br /><br />The payment profile IDs are returned in the same order as they were in the request.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerShippingAddressIdList</td>
<td>A list of all shipping profile IDs created with the request.<br /><br />
This output is present only for requests that contain multiple shipping profiles.<br /><br />The shipping profile IDs are returned in the same order as they were in the request.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>validationDirectResponseList</td>
<td>A list of the direct response results for the validation transaction for each payment profile.<br /><br />
This output is present only if the <code>validationMode</code> input element is passed with a value of <code>testMode</code> or <code>liveMode</code>.<br /><br />The list is returned in the same order as the payment profiles were submitted in the request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="transaction-reporting" class="section-title">Transaction Reporting</h2>
<p class="lead">You can use this feature of the Authorize.Net API to access transaction history and details. For more information about transaction reporting, see the <a href="https://developer.authorize.net/api/reference/features/transaction_reporting.html">Transaction Reporting developer guide</a>.</p>
<h3 id="transaction-reporting-get-settled-batch-list">Get Settled Batch List</h3>
<p>This function returns Batch ID, Settlement Time, & Settlement State for all settled batches with a range of dates. If <code>includeStatistics</code> is <code>true</code>, you also receive batch statistics by payment type and batch totals. All input parameters other than merchant authentication are optional. If no dates are specified, then the default is the past 24 hours, ending at the time of the call to <code>getSettledBatchListRequest</code>.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-settled-batch-listTryIt" href="#console-get-settled-batch-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-settled-batch-listphp" href="#php-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-settled-batch-listcs" href="#cs-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-settled-batch-listjava" href="#java-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-settled-batch-listrb" href="#ruby-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-settled-batch-listpy" href="#python-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-settled-batch-listjs" href="#node-get-settled-batch-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-settled-batch-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-settled-batch-list">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-settled-batch-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-settled-batch-list" spellcheck="false" class="XML XMLRequest">&lt;getSettledBatchListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;firstSettlementDate&gt;2020-05-01T16:00:00Z&lt;/firstSettlementDate&gt;
  &lt;lastSettlementDate&gt;2020-05-31T16:00:00Z&lt;/lastSettlementDate&gt;
&lt;/getSettledBatchListRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-settled-batch-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getSettledBatchListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;firstSettlementDate&gt;2020-05-01T16:00:00Z&lt;/firstSettlementDate&gt;
  &lt;lastSettlementDate&gt;2020-05-31T16:00:00Z&lt;/lastSettlementDate&gt;
&lt;/getSettledBatchListRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-settled-batch-list" spellcheck="false" class="JSON JSONRequest">{
    &quot;getSettledBatchListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;firstSettlementDate&quot;: &quot;2020-05-01T16:00:00Z&quot;,
        &quot;lastSettlementDate&quot;: &quot;2020-05-31T16:00:00Z&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-settled-batch-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getSettledBatchListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;firstSettlementDate&quot;: &quot;2020-05-01T16:00:00Z&quot;,
        &quot;lastSettlementDate&quot;: &quot;2020-05-31T16:00:00Z&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-settled-batch-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-settled-batch-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-settled-batch-list"></span>


<div class="errorDetails" id="detailsDiv-get-settled-batch-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-settled-batch-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getSettledBatchListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
&lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;batchList&gt;
    &lt;batch&gt;
      &lt;batchId&gt;12345678&lt;/batchId&gt;
      &lt;settlementTimeUTC&gt;2010-05-30T09:00:00&lt;/settlementTimeUTC&gt;
      &lt;settlementTimeLocal&gt;2010-05-30T03:00:00&lt;/settlementTimeLocal&gt;
      &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
    &lt;/batch&gt;
    &lt;batch&gt;
      &lt;batchId&gt;23456789&lt;/batchId&gt;
      &lt;settlementTimeUTC&gt;2010-05-30T09:00:00&lt;/settlementTimeUTC&gt;
      &lt;settlementTimeLocal&gt;2010-05-30T03:00:00&lt;/settlementTimeLocal&gt;
      &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
    &lt;/batch&gt;
  &lt;/batchList&gt;
&lt;/getSettledBatchListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-settled-batch-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getSettledBatchListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
&lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;batchList&gt;
    &lt;batch&gt;
      &lt;batchId&gt;12345678&lt;/batchId&gt;
      &lt;settlementTimeUTC&gt;2010-05-30T09:00:00&lt;/settlementTimeUTC&gt;
      &lt;settlementTimeLocal&gt;2010-05-30T03:00:00&lt;/settlementTimeLocal&gt;
      &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
    &lt;/batch&gt;
    &lt;batch&gt;
      &lt;batchId&gt;23456789&lt;/batchId&gt;
      &lt;settlementTimeUTC&gt;2010-05-30T09:00:00&lt;/settlementTimeUTC&gt;
      &lt;settlementTimeLocal&gt;2010-05-30T03:00:00&lt;/settlementTimeLocal&gt;
      &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
    &lt;/batch&gt;
  &lt;/batchList&gt;
&lt;/getSettledBatchListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-settled-batch-list">{
    &quot;batchList&quot;: [
        {
            &quot;batchId&quot;: &quot;10198080&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:48:19Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:18:19&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        },
        {
            &quot;batchId&quot;: &quot;10198081&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:48:55Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:18:55&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        },
        {
            &quot;batchId&quot;: &quot;10198082&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:49:37Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:19:37&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        }
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-settled-batch-list" style="display: none !important">{
    &quot;batchList&quot;: [
        {
            &quot;batchId&quot;: &quot;10198080&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:48:19Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:18:19&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        },
        {
            &quot;batchId&quot;: &quot;10198081&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:48:55Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:18:55&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        },
        {
            &quot;batchId&quot;: &quot;10198082&quot;,
            &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:49:37Z&quot;,
            &quot;settlementTimeUTCSpecified&quot;: true,
            &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:19:37&quot;,
            &quot;settlementTimeLocalSpecified&quot;: true,
            &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
            &quot;paymentMethod&quot;: &quot;eCheck&quot;
        }
    ],
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-get-settled-batch-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-settled-batch-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-settled-batch-list"></div>
<div id="showCode-php-get-settled-batch-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-settled-batch-list"></a>
</p>
<textarea class="php" id="textarea-php-get-settled-batch-list" name="textarea-php-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-settled-batch-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-settled-batch-list"></div>
<div id="showCode-cs-get-settled-batch-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-settled-batch-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-settled-batch-list" name="textarea-cs-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-settled-batch-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-settled-batch-list"></div>
<div id="showCode-java-get-settled-batch-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-settled-batch-list"></a>
</p>
<textarea class="java" id="textarea-java-get-settled-batch-list" name="textarea-java-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-settled-batch-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-settled-batch-list"></div>
<div id="showCode-rb-get-settled-batch-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
 <strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-settled-batch-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-settled-batch-list" name="textarea-rb-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-settled-batch-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-settled-batch-list"></div>
<div id="showCode-py-get-settled-batch-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-settled-batch-list"></a>
</p>
<textarea class="python" id="textarea-py-get-settled-batch-list" name="textarea-py-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-settled-batch-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-settled-batch-list">
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-settled-batch-list"></div>
<div id="showCode-js-get-settled-batch-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-settled-batch-list"></a>
 </p>
<textarea class="node" id="textarea-js-get-settled-batch-list" name="textarea-js-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-settled-batch-list">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-settled-batch-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-settled-batch-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-settled-batch-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-settled-batch-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-settled-batch-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-settled-batch-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-settled-batch-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-settled-batch-list"></div>
<div id="showCode-php-get-settled-batch-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-settled-batch-list" name="textarea-php-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-settled-batch-list"></div>
<div id="showCode-cs-get-settled-batch-list">
<p>
 This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-settled-batch-list" name="textarea-cs-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-settled-batch-list"></div>
<div id="showCode-java-get-settled-batch-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-settled-batch-list" name="textarea-java-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-settled-batch-list"></div>
<div id="showCode-rb-get-settled-batch-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-settled-batch-list" name="textarea-rb-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-settled-batch-list"></div>
<div id="showCode-py-get-settled-batch-list">
 <p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-settled-batch-list" name="textarea-py-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-settled-batch-list"></div>
<div id="showCode-js-get-settled-batch-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-settled-batch-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-settled-batch-list" name="textarea-js-get-settled-batch-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-settled-batch-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-settled-batch-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-settled-batch-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-settled-batch-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-settled-batch-list">
<div class="panel-body">
<p><em>getSettledBatchListRequest</em>
 </p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>includeStatistics</td>
<td>Include statistics for the batches.<br /><br />
If <code>includeStatistics</code> is <code>true</code>, then statistics are included for the entire range, including the first and last settlement dates.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>. Defaults to <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>firstSettlementDate</td>
<td>Use this field to query against an inclusive range of dates other than the past 24 hrs.<br /><br />
The time between <code>firstSettlementDate</code> and <code>lastSettlementDate</code>, inclusively, cannot exceed 31 days.<br /><br />We will use the merchant time zone by default. To update the time zone, log in to the Merchant Interface and click <strong>Account > Settings > Time Zone.</strong><br /><br />Unless you specify UTC, we will take the merchant time zone into consideration when calculating the batch date range<br /><br /><code>firstSettlementDate</code> cannot precede January 1, two years before the current year. For example, if the current date is September 1, 2010, <code>firstSettlementDate</code> must be January 1, 2008 or later. </td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />Defaults to the merchant's time zone if configured in the Merchant Interface. If not configured, defaults to Mountain Time (UTC-7). For UTC, append a Z after the time. <br /><br />
</div></td>
</tr>
<tr>
<td>lastSettlementDate</td>
<td>Use this field to query against an inclusive range of dates other than the past 24 hrs.<br /><br />
The time between <code>firstSettlementDate</code> and <code>lastSettlementDate</code>, inclusively, cannot exceed 31 days.<br /><br />We will use the merchant time zone by default. To update the time zone, log in to the Merchant Interface and click <strong>Account > Settings > Time Zone.</strong><br /><br />Unless you specify UTC, we will take the merchant time zone into consideration when calculating the batch date range<br /><br />If <code>lastSettlementDate</code> specifies a time of 00:00:00, we will include batches settled on that date, regardless of when they settled.</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />Defaults to the merchant's time zone if configured in the Merchant Interface. If not configured, defaults to Mountain Time (UTC-7). For UTC, append a Z after the time. <br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-settled-batch-list">
<h4 class="panel-title">
 <a data-parent="#accordion-get-settled-batch-list">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-settled-batch-list">
<div class="panel-body">
<p><em>getSettledBatchListResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>batchList</td>
<td>Contains information for all batches<br /><br />
The batch list is sorted by batch id in ascending order.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>batch</td>
<td>Contains information specific to one batch.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>batchId</td>
<td>The identification number for the batch.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>settlementTimeUTC</td>
<td>Date and time when the batch was settled, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>settlementTimeLocal</td>
<td>Date and time when the batch was settled, expressed in merchant’s local time zone.<br /><br />
 This element returns the time in the merchant time zone as set in the Merchant Interface.<br /><br />To update the time zone, log in to the Merchant Interface and click <strong>Account > Settings > Time Zone.</strong></td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>settlementState</td>
<td>Status of the batch.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>settledSuccessfully</code>, <code>settlementError</code>, or <code>pendingSettlement</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>paymentMethod</td>
<td>Indicates whether the batch contains credit card transactions or eCheck.Net transactions.<br /><br />
Since credit cards and electronic checks have different settlement and clearance processes, we create separate batches for credit card transactions and eCheck.Net transactions.</td>
<td><div>String.<br /><br />Either <code>creditCard</code> or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type of the batch.<br /><br />
Since e-commerce, MOTO, and retail transactions have different processing rules, we create separate batches for e-commerce transactions, MOTO transactions, and retail transactions.</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Card Present</code> or <code>Card Not Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>statistics</td>
<td>Contains one or more <code>statistic</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
 <tr>
<td class='threeBullet'>statistic</td>
<td>One <code>statistic</code> element is returned for each <code>accountType</code>.<br /><br />
Returned only if the value of <code>includeStatistics</code> is <code>true</code>. The specific fields depend on the value of <code>accountType</code>.<br /><br />Please note that PayPal batches do not currently return <code>accountType</code> in their <code>statistic</code> element.</td>
<td><div></div></td>
</tr>
<tr>
<td class='fourBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargeAmount</td>
<td>The total charge amount for the specified <code>accountType</code> in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargeCount</td>
<td>The number of charge transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundAmount</td>
<td>The total refund amount for the specified <code>accountType</code> in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundCount</td>
<td>The number of refund transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
 </tr>
<tr>
<td class='fourBullet'>voidCount</td>
<td>The number of voided transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>declineCount</td>
<td>The number of declined transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>errorCount</td>
<td>The number of errored transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>returnedItemAmount</td>
<td>The total amount of returned eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>returnedItemCount</td>
<td>The number of returned eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargebackAmount</td>
<td>The total amount of chargeback eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargebackCount</td>
<td>The number of chargeback eCheck.Net transactions in a batch.<br /><br />
 </td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>correctionNoticeCount</td>
<td>The number of Notices of Change received for eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargeChargeBackAmount</td>
<td>The total amount of charge eCheck.Net transactions charged back in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargeChargeBackCount</td>
<td>The number of charge eCheck.Net transactions charged back in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundChargeBackAmount</td>
<td>The total amount of refund eCheck.Net transactions charged back in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundChargeBackCount</td>
<td>The number of refund eCheck.Net transactions charged back in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>chargeReturnedItemsAmount</td>
<td>The total amount of returned charge eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
 </tr>
<tr>
<td class='fourBullet'>chargeReturnedItemsCount</td>
<td>The number of returned charge eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundReturnedItemsAmount</td>
<td>The total amount of returned refund eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='fourBullet'>refundReturnedItemsCount</td>
<td>The number of returned refund eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-transaction-list">Get Transaction List</h3>
<p>Use this function to return data for all transactions in a specified batch. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit.
No input parameters are required other than the authentication information and a batch ID. However, you can add the sorting and paging options shown below to customize the result set.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-transaction-listTryIt" href="#console-get-transaction-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-transaction-listphp" href="#php-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-transaction-listcs" href="#cs-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
 <li id="JAVA">
<a id="get-transaction-listjava" href="#java-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-transaction-listrb" href="#ruby-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-transaction-listpy" href="#python-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-transaction-listjs" href="#node-get-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-transaction-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-transaction-list">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-transaction-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-transaction-list" spellcheck="false" class="XML XMLRequest">&lt;getTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;batchId&gt;6680535&lt;/batchId&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getTransactionListRequest&gt;
</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-transaction-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;batchId&gt;6680535&lt;/batchId&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getTransactionListRequest&gt;
</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-transaction-list" spellcheck="false" class="JSON JSONRequest">{
  &quot;getTransactionListRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;batchId&quot; : &quot;6680535&quot;,
    &quot;sorting&quot;: {
      &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
      &quot;orderDescending&quot;: &quot;true&quot;
    },
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-transaction-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;getTransactionListRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;batchId&quot; : &quot;6680535&quot;,
    &quot;sorting&quot;: {
      &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
      &quot;orderDescending&quot;: &quot;true&quot;
    },
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-transaction-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-transaction-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-transaction-list"></span>


<div class="errorDetails" id="detailsDiv-get-transaction-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-transaction-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getTransactionListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactions&gt;
    &lt;transaction&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2009-05-30T09:00:00&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2009-05-30T04:00:00&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;settledSuccessfully&lt;/transactionStatus&gt;
      &lt;invoice&gt;INV00001&lt;/invoice&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;amount&gt;2.00&lt;/amount&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;2.00&lt;/settleAmount&gt;
      &lt;subscription&gt;
        &lt;id&gt;145521&lt;/id&gt;
        &lt;payNum&gt;1&lt;/payNum&gt;
      &lt;/subscription&gt;
      &lt;profile&gt;
        &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
        &lt;customerPaymentProfileId&gt;1805324550&lt;/customerPaymentProfileId&gt;
      &lt;/profile&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2009-05-30T09:00:00&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2009-05-30T04:00:00&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;settledSuccessfully&lt;/transactionStatus&gt;
      &lt;invoice&gt;INV00001&lt;/invoice&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;amount&gt;2.00&lt;/amount&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;mobileDeviceId&gt;2354578983274523978&lt;/mobileDeviceId&gt;
    &lt;/transaction&gt;
  &lt;/transactions&gt;
  &lt;totalNumInResultSet&gt;2&lt;/totalNumInResultSet&gt;
&lt;/getTransactionListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-transaction-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getTransactionListResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactions&gt;
    &lt;transaction&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2009-05-30T09:00:00&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2009-05-30T04:00:00&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;settledSuccessfully&lt;/transactionStatus&gt;
      &lt;invoice&gt;INV00001&lt;/invoice&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;amount&gt;2.00&lt;/amount&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;2.00&lt;/settleAmount&gt;
      &lt;subscription&gt;
        &lt;id&gt;145521&lt;/id&gt;
        &lt;payNum&gt;1&lt;/payNum&gt;
      &lt;/subscription&gt;
      &lt;profile&gt;
        &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
        &lt;customerPaymentProfileId&gt;1805324550&lt;/customerPaymentProfileId&gt;
      &lt;/profile&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2009-05-30T09:00:00&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2009-05-30T04:00:00&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;settledSuccessfully&lt;/transactionStatus&gt;
      &lt;invoice&gt;INV00001&lt;/invoice&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;amount&gt;2.00&lt;/amount&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;mobileDeviceId&gt;2354578983274523978&lt;/mobileDeviceId&gt;
    &lt;/transaction&gt;
  &lt;/transactions&gt;
  &lt;totalNumInResultSet&gt;2&lt;/totalNumInResultSet&gt;
&lt;/getTransactionListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-transaction-list">{
  &quot;getTransactionListResponse&quot;: {
    &quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;transactions&quot;: {
      &quot;transaction&quot;: [
        {
          &quot;transId&quot;: &quot;12345&quot;,
          &quot;submitTimeUTC&quot;: &quot;2009-05-30T09:00:00&quot;,
          &quot;submitTimeLocal&quot;: &quot;2009-05-30T04:00:00&quot;,
          &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
          &quot;invoice&quot;: &quot;INV00001&quot;,
          &quot;firstName&quot;: &quot;John&quot;,
          &quot;lastName&quot;: &quot;Doe&quot;,
          &quot;amount&quot;: &quot;2.00&quot;,
          &quot;accountType&quot;: &quot;Visa&quot;,
          &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
          &quot;settleAmount&quot;: &quot;2.00&quot;,
          &quot;subscription&quot;: {
            &quot;id&quot;: &quot;145521&quot;,
            &quot;payNum&quot;: &quot;1&quot;
          },
          &quot;profile&quot;: {
            &quot;customerProfileId&quot;: &quot;1806660050&quot;,
            &quot;customerPaymentProfileId&quot;: &quot;1805324550&quot;
          }
        },
        {
          &quot;transId&quot;: &quot;12345&quot;,
          &quot;submitTimeUTC&quot;: &quot;2009-05-30T09:00:00&quot;,
          &quot;submitTimeLocal&quot;: &quot;2009-05-30T04:00:00&quot;,
          &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
          &quot;invoice&quot;: &quot;INV00001&quot;,
          &quot;firstName&quot;: &quot;John&quot;,
          &quot;lastName&quot;: &quot;Doe&quot;,
          &quot;amount&quot;: &quot;2.00&quot;,
          &quot;accountType&quot;: &quot;Visa&quot;,
          &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
          &quot;marketType&quot;: &quot;eCommerce&quot;,
          &quot;product&quot;: &quot;Card Not Present&quot;,
          &quot;mobileDeviceId&quot;: &quot;2354578983274523978&quot;
        }
      ]
    },
    &quot;totalNumInResultSet&quot;: &quot;2&quot;
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-transaction-list" style="display: none !important">{
  &quot;getTransactionListResponse&quot;: {
    &quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;transactions&quot;: {
      &quot;transaction&quot;: [
        {
          &quot;transId&quot;: &quot;12345&quot;,
          &quot;submitTimeUTC&quot;: &quot;2009-05-30T09:00:00&quot;,
          &quot;submitTimeLocal&quot;: &quot;2009-05-30T04:00:00&quot;,
          &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
          &quot;invoice&quot;: &quot;INV00001&quot;,
          &quot;firstName&quot;: &quot;John&quot;,
          &quot;lastName&quot;: &quot;Doe&quot;,
          &quot;amount&quot;: &quot;2.00&quot;,
          &quot;accountType&quot;: &quot;Visa&quot;,
          &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
          &quot;settleAmount&quot;: &quot;2.00&quot;,
          &quot;subscription&quot;: {
            &quot;id&quot;: &quot;145521&quot;,
            &quot;payNum&quot;: &quot;1&quot;
          },
          &quot;profile&quot;: {
            &quot;customerProfileId&quot;: &quot;1806660050&quot;,
            &quot;customerPaymentProfileId&quot;: &quot;1805324550&quot;
          }
        },
        {
          &quot;transId&quot;: &quot;12345&quot;,
          &quot;submitTimeUTC&quot;: &quot;2009-05-30T09:00:00&quot;,
          &quot;submitTimeLocal&quot;: &quot;2009-05-30T04:00:00&quot;,
          &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
          &quot;invoice&quot;: &quot;INV00001&quot;,
          &quot;firstName&quot;: &quot;John&quot;,
          &quot;lastName&quot;: &quot;Doe&quot;,
          &quot;amount&quot;: &quot;2.00&quot;,
          &quot;accountType&quot;: &quot;Visa&quot;,
          &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
          &quot;marketType&quot;: &quot;eCommerce&quot;,
          &quot;product&quot;: &quot;Card Not Present&quot;,
          &quot;mobileDeviceId&quot;: &quot;2354578983274523978&quot;
        }
      ]
    },
    &quot;totalNumInResultSet&quot;: &quot;2&quot;
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-transaction-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-transaction-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-transaction-list"></div>
<div id="showCode-php-get-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-transaction-list"></a>
</p>
<textarea class="php" id="textarea-php-get-transaction-list" name="textarea-php-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-transaction-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-transaction-list"></div>
<div id="showCode-cs-get-transaction-list">
<p>
 This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-transaction-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-transaction-list" name="textarea-cs-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-transaction-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-transaction-list"></div>
<div id="showCode-java-get-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-transaction-list"></a>
</p>
<textarea class="java" id="textarea-java-get-transaction-list" name="textarea-java-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-transaction-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-transaction-list"></div>
<div id="showCode-rb-get-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-transaction-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-transaction-list" name="textarea-rb-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-transaction-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-transaction-list"></div>
<div id="showCode-py-get-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-transaction-list"></a>
</p>
<textarea class="python" id="textarea-py-get-transaction-list" name="textarea-py-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-transaction-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-transaction-list"></div>
<div id="showCode-js-get-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-transaction-list"></a>
</p>
<textarea class="node" id="textarea-js-get-transaction-list" name="textarea-js-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-transaction-list">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-transaction-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-transaction-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-transaction-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-transaction-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-transaction-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-transaction-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-transaction-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-transaction-list"></div>
<div id="showCode-php-get-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-transaction-list" name="textarea-php-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-transaction-list"></div>
<div id="showCode-cs-get-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-transaction-list" name="textarea-cs-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-transaction-list"></div>
<div id="showCode-java-get-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-transaction-list" name="textarea-java-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-transaction-list"></div>
<div id="showCode-rb-get-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-transaction-list" name="textarea-rb-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-transaction-list"></div>
<div id="showCode-py-get-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-transaction-list" name="textarea-py-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-transaction-list"></div>
<div id="showCode-js-get-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-transaction-list" name="textarea-js-get-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-transaction-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-transaction-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-transaction-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-transaction-list">
<div class="panel-body">
<p><em>getTransactionListRequest</em>
</p>
 <table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>batchId</td>
<td>The identification number for the batch.<br /><br />
</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
<td>Order of transactions in response.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>id</code> to sort by transaction ID. Use <code>submitTimeUTC</code> to sort by transaction submission time, in UTC.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
<td>Sort the transactions in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 transactions per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 transactions, setting <code>offset</code> to 2 will return the second 100 transactions, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
 </div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-transaction-list">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-transaction-list">
<div class="panel-body">
<p><em>getTransactionListResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactions</td>
<td>Contains information about all transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transaction</td>
<td>Contains information about one transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeLocal</td>
<td>Date and time the transaction was submitted, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>transactionStatus</td>
<td>The status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>authorizedPendingCapture</code><br /><code>capturedPendingSettlement</code><br /><code>communicationError</code><br /><code>refundSettledSuccessfully</code><br /><code>refundPendingSettlement</code><br /><code>approvedReview</code><br /><code>declined</code><br /><code>couldNotVoid</code><br /><code>expired</code><br /><code>generalError</code><br /><code>failedReview</code><br /><code>settledSuccessfully</code><br /><code>settlementError</code><br /><code>underReview</code><br /><code>voided</code><br /><code>FDSPendingReview</code><br /><code>FDSAuthorizedPendingReview</code><br /><code>returnedItem</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String. 20-character maximum.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>settleAmount</td>
<td>The amount that was submitted for settlement.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='twoBullet'>hasReturnedItems</td>
<td>Indicates that this transaction contains returned eCheck.Net transactions.<br /><br />
More detailed information can be seen by calling <code>getTransactionDetailsResponse</code> for the transaction.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>subscription</td>
<td>Contains subscription information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>id</td>
<td>The subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payNum</td>
<td>Identifies the number of this transaction, in terms of how many transactions have been submitted for this subscription.<br /><br />
For example, the third transaction processed for this subscription will return <code>payNum</code> set to <code>3</code>.</td>
<td><div>Numeric string, between 1 and 999.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>profile</td>
<td><strong>Conditional.</strong><br /><br />Contains customer profile information used for this transaction.<br /><br />
The element only appears if you use a customer profile to generate the transaction.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>customerPaymentProfileId</td>
<td>The ID of the customer payment profile used to create this payment transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>hasReturnedItems</td>
<td>Indicates that this transaction contains returned items.<br /><br />
This element is used only for eCheck.Net transactions.<br /><br />For details on the returned items, use <code>getTransactionDetailsResponse</code>. </td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code>.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Card Not Present</code> or <code>Card Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>mobileDeviceId</td>
<td>The unique identifier of the mobile device.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-unsettled-transaction-list">Get Unsettled Transaction List</h3>
<p>Use this function to get data for unsettled transactions. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit.
No input parameters are required other than the authentication information. However, you can add the sorting and paging options shown below to customize the result set.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-unsettled-transaction-listTryIt" href="#console-get-unsettled-transaction-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-unsettled-transaction-listphp" href="#php-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-unsettled-transaction-listcs" href="#cs-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-unsettled-transaction-listjava" href="#java-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-unsettled-transaction-listrb" href="#ruby-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-unsettled-transaction-listpy" href="#python-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-unsettled-transaction-listjs" href="#node-get-unsettled-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-unsettled-transaction-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-unsettled-transaction-list">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-unsettled-transaction-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-unsettled-transaction-list" spellcheck="false" class="XML XMLRequest">&lt;getUnsettledTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getUnsettledTransactionListRequest&gt;
</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-unsettled-transaction-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getUnsettledTransactionListRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getUnsettledTransactionListRequest&gt;
</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-unsettled-transaction-list" spellcheck="false" class="JSON JSONRequest">{
    &quot;getUnsettledTransactionListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
            &quot;orderDescending&quot;: true
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;100&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-unsettled-transaction-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getUnsettledTransactionListRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
            &quot;orderDescending&quot;: true
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;100&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-unsettled-transaction-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-unsettled-transaction-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-unsettled-transaction-list"></span>


<div class="errorDetails" id="detailsDiv-get-unsettled-transaction-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-unsettled-transaction-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getUnsettledTransactionListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactions&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186960&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:48:37Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:18:37&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;capturedPendingSettlement&lt;/transactionStatus&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;accountType&gt;Mastercard&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
      &lt;settleAmount&gt;5&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;profile&gt;
        &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
        &lt;customerPaymentProfileId&gt;1801644163&lt;/customerPaymentProfileId&gt;
      &lt;/profile&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186959&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:34:57Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:04:57&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;voided&lt;/transactionStatus&gt;
      &lt;invoiceNumber&gt;none&lt;/invoiceNumber&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;0&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;hasReturnedItemsSpecified&gt;false&lt;/hasReturnedItemsSpecified&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186958&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:33:22Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:03:22&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;voided&lt;/transactionStatus&gt;
      &lt;invoiceNumber&gt;none&lt;/invoiceNumber&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;0&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;hasReturnedItemsSpecified&gt;false&lt;/hasReturnedItemsSpecified&gt;
    &lt;/transaction&gt;
  &lt;/transactions&gt;
  &lt;totalNumInResultSet&gt;3&lt;/totalNumInResultSet&gt;
&lt;/getUnsettledTransactionListResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-unsettled-transaction-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getUnsettledTransactionListResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactions&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186960&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:48:37Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:18:37&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;capturedPendingSettlement&lt;/transactionStatus&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;accountType&gt;Mastercard&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
      &lt;settleAmount&gt;5&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;profile&gt;
        &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
        &lt;customerPaymentProfileId&gt;1801644163&lt;/customerPaymentProfileId&gt;
      &lt;/profile&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186959&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:34:57Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:04:57&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;voided&lt;/transactionStatus&gt;
      &lt;invoiceNumber&gt;none&lt;/invoiceNumber&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;0&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;hasReturnedItemsSpecified&gt;false&lt;/hasReturnedItemsSpecified&gt;
    &lt;/transaction&gt;
    &lt;transaction&gt;
      &lt;transId&gt;2149186958&lt;/transId&gt;
      &lt;submitTimeUTC&gt;2017-06-16T06:33:22Z&lt;/submitTimeUTC&gt;
      &lt;submitTimeLocal&gt;2017-06-16T04:03:22&lt;/submitTimeLocal&gt;
      &lt;transactionStatus&gt;voided&lt;/transactionStatus&gt;
      &lt;invoiceNumber&gt;none&lt;/invoiceNumber&gt;
      &lt;firstName&gt;John&lt;/firstName&gt;
      &lt;lastName&gt;Doe&lt;/lastName&gt;
      &lt;accountType&gt;Visa&lt;/accountType&gt;
      &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
      &lt;settleAmount&gt;0&lt;/settleAmount&gt;
      &lt;marketType&gt;eCommerce&lt;/marketType&gt;
      &lt;product&gt;Card Not Present&lt;/product&gt;
      &lt;hasReturnedItemsSpecified&gt;false&lt;/hasReturnedItemsSpecified&gt;
    &lt;/transaction&gt;
  &lt;/transactions&gt;
  &lt;totalNumInResultSet&gt;3&lt;/totalNumInResultSet&gt;
&lt;/getUnsettledTransactionListResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-unsettled-transaction-list">{
  &quot;transactions&quot;: [
    {
      &quot;transId&quot;: &quot;2149186960&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:48:37Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:18:37&quot;,
      &quot;transactionStatus&quot;: &quot;capturedPendingSettlement&quot;,
      &quot;firstName&quot;: &quot;Ellen&quot;,
      &quot;lastName&quot;: &quot;Johnson&quot;,
      &quot;accountType&quot;: &quot;Mastercard&quot;,
      &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
      &quot;settleAmount&quot;: 5,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;profile&quot;: {
         &quot;customerProfileId&quot;: &quot;1806660050&quot;,
         &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
       }
    },
    {
      &quot;transId&quot;: &quot;2149186959&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:34:57Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:04:57&quot;,
      &quot;transactionStatus&quot;: &quot;voided&quot;,
      &quot;invoiceNumber&quot;: &quot;none&quot;,
      &quot;firstName&quot;: &quot;John&quot;,
      &quot;lastName&quot;: &quot;Doe&quot;,
      &quot;accountType&quot;: &quot;Visa&quot;,
      &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
      &quot;settleAmount&quot;: 0,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;hasReturnedItemsSpecified&quot;: false
    },
    {
      &quot;transId&quot;: &quot;2149186958&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:33:22Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:03:22&quot;,
      &quot;transactionStatus&quot;: &quot;voided&quot;,
      &quot;invoiceNumber&quot;: &quot;none&quot;,
      &quot;firstName&quot;: &quot;John&quot;,
      &quot;lastName&quot;: &quot;Doe&quot;,
      &quot;accountType&quot;: &quot;Visa&quot;,
      &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
      &quot;settleAmount&quot;: 0,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;hasReturnedItemsSpecified&quot;: false
    }
  ],
  &quot;totalNumInResultSet&quot;: 3,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-unsettled-transaction-list" style="display: none !important">{
  &quot;transactions&quot;: [
    {
      &quot;transId&quot;: &quot;2149186960&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:48:37Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:18:37&quot;,
      &quot;transactionStatus&quot;: &quot;capturedPendingSettlement&quot;,
      &quot;firstName&quot;: &quot;Ellen&quot;,
      &quot;lastName&quot;: &quot;Johnson&quot;,
      &quot;accountType&quot;: &quot;Mastercard&quot;,
      &quot;accountNumber&quot;: &quot;XXXX0015&quot;,
      &quot;settleAmount&quot;: 5,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;profile&quot;: {
         &quot;customerProfileId&quot;: &quot;1806660050&quot;,
         &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
       }
    },
    {
      &quot;transId&quot;: &quot;2149186959&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:34:57Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:04:57&quot;,
      &quot;transactionStatus&quot;: &quot;voided&quot;,
      &quot;invoiceNumber&quot;: &quot;none&quot;,
      &quot;firstName&quot;: &quot;John&quot;,
      &quot;lastName&quot;: &quot;Doe&quot;,
      &quot;accountType&quot;: &quot;Visa&quot;,
      &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
      &quot;settleAmount&quot;: 0,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;hasReturnedItemsSpecified&quot;: false
    },
    {
      &quot;transId&quot;: &quot;2149186958&quot;,
      &quot;submitTimeUTC&quot;: &quot;2017-06-16T06:33:22Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2017-06-16T04:03:22&quot;,
      &quot;transactionStatus&quot;: &quot;voided&quot;,
      &quot;invoiceNumber&quot;: &quot;none&quot;,
      &quot;firstName&quot;: &quot;John&quot;,
      &quot;lastName&quot;: &quot;Doe&quot;,
      &quot;accountType&quot;: &quot;Visa&quot;,
      &quot;accountNumber&quot;: &quot;XXXX1111&quot;,
      &quot;settleAmount&quot;: 0,
      &quot;marketType&quot;: &quot;eCommerce&quot;,
      &quot;product&quot;: &quot;Card Not Present&quot;,
      &quot;hasReturnedItemsSpecified&quot;: false
    }
  ],
  &quot;totalNumInResultSet&quot;: 3,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-unsettled-transaction-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-unsettled-transaction-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont phpCodeCont">
 <div class="sampleWarningCont" id="warning-php-get-unsettled-transaction-list"></div>
<div id="showCode-php-get-unsettled-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-unsettled-transaction-list"></a>
</p>
<textarea class="php" id="textarea-php-get-unsettled-transaction-list" name="textarea-php-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-unsettled-transaction-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-unsettled-transaction-list"></div>
<div id="showCode-cs-get-unsettled-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-unsettled-transaction-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-unsettled-transaction-list" name="textarea-cs-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-unsettled-transaction-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-unsettled-transaction-list"></div>
<div id="showCode-java-get-unsettled-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-unsettled-transaction-list"></a>
</p>
<textarea class="java" id="textarea-java-get-unsettled-transaction-list" name="textarea-java-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-unsettled-transaction-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-unsettled-transaction-list"></div>
<div id="showCode-rb-get-unsettled-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-unsettled-transaction-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-unsettled-transaction-list" name="textarea-rb-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-unsettled-transaction-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-unsettled-transaction-list"></div>
 <div id="showCode-py-get-unsettled-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-unsettled-transaction-list"></a>
</p>
<textarea class="python" id="textarea-py-get-unsettled-transaction-list" name="textarea-py-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-unsettled-transaction-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-unsettled-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-unsettled-transaction-list"></div>
<div id="showCode-js-get-unsettled-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-unsettled-transaction-list"></a>
</p>
<textarea class="node" id="textarea-js-get-unsettled-transaction-list" name="textarea-js-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-unsettled-transaction-list">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-unsettled-transaction-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-unsettled-transaction-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-unsettled-transaction-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-unsettled-transaction-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-unsettled-transaction-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-unsettled-transaction-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-unsettled-transaction-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-unsettled-transaction-list"></div>
<div id="showCode-php-get-unsettled-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-unsettled-transaction-list" name="textarea-php-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-unsettled-transaction-list"></div>
<div id="showCode-cs-get-unsettled-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-unsettled-transaction-list" name="textarea-cs-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-unsettled-transaction-list"></div>
<div id="showCode-java-get-unsettled-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-unsettled-transaction-list" name="textarea-java-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-unsettled-transaction-list"></div>
<div id="showCode-rb-get-unsettled-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-unsettled-transaction-list" name="textarea-rb-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-unsettled-transaction-list"></div>
<div id="showCode-py-get-unsettled-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-unsettled-transaction-list" name="textarea-py-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>

<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-unsettled-transaction-list"></div>
<div id="showCode-js-get-unsettled-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-unsettled-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-unsettled-transaction-list" name="textarea-js-get-unsettled-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-unsettled-transaction-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-unsettled-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-unsettled-transaction-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-unsettled-transaction-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-unsettled-transaction-list">
<div class="panel-body">
<p><em>getUnsettledTransactionListRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
<td>Order of transactions in response.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>id</code> to sort by transaction ID. Use <code>submitTimeUTC</code> to sort by transaction submission time, in UTC.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
 <td>Sort the transactions in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 transactions per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 transactions, setting <code>offset</code> to 2 will return the second 100 transactions, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-unsettled-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-unsettled-transaction-list">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-unsettled-transaction-list">
<div class="panel-body">
<p><em>getUnsettledTransactionListResponse</em>
</p>
<table class="table table-condensed">
 <thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactions</td>
<td>Contains information about all transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transaction</td>
<td>Contains information about one transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeLocal</td>
<td>Date and time the transaction was submitted, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>transactionStatus</td>
<td>The status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>authorizedPendingCapture</code><br /><code>capturedPendingSettlement</code><br /><code>communicationError</code><br /><code>refundSettledSuccessfully</code><br /><code>refundPendingSettlement</code><br /><code>approvedReview</code><br /><code>declined</code><br /><code>couldNotVoid</code><br /><code>expired</code><br /><code>generalError</code><br /><code>failedReview</code><br /><code>settledSuccessfully</code><br /><code>settlementError</code><br /><code>underReview</code><br /><code>voided</code><br /><code>FDSPendingReview</code><br /><code>FDSAuthorizedPendingReview</code><br /><code>returnedItem</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String. 20-character maximum.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
 </tr>
<tr>
<td class='twoBullet'>settleAmount</td>
<td>The amount that was submitted for settlement.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='twoBullet'>hasReturnedItems</td>
<td>Indicates that this transaction contains returned eCheck.Net transactions.<br /><br />
More detailed information can be seen by calling <code>getTransactionDetailsResponse</code> for the transaction.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>subscription</td>
<td>Contains subscription information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>id</td>
<td>The subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payNum</td>
<td>Identifies the number of this transaction, in terms of how many transactions have been submitted for this subscription.<br /><br />
For example, the third transaction processed for this subscription will return <code>payNum</code> set to <code>3</code>.</td>
<td><div>Numeric string, between 1 and 999.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br /> Either <code>Card Not Present</code> or <code>Card Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>mobileDeviceId</td>
<td>The unique identifier of the mobile device.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>profile</td>
<td>Contains customer profile information used for this transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>customerPaymentProfileId</td>
<td>The ID of the customer payment profile used to charge this transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-customer-profile-transaction-list">Get Customer Profile Transaction List</h3>
 <p>Use this method to retrieve transactions for a specific customer profile or customer payment profile. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit.
If no customer payment profile is supplied then this function will return transactions for all customer payment profiles associated with the specified customer profile. This allows you to retrieve all transactions for that customer regardless of card type (such as Visa or Mastercard) or payment type (such as credit card or bank account).
You can add the sorting and paging options shown below to customize the result set.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-customer-profile-transaction-listTryIt" href="#console-get-customer-profile-transaction-list" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-customer-profile-transaction-listphp" href="#php-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-customer-profile-transaction-listcs" href="#cs-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-customer-profile-transaction-listjava" href="#java-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-customer-profile-transaction-listrb" href="#ruby-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-customer-profile-transaction-listpy" href="#python-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-customer-profile-transaction-listjs" href="#node-get-customer-profile-transaction-list" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-customer-profile-transaction-list">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-customer-profile-transaction-list">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-customer-profile-transaction-list">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-customer-profile-transaction-list" spellcheck="false" class="XML XMLRequest">&lt;getTransactionListForCustomerRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getTransactionListForCustomerRequest&gt;
</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-customer-profile-transaction-list" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getTransactionListForCustomerRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
    &lt;/merchantAuthentication&gt;
    &lt;customerProfileId&gt;10000&lt;/customerProfileId&gt;
    &lt;customerPaymentProfileId&gt;20000&lt;/customerPaymentProfileId&gt;
    &lt;sorting&gt;
      &lt;orderBy&gt;submitTimeUTC&lt;/orderBy&gt;
      &lt;orderDescending&gt;true&lt;/orderDescending&gt;
    &lt;/sorting&gt;
    &lt;paging&gt;
      &lt;limit&gt;100&lt;/limit&gt;
      &lt;offset&gt;1&lt;/offset&gt;
    &lt;/paging&gt;
&lt;/getTransactionListForCustomerRequest&gt;
</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-customer-profile-transaction-list" spellcheck="false" class="JSON JSONRequest">{
    &quot;getTransactionListForCustomerRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;40025205&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;40027471&quot;,
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
            &quot;orderDescending&quot;: false
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;100&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-customer-profile-transaction-list" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getTransactionListForCustomerRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;40025205&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;40027471&quot;,
        &quot;sorting&quot;: {
            &quot;orderBy&quot;: &quot;submitTimeUTC&quot;,
            &quot;orderDescending&quot;: false
        },
        &quot;paging&quot;: {
            &quot;limit&quot;: &quot;100&quot;,
            &quot;offset&quot;: &quot;1&quot;
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-customer-profile-transaction-list" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-customer-profile-transaction-list" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-customer-profile-transaction-list"></span>


<div class="errorDetails" id="detailsDiv-get-customer-profile-transaction-list">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-customer-profile-transaction-list">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getTransactionListForCustomerResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactions&gt;
        &lt;transaction&gt;
            &lt;transId&gt;2158982012&lt;/transId&gt;
            &lt;submitTimeUTC&gt;2011-04-05T17:30:21Z&lt;/submitTimeUTC&gt;
            &lt;submitTimeLocal&gt;2011-04-05T18:30:21&lt;/submitTimeLocal&gt;
            &lt;transactionStatus&gt;authorizedPendingCapture&lt;/transactionStatus&gt;
            &lt;invoiceNumber&gt;123124123432&lt;/invoiceNumber&gt;
            &lt;firstName&gt;Unit&lt;/firstName&gt;
            &lt;lastName&gt;Tests&lt;/lastName&gt;
            &lt;accountType&gt;Visa&lt;/accountType&gt;
            &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
            &lt;settleAmount&gt;1.11&lt;/settleAmount&gt;
            &lt;profile&gt;
              &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
              &lt;customerPaymentProfileId&gt;1805324550&lt;/customerPaymentProfileId&gt;
            &lt;/profile&gt;
        &lt;/transaction&gt;
    &lt;/transactions&gt;
&lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
&lt;/getTransactionListForCustomerResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-customer-profile-transaction-list" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getTransactionListForCustomerResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transactions&gt;
        &lt;transaction&gt;
            &lt;transId&gt;2158982012&lt;/transId&gt;
            &lt;submitTimeUTC&gt;2011-04-05T17:30:21Z&lt;/submitTimeUTC&gt;
            &lt;submitTimeLocal&gt;2011-04-05T18:30:21&lt;/submitTimeLocal&gt;
            &lt;transactionStatus&gt;authorizedPendingCapture&lt;/transactionStatus&gt;
            &lt;invoiceNumber&gt;123124123432&lt;/invoiceNumber&gt;
            &lt;firstName&gt;Unit&lt;/firstName&gt;
            &lt;lastName&gt;Tests&lt;/lastName&gt;
            &lt;accountType&gt;Visa&lt;/accountType&gt;
            &lt;accountNumber&gt;XXXX1111&lt;/accountNumber&gt;
            &lt;settleAmount&gt;1.11&lt;/settleAmount&gt;
            &lt;profile&gt;
              &lt;customerProfileId&gt;1806660050&lt;/customerProfileId&gt;
              &lt;customerPaymentProfileId&gt;1805324550&lt;/customerPaymentProfileId&gt;
            &lt;/profile&gt;
        &lt;/transaction&gt;
    &lt;/transactions&gt;
&lt;totalNumInResultSet&gt;1&lt;/totalNumInResultSet&gt;
&lt;/getTransactionListForCustomerResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-customer-profile-transaction-list">{
	&quot;getTransactionListForCustomerResponse&quot;: {
		&quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
		&quot;transactions&quot;: [{
			&quot;transId&quot;: &quot;2149186960&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:48:37Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:18:37&quot;,
			&quot;transactionStatus&quot;: &quot;capturedPendingSettlement&quot;,
			&quot;firstName&quot;: &quot;Ellen&quot;,
			&quot;lastName&quot;: &quot;Johnson&quot;,
			&quot;accountType&quot;: &quot;Mastercard&quot;,
			&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
			&quot;settleAmount&quot;: 5,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}, {
			&quot;transId&quot;: &quot;2149186959&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:34:57Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:04:57&quot;,
			&quot;transactionStatus&quot;: &quot;voided&quot;,
			&quot;invoiceNumber&quot;: &quot;none&quot;,
			&quot;firstName&quot;: &quot;John&quot;,
			&quot;lastName&quot;: &quot;Doe&quot;,
			&quot;accountType&quot;: &quot;Visa&quot;,
			&quot;accountNumber&quot;: &quot;XXXX1111&quot;,
			&quot;settleAmount&quot;: 0,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}, {
			&quot;transId&quot;: &quot;2149186958&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:33:22Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:03:22&quot;,
			&quot;transactionStatus&quot;: &quot;voided&quot;,
			&quot;invoiceNumber&quot;: &quot;none&quot;,
			&quot;firstName&quot;: &quot;John&quot;,
			&quot;lastName&quot;: &quot;Doe&quot;,
			&quot;accountType&quot;: &quot;Visa&quot;,
			&quot;accountNumber&quot;: &quot;XXXX1111&quot;,
			&quot;settleAmount&quot;: 0,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}],
		&quot;messages&quot;: {
			&quot;resultCode&quot;: &quot;Ok&quot;,
			&quot;message&quot;: [{
				&quot;code&quot;: &quot;I00001&quot;,
				&quot;text&quot;: &quot;Successful.&quot;
			}]
		},
		&quot;totalNumInResultSet&quot;: &quot;3&quot;
	}
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-customer-profile-transaction-list" style="display: none !important">{
	&quot;getTransactionListForCustomerResponse&quot;: {
		&quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
		&quot;transactions&quot;: [{
			&quot;transId&quot;: &quot;2149186960&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:48:37Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:18:37&quot;,
			&quot;transactionStatus&quot;: &quot;capturedPendingSettlement&quot;,
			&quot;firstName&quot;: &quot;Ellen&quot;,
			&quot;lastName&quot;: &quot;Johnson&quot;,
			&quot;accountType&quot;: &quot;Mastercard&quot;,
			&quot;accountNumber&quot;: &quot;XXXX0015&quot;,
			&quot;settleAmount&quot;: 5,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}, {
			&quot;transId&quot;: &quot;2149186959&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:34:57Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:04:57&quot;,
			&quot;transactionStatus&quot;: &quot;voided&quot;,
			&quot;invoiceNumber&quot;: &quot;none&quot;,
			&quot;firstName&quot;: &quot;John&quot;,
			&quot;lastName&quot;: &quot;Doe&quot;,
			&quot;accountType&quot;: &quot;Visa&quot;,
			&quot;accountNumber&quot;: &quot;XXXX1111&quot;,
			&quot;settleAmount&quot;: 0,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}, {
			&quot;transId&quot;: &quot;2149186958&quot;,
			&quot;submitTimeUTC&quot;: &quot;2014-11-01T06:33:22Z&quot;,
			&quot;submitTimeLocal&quot;: &quot;2014-11-01T04:03:22&quot;,
			&quot;transactionStatus&quot;: &quot;voided&quot;,
			&quot;invoiceNumber&quot;: &quot;none&quot;,
			&quot;firstName&quot;: &quot;John&quot;,
			&quot;lastName&quot;: &quot;Doe&quot;,
			&quot;accountType&quot;: &quot;Visa&quot;,
			&quot;accountNumber&quot;: &quot;XXXX1111&quot;,
			&quot;settleAmount&quot;: 0,
			&quot;marketType&quot;: &quot;eCommerce&quot;,
			&quot;product&quot;: &quot;Card Not Present&quot;,
                        &quot;profile&quot;: {
                          &quot;customerProfileId&quot;: &quot;1806660050&quot;,
                          &quot;customerPaymentProfileId&quot;: &quot;1801644163&quot;
                        }
		}],
		&quot;messages&quot;: {
			&quot;resultCode&quot;: &quot;Ok&quot;,
			&quot;message&quot;: [{
				&quot;code&quot;: &quot;I00001&quot;,
				&quot;text&quot;: &quot;Successful.&quot;
			}]
		},
		&quot;totalNumInResultSet&quot;: &quot;3&quot;
	}
}</code>
                                                </pre>
<div id="txtRespLoader-get-customer-profile-transaction-list" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
 </div>
</div>
<div class="tab-pane fade" id="php-get-customer-profile-transaction-list">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-customer-profile-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-customer-profile-transaction-list"></div>
<div id="showCode-php-get-customer-profile-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile-transaction-list"></a>
</p>
<textarea class="php" id="textarea-php-get-customer-profile-transaction-list" name="textarea-php-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-customer-profile-transaction-list">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-customer-profile-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile-transaction-list"></div>
<div id="showCode-cs-get-customer-profile-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile-transaction-list"></a>
</p>
<textarea class="cs" id="textarea-cs-get-customer-profile-transaction-list" name="textarea-cs-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="java-get-customer-profile-transaction-list">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-customer-profile-transaction-list">
 </div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-customer-profile-transaction-list"></div>
<div id="showCode-java-get-customer-profile-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile-transaction-list"></a>
</p>
<textarea class="java" id="textarea-java-get-customer-profile-transaction-list" name="textarea-java-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-customer-profile-transaction-list">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-customer-profile-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile-transaction-list"></div>
<div id="showCode-rb-get-customer-profile-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile-transaction-list"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-customer-profile-transaction-list" name="textarea-rb-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-customer-profile-transaction-list">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-customer-profile-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-customer-profile-transaction-list"></div>
<div id="showCode-py-get-customer-profile-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile-transaction-list"></a>
</p>
<textarea class="python" id="textarea-py-get-customer-profile-transaction-list" name="textarea-py-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-customer-profile-transaction-list">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-customer-profile-transaction-list">
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-customer-profile-transaction-list"></div>
<div id="showCode-js-get-customer-profile-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile-transaction-list"></a>
</p>
<textarea class="node" id="textarea-js-get-customer-profile-transaction-list" name="textarea-js-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-customer-profile-transaction-list">
<div class="toggleButton-cont">
 <span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-customer-profile-transaction-list">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-customer-profile-transaction-list">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-customer-profile-transaction-list">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-customer-profile-transaction-list">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-customer-profile-transaction-list">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-customer-profile-transaction-list">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-customer-profile-transaction-list">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-customer-profile-transaction-list"></div>
<div id="showCode-php-get-customer-profile-transaction-list">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-customer-profile-transaction-list" name="textarea-php-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-customer-profile-transaction-list"></div>
<div id="showCode-cs-get-customer-profile-transaction-list">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-customer-profile-transaction-list" name="textarea-cs-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-customer-profile-transaction-list"></div>
<div id="showCode-java-get-customer-profile-transaction-list">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-customer-profile-transaction-list" name="textarea-java-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-customer-profile-transaction-list"></div>
<div id="showCode-rb-get-customer-profile-transaction-list">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-customer-profile-transaction-list" name="textarea-rb-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-customer-profile-transaction-list"></div>
<div id="showCode-py-get-customer-profile-transaction-list">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-customer-profile-transaction-list" name="textarea-py-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-customer-profile-transaction-list"></div>
<div id="showCode-js-get-customer-profile-transaction-list">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-customer-profile-transaction-list"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-customer-profile-transaction-list" name="textarea-js-get-customer-profile-transaction-list" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-customer-profile-transaction-list" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-customer-profile-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile-transaction-list">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-customer-profile-transaction-list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-customer-profile-transaction-list">
<div class="panel-body">
<p><em>getTransactionListForCustomerRequest</em>
</p>
 <table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>customerPaymentProfileIdList</td>
<td>A list of all payment profile IDs created with the request.<br /><br />
The payment profile IDs are returned in the same order as they were in the request.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>sorting</td>
<td>Contains sorting information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>orderBy</td>
<td>Order of results in response.<br /><br />
</td>
<td><div>String.<br /><br />Use <code>id</code> to sort results by payment profile ID.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>orderDescending</td>
<td>Sort the results in descending order.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 payment profiles per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 profiles, setting <code>offset</code> to 2 will return the second 100 profiles, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-customer-profile-transaction-list">
<h4 class="panel-title">
<a data-parent="#accordion-get-customer-profile-transaction-list">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-customer-profile-transaction-list">
<div class="panel-body">
<p><em>getTransactionListForCustomerResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactions</td>
<td>Contains information about all transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transaction</td>
<td>Contains information about one transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
 <td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>submitTimeLocal</td>
<td>Date and time the transaction was submitted, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>transactionStatus</td>
<td>The status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>authorizedPendingCapture</code><br /><code>capturedPendingSettlement</code><br /><code>communicationError</code><br /><code>refundSettledSuccessfully</code><br /><code>refundPendingSettlement</code><br /><code>approvedReview</code><br /><code>declined</code><br /><code>couldNotVoid</code><br /><code>expired</code><br /><code>generalError</code><br /><code>failedReview</code><br /><code>settledSuccessfully</code><br /><code>settlementError</code><br /><code>underReview</code><br /><code>voided</code><br /><code>FDSPendingReview</code><br /><code>FDSAuthorizedPendingReview</code><br /><code>returnedItem</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>settleAmount</td>
<td>The amount that was submitted for settlement.<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='twoBullet'>hasReturnedItems</td>
<td>Indicates that this transaction contains returned eCheck.Net transactions.<br /><br />
More detailed information can be seen by calling <code>getTransactionDetailsResponse</code> for the transaction.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>subscription</td>
<td>Contains subscription information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>id</td>
<td>The subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>payNum</td>
<td>Identifies the number of this transaction, in terms of how many transactions have been submitted for this subscription.<br /><br />
For example, the third transaction processed for this subscription will return <code>payNum</code> set to <code>3</code>.</td>
<td><div>Numeric string, between 1 and 999.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Card Not Present</code> or <code>Card Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>mobileDeviceId</td>
<td>The unique identifier of the mobile device.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>profile</td>
<td>Contains customer profile information used for this transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
 </td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>customerPaymentProfileId</td>
<td>The ID of the customer payment profile used to charge this transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-transaction-details">Get Transaction Details</h3>
<p>Use this function to get detailed information about a specific transaction.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-transaction-detailsTryIt" href="#console-get-transaction-details" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-transaction-detailsphp" href="#php-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-transaction-detailscs" href="#cs-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-transaction-detailsjava" href="#java-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-transaction-detailsrb" href="#ruby-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-transaction-detailspy" href="#python-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-transaction-detailsjs" href="#node-get-transaction-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-transaction-details">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-transaction-details">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-transaction-details">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-transaction-details" spellcheck="false" class="XML XMLRequest">&lt;getTransactionDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
      &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
      &lt;/merchantAuthentication&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
&lt;/getTransactionDetailsRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-transaction-details" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getTransactionDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
      &lt;merchantAuthentication&gt;
        &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
        &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
      &lt;/merchantAuthentication&gt;
      &lt;transId&gt;12345&lt;/transId&gt;
&lt;/getTransactionDetailsRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-transaction-details" spellcheck="false" class="JSON JSONRequest">{
    &quot;getTransactionDetailsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transId&quot;: &quot;12345&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-transaction-details" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getTransactionDetailsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;transId&quot;: &quot;12345&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-transaction-details" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-transaction-details" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-transaction-details"></span>


<div class="errorDetails" id="detailsDiv-get-transaction-details">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-transaction-details">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getTransactionDetailsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transaction&gt;
        &lt;transId&gt;40022826172&lt;/transId&gt;
        &lt;submitTimeUTC&gt;2018-12-14T08:54:33.177Z&lt;/submitTimeUTC&gt;
        &lt;submitTimeLocal&gt;2018-12-14T00:54:33.177&lt;/submitTimeLocal&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;transactionStatus&gt;pendingFinalSettlement&lt;/transactionStatus&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;responseReasonCode&gt;1&lt;/responseReasonCode&gt;
        &lt;subscription&gt;
            &lt;id&gt;5486668&lt;/id&gt;
            &lt;payNum&gt;1&lt;/payNum&gt;
        &lt;/subscription&gt;
        &lt;responseReasonDescription&gt;Approval&lt;/responseReasonDescription&gt;
        &lt;authCode&gt;12CD56&lt;/authCode&gt;
        &lt;AVSResponse&gt;Y&lt;/AVSResponse&gt;
        &lt;cardCodeResponse&gt;M&lt;/cardCodeResponse&gt;
        &lt;batch&gt;
            &lt;batchId&gt;8863437&lt;/batchId&gt;
            &lt;settlementTimeUTC&gt;2018-12-14T15:12:19.473Z&lt;/settlementTimeUTC&gt;
            &lt;settlementTimeLocal&gt;2018-12-14T07:12:19.473&lt;/settlementTimeLocal&gt;
            &lt;settlementState&gt;settlementError&lt;/settlementState&gt;
        &lt;/batch&gt;
        &lt;authAmount&gt;10.29&lt;/authAmount&gt;
        &lt;settleAmount&gt;10.29&lt;/settleAmount&gt;
        &lt;taxExempt&gt;false&lt;/taxExempt&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
                &lt;cardType&gt;Visa&lt;/cardType&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
        &lt;billTo&gt;
            &lt;firstName&gt;Iam&lt;/firstName&gt;
            &lt;lastName&gt;Testing&lt;/lastName&gt;
            &lt;address&gt;123&lt;/address&gt;
            &lt;zip&gt;98004&lt;/zip&gt;
        &lt;/billTo&gt;
        &lt;recurringBilling&gt;false&lt;/recurringBilling&gt;
        &lt;product&gt;Card Not Present&lt;/product&gt;
        &lt;marketType&gt;eCommerce&lt;/marketType&gt;
        &lt;networkTransId&gt;123456789 NNN H&lt;/networkTransId&gt;
    &lt;/transaction&gt;
&lt;/getTransactionDetailsResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-transaction-details" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;
&lt;getTransactionDetailsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot; xmlns:xsd&#x3D;&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi&#x3D;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;transaction&gt;
        &lt;transId&gt;40022826172&lt;/transId&gt;
        &lt;submitTimeUTC&gt;2018-12-14T08:54:33.177Z&lt;/submitTimeUTC&gt;
        &lt;submitTimeLocal&gt;2018-12-14T00:54:33.177&lt;/submitTimeLocal&gt;
        &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
        &lt;transactionStatus&gt;pendingFinalSettlement&lt;/transactionStatus&gt;
        &lt;responseCode&gt;1&lt;/responseCode&gt;
        &lt;responseReasonCode&gt;1&lt;/responseReasonCode&gt;
        &lt;subscription&gt;
            &lt;id&gt;5486668&lt;/id&gt;
            &lt;payNum&gt;1&lt;/payNum&gt;
        &lt;/subscription&gt;
        &lt;responseReasonDescription&gt;Approval&lt;/responseReasonDescription&gt;
        &lt;authCode&gt;12CD56&lt;/authCode&gt;
        &lt;AVSResponse&gt;Y&lt;/AVSResponse&gt;
        &lt;cardCodeResponse&gt;M&lt;/cardCodeResponse&gt;
        &lt;batch&gt;
            &lt;batchId&gt;8863437&lt;/batchId&gt;
            &lt;settlementTimeUTC&gt;2018-12-14T15:12:19.473Z&lt;/settlementTimeUTC&gt;
            &lt;settlementTimeLocal&gt;2018-12-14T07:12:19.473&lt;/settlementTimeLocal&gt;
            &lt;settlementState&gt;settlementError&lt;/settlementState&gt;
        &lt;/batch&gt;
        &lt;authAmount&gt;10.29&lt;/authAmount&gt;
        &lt;settleAmount&gt;10.29&lt;/settleAmount&gt;
        &lt;taxExempt&gt;false&lt;/taxExempt&gt;
        &lt;payment&gt;
            &lt;creditCard&gt;
                &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
                &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
                &lt;cardType&gt;Visa&lt;/cardType&gt;
            &lt;/creditCard&gt;
        &lt;/payment&gt;
        &lt;billTo&gt;
            &lt;firstName&gt;Iam&lt;/firstName&gt;
            &lt;lastName&gt;Testing&lt;/lastName&gt;
            &lt;address&gt;123&lt;/address&gt;
            &lt;zip&gt;98004&lt;/zip&gt;
        &lt;/billTo&gt;
        &lt;recurringBilling&gt;false&lt;/recurringBilling&gt;
        &lt;product&gt;Card Not Present&lt;/product&gt;
        &lt;marketType&gt;eCommerce&lt;/marketType&gt;
        &lt;networkTransId&gt;123456789 NNN H&lt;/networkTransId&gt;
    &lt;/transaction&gt;
&lt;/getTransactionDetailsResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-transaction-details">{
  &quot;getTransactionDetailsResponse&quot;: {
    &quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
    &quot;-xmlns:xsd&quot;: &quot;https://www.w3.org/2001/XMLSchema&quot;,
    &quot;-xmlns:xsi&quot;: &quot;https://www.w3.org/2001/XMLSchema-instance&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;transaction&quot;: {
      &quot;transId&quot;: &quot;12345&quot;,
      &quot;refTransId&quot;: &quot;12345&quot;,
      &quot;splitTenderId&quot;: &quot;12345&quot;,
      &quot;submitTimeUTC&quot;: &quot;2010-08-30T17:49:20.757Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2010-08-30T13:49:20.757&quot;,
      &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
      &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
      &quot;responseCode&quot;: &quot;1&quot;,
      &quot;responseReasonCode&quot;: &quot;1&quot;,
      &quot;responseReasonDescription&quot;: &quot;Approval&quot;,
      &quot;authCode&quot;: &quot;000000&quot;,
      &quot;AVSResponse&quot;: &quot;X&quot;,
      &quot;cardCodeResponse&quot;: &quot;M&quot;,
      &quot;CAVVResponse&quot;: &quot;2&quot;,
      &quot;FDSFilterAction&quot;: &quot;authAndHold&quot;,
      &quot;FDSFilters&quot;: {
        &quot;FDSFilter&quot;: [
          {
            &quot;name&quot;: &quot;Hourly Velocity Filter&quot;,
            &quot;action&quot;: &quot;authAndHold&quot;
          },
          {
            &quot;name&quot;: &quot;Amount Filter&quot;,
            &quot;action&quot;: &quot;report&quot;
          }
        ]
      },
      &quot;batch&quot;: {
        &quot;batchId&quot;: &quot;12345&quot;,
        &quot;settlementTimeUTC&quot;: &quot;2010-08-30T17:49:20.757Z&quot;,
        &quot;settlementTimeLocal&quot;: &quot;2010-08-30T13:49:20.757&quot;,
        &quot;settlementState&quot;: &quot;settledSuccessfully&quot;
      },
      &quot;order&quot;: {
        &quot;invoiceNumber&quot;: &quot;INV00001&quot;,
        &quot;description&quot;: &quot;some description&quot;,
        &quot;purchaseOrderNumber&quot;: &quot;PO000001&quot;
      },
      &quot;requestedAmount&quot;: &quot;5.00&quot;,
      &quot;authAmount&quot;: &quot;2.00&quot;,
      &quot;settleAmount&quot;: &quot;2.00&quot;,
      &quot;tax&quot;: {
        &quot;amount&quot;: &quot;1.00&quot;,
        &quot;name&quot;: &quot;WA state sales tax&quot;,
        &quot;description&quot;: &quot;Washington state sales tax&quot;
      },
      &quot;shipping&quot;: {
        &quot;amount&quot;: &quot;2.00&quot;,
        &quot;name&quot;: &quot;ground based shipping&quot;,
        &quot;description&quot;: &quot;Ground based 5 to 10 day shipping&quot;
      },
      &quot;duty&quot;: { &quot;amount&quot;: &quot;1.00&quot; },
      &quot;lineItems&quot;: {
        &quot;lineItem&quot;: [
          {
            &quot;itemId&quot;: &quot;ITEM00001&quot;,
            &quot;name&quot;: &quot;name of item sold&quot;,
            &quot;description&quot;: &quot;Description of item sold&quot;,
            &quot;quantity&quot;: &quot;1&quot;,
            &quot;unitPrice&quot;: &quot;6.95&quot;,
            &quot;taxable&quot;: &quot;true&quot;
          },
          {
            &quot;itemId&quot;: &quot;ITEM00001&quot;,
            &quot;name&quot;: &quot;name of item sold&quot;,
            &quot;description&quot;: &quot;Description of item sold&quot;,
            &quot;quantity&quot;: &quot;1&quot;,
            &quot;unitPrice&quot;: &quot;6.95&quot;,
            &quot;taxable&quot;: &quot;true&quot;
          }
        ]
      },
      &quot;prepaidBalanceRemaining&quot;: &quot;30.00&quot;,
      &quot;taxExempt&quot;: &quot;false&quot;,
      &quot;payment&quot;: {
        &quot;creditCard&quot;: {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;,
          &quot;cardType&quot;: &quot;Visa&quot;
        }
      },
      &quot;customer&quot;: {
        &quot;type&quot;: &quot;individual&quot;,
        &quot;id&quot;: &quot;ABC00001&quot;,
        &quot;email&quot;: &quot;mark@example.com&quot;
      },
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;,
        &quot;phoneNumber&quot;: &quot;000-000-0000&quot;
      },
      &quot;shipTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;
      },
      &quot;recurringBilling&quot;: &quot;false&quot;,
      &quot;customerIP&quot;: &quot;0.0.0.0&quot;,
      &quot;subscription&quot;: {
        &quot;id&quot;: &quot;145521&quot;,
        &quot;payNum&quot;: &quot;1&quot;,
        &quot;marketType&quot;: &quot;eCommerce&quot;,
        &quot;product&quot;: &quot;Card Not Present&quot;,
        &quot;returnedItems&quot;: {
          &quot;returnedItem&quot;: {
            &quot;id&quot;: &quot;2148878904&quot;,
            &quot;dateUTC&quot;: &quot;2014-05-12T21:22:44Z&quot;,
            &quot;dateLocal&quot;: &quot;2014-05-12T14:22:44&quot;,
            &quot;code&quot;: &quot;R02&quot;,
            &quot;description&quot;: &quot;Account Closed&quot;
          }
        },
        &quot;solution&quot;: {
          &quot;id&quot;: &quot;A1000004&quot;,
          &quot;name&quot;: &quot;Shopping Cart&quot;,
          &quot;vendorName&quot;: &quot;WidgetCo&quot;
        },
        &quot;mobileDeviceId&quot;: &quot;2354578983274523978&quot;
      },
      &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;1806660050&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;1805324550&quot;
      }
    }
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-transaction-details" style="display: none !important">{
  &quot;getTransactionDetailsResponse&quot;: {
    &quot;-xmlns&quot;: &quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;,
    &quot;-xmlns:xsd&quot;: &quot;https://www.w3.org/2001/XMLSchema&quot;,
    &quot;-xmlns:xsi&quot;: &quot;https://www.w3.org/2001/XMLSchema-instance&quot;,
    &quot;messages&quot;: {
      &quot;resultCode&quot;: &quot;Ok&quot;,
      &quot;message&quot;: {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    },
    &quot;transaction&quot;: {
      &quot;transId&quot;: &quot;12345&quot;,
      &quot;refTransId&quot;: &quot;12345&quot;,
      &quot;splitTenderId&quot;: &quot;12345&quot;,
      &quot;submitTimeUTC&quot;: &quot;2010-08-30T17:49:20.757Z&quot;,
      &quot;submitTimeLocal&quot;: &quot;2010-08-30T13:49:20.757&quot;,
      &quot;transactionType&quot;: &quot;authOnlyTransaction&quot;,
      &quot;transactionStatus&quot;: &quot;settledSuccessfully&quot;,
      &quot;responseCode&quot;: &quot;1&quot;,
      &quot;responseReasonCode&quot;: &quot;1&quot;,
      &quot;responseReasonDescription&quot;: &quot;Approval&quot;,
      &quot;authCode&quot;: &quot;000000&quot;,
      &quot;AVSResponse&quot;: &quot;X&quot;,
      &quot;cardCodeResponse&quot;: &quot;M&quot;,
      &quot;CAVVResponse&quot;: &quot;2&quot;,
      &quot;FDSFilterAction&quot;: &quot;authAndHold&quot;,
      &quot;FDSFilters&quot;: {
        &quot;FDSFilter&quot;: [
          {
            &quot;name&quot;: &quot;Hourly Velocity Filter&quot;,
            &quot;action&quot;: &quot;authAndHold&quot;
          },
          {
            &quot;name&quot;: &quot;Amount Filter&quot;,
            &quot;action&quot;: &quot;report&quot;
          }
        ]
      },
      &quot;batch&quot;: {
        &quot;batchId&quot;: &quot;12345&quot;,
        &quot;settlementTimeUTC&quot;: &quot;2010-08-30T17:49:20.757Z&quot;,
        &quot;settlementTimeLocal&quot;: &quot;2010-08-30T13:49:20.757&quot;,
        &quot;settlementState&quot;: &quot;settledSuccessfully&quot;
      },
      &quot;order&quot;: {
        &quot;invoiceNumber&quot;: &quot;INV00001&quot;,
        &quot;description&quot;: &quot;some description&quot;,
        &quot;purchaseOrderNumber&quot;: &quot;PO000001&quot;
      },
      &quot;requestedAmount&quot;: &quot;5.00&quot;,
      &quot;authAmount&quot;: &quot;2.00&quot;,
      &quot;settleAmount&quot;: &quot;2.00&quot;,
      &quot;tax&quot;: {
        &quot;amount&quot;: &quot;1.00&quot;,
        &quot;name&quot;: &quot;WA state sales tax&quot;,
        &quot;description&quot;: &quot;Washington state sales tax&quot;
      },
      &quot;shipping&quot;: {
        &quot;amount&quot;: &quot;2.00&quot;,
        &quot;name&quot;: &quot;ground based shipping&quot;,
        &quot;description&quot;: &quot;Ground based 5 to 10 day shipping&quot;
      },
      &quot;duty&quot;: { &quot;amount&quot;: &quot;1.00&quot; },
      &quot;lineItems&quot;: {
        &quot;lineItem&quot;: [
          {
            &quot;itemId&quot;: &quot;ITEM00001&quot;,
            &quot;name&quot;: &quot;name of item sold&quot;,
            &quot;description&quot;: &quot;Description of item sold&quot;,
            &quot;quantity&quot;: &quot;1&quot;,
            &quot;unitPrice&quot;: &quot;6.95&quot;,
            &quot;taxable&quot;: &quot;true&quot;
          },
          {
            &quot;itemId&quot;: &quot;ITEM00001&quot;,
            &quot;name&quot;: &quot;name of item sold&quot;,
            &quot;description&quot;: &quot;Description of item sold&quot;,
            &quot;quantity&quot;: &quot;1&quot;,
            &quot;unitPrice&quot;: &quot;6.95&quot;,
            &quot;taxable&quot;: &quot;true&quot;
          }
        ]
      },
      &quot;prepaidBalanceRemaining&quot;: &quot;30.00&quot;,
      &quot;taxExempt&quot;: &quot;false&quot;,
      &quot;payment&quot;: {
        &quot;creditCard&quot;: {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;,
          &quot;cardType&quot;: &quot;Visa&quot;
        }
      },
      &quot;customer&quot;: {
        &quot;type&quot;: &quot;individual&quot;,
        &quot;id&quot;: &quot;ABC00001&quot;,
        &quot;email&quot;: &quot;mark@example.com&quot;
      },
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;,
        &quot;phoneNumber&quot;: &quot;000-000-0000&quot;
      },
      &quot;shipTo&quot;: {
        &quot;firstName&quot;: &quot;John&quot;,
        &quot;lastName&quot;: &quot;Doe&quot;,
        &quot;address&quot;: &quot;123 Main St.&quot;,
        &quot;city&quot;: &quot;Bellevue&quot;,
        &quot;state&quot;: &quot;WA&quot;,
        &quot;zip&quot;: &quot;98004&quot;,
        &quot;country&quot;: &quot;USA&quot;
      },
      &quot;recurringBilling&quot;: &quot;false&quot;,
      &quot;customerIP&quot;: &quot;0.0.0.0&quot;,
      &quot;subscription&quot;: {
        &quot;id&quot;: &quot;145521&quot;,
        &quot;payNum&quot;: &quot;1&quot;,
        &quot;marketType&quot;: &quot;eCommerce&quot;,
        &quot;product&quot;: &quot;Card Not Present&quot;,
        &quot;returnedItems&quot;: {
          &quot;returnedItem&quot;: {
            &quot;id&quot;: &quot;2148878904&quot;,
            &quot;dateUTC&quot;: &quot;2014-05-12T21:22:44Z&quot;,
            &quot;dateLocal&quot;: &quot;2014-05-12T14:22:44&quot;,
            &quot;code&quot;: &quot;R02&quot;,
            &quot;description&quot;: &quot;Account Closed&quot;
          }
        },
        &quot;solution&quot;: {
          &quot;id&quot;: &quot;A1000004&quot;,
          &quot;name&quot;: &quot;Shopping Cart&quot;,
          &quot;vendorName&quot;: &quot;WidgetCo&quot;
        },
        &quot;mobileDeviceId&quot;: &quot;2354578983274523978&quot;
      },
      &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;1806660050&quot;,
        &quot;customerPaymentProfileId&quot;: &quot;1805324550&quot;
      }
    }
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-transaction-details" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-transaction-details">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-transaction-details"></div>
<div id="showCode-php-get-transaction-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-transaction-details"></a>
</p>
<textarea class="php" id="textarea-php-get-transaction-details" name="textarea-php-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-transaction-details">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-transaction-details"></div>
<div id="showCode-cs-get-transaction-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-transaction-details"></a>
</p>
<textarea class="cs" id="textarea-cs-get-transaction-details" name="textarea-cs-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-transaction-details">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-transaction-details"></div>
<div id="showCode-java-get-transaction-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-transaction-details"></a>
</p>
<textarea class="java" id="textarea-java-get-transaction-details" name="textarea-java-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-transaction-details">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-transaction-details"></div>
<div id="showCode-rb-get-transaction-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-transaction-details"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-transaction-details" name="textarea-rb-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div> 
</div>
</div>
<div class="tab-pane fade" id="python-get-transaction-details">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-transaction-details"></div>
<div id="showCode-py-get-transaction-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-transaction-details"></a>
</p>
<textarea class="python" id="textarea-py-get-transaction-details" name="textarea-py-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-transaction-details">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-transaction-details">
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-transaction-details"></div>
<div id="showCode-js-get-transaction-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-transaction-details"></a>
</p>
<textarea class="node" id="textarea-js-get-transaction-details" name="textarea-js-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-transaction-details">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-transaction-details">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-transaction-details">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-transaction-details">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-transaction-details">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-transaction-details">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-transaction-details">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-transaction-details">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-transaction-details"></div>
<div id="showCode-php-get-transaction-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-transaction-details"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-transaction-details" name="textarea-php-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-transaction-details"></div>
<div id="showCode-cs-get-transaction-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-transaction-details"></a>
 </p>
<textarea class="sample-code" id="textarea-cs-get-transaction-details" name="textarea-cs-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-transaction-details"></div>
<div id="showCode-java-get-transaction-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-transaction-details"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-transaction-details" name="textarea-java-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-transaction-details"></div>
<div id="showCode-rb-get-transaction-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-transaction-details"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-transaction-details" name="textarea-rb-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-transaction-details"></div>
<div id="showCode-py-get-transaction-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-transaction-details"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-transaction-details" name="textarea-py-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-transaction-details"></div>
<div id="showCode-js-get-transaction-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-transaction-details"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-transaction-details" name="textarea-js-get-transaction-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-transaction-details" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-transaction-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-transaction-details">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-transaction-details" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-transaction-details">
<div class="panel-body">
<p><em>getTransactionDetailsRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
 </tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
 </tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-transaction-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-transaction-details">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-transaction-details">
<div class="panel-body">
<p><em>getTransactionDetailsResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to six characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transaction</td>
<td>Contains information about the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of the original transaction.<br /><br />
This appears only for linked credits (transaction type <code>refundTransaction</code>).</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderId</td>
<td>Identifies the split tender order, if applicable.<br /><br />
This appears only for transactions that are part of a split tender purchase.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>submitTimeUTC</td>
<td>Date and time the transaction was submitted, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>submitTimeLocal</td>
<td>Date and time the transaction was submitted, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>The type of transaction that was originally submitted.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>authCaptureTransaction</code>, <code>authOnlyTransaction</code>, <code>captureOnlyTransaction</code>, or <code>refundTransaction</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionStatus</td>
<td>The status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>authorizedPendingCapture</code><br /><code>capturedPendingSettlement</code><br /><code>communicationError</code><br /><code>refundSettledSuccessfully</code><br /><code>refundPendingSettlement</code><br /><code>approvedReview</code><br /><code>declined</code><br /><code>couldNotVoid</code><br /><code>expired</code><br /><code>generalError</code><br /><code>failedReview</code><br /><code>settledSuccessfully</code><br /><code>settlementError</code><br /><code>underReview</code><br /><code>voided</code><br /><code>FDSPendingReview</code><br /><code>FDSAuthorizedPendingReview</code><br /><code>returnedItem</code><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>responseReasonCode</td>
<td>A code that represents more details about the result of the transaction.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>responseReasonDescription</td>
<td>A brief explanation of the <code>responseReasonCode</code>.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>AVSResponse</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
 </div></td>
</tr>
<tr>
<td class='oneBullet'>cardCodeResponse</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>CAVVResponse</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td>FDSFilterAction</td>
<td>The action applied to the transaction by the merchant's Advanced Fraud Detection Suite settings.<br /><br />
When multiple filters apply to a transaction, we will take the most restrictive action. For example, if a transaction triggers two AFDS filters, and one filter returns <code>hold</code> while the other filter returns <code>reject</code>, we will reject the transaction instead of holding it.</td>
<td><div>String.<br /><br />One of:<br /><code>reject</code><br /><code>decline</code><br /><code>hold</code><br /><code>authAndHold</code><br /><code>report</code><br /><br />
</div></td>
</tr>
<tr>
 <td>FDSFilters</td>
<td>Contains information for any fraud filters that have been applied.<br /><br />
Since one transaction may trigger more than one filter, you will receive each filter that the transaction triggered, along with the action specified by the filter. </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>FDSFilter</td>
<td>Contains information for one fraud filter.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the fraud filter.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>action</td>
<td>The setting for the filter.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>reject</code><br /><code>decline</code><br /><code>hold</code><br /><code>authAndHold</code><br /><code>report</code><br /><br />
</div></td>
</tr>
<tr>
<td>order</td>
<td>Contains information about the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>purchaseOrderNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td>authAmount</td>
<td>The amount authorized or refunded by the original transaction..<br /><br />
</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td>settleAmount</td>
<td>The amount that was submitted for settlement.<br /><br />
This will equal the value of <code>authAmount</code> in most cases. For voided transactions, we will return a value of "0.00". For transactions captured after an intitial <code>authOnlyTransaction</code> request, the value may be less than <code>authAmount</code> if the full amount wasn't captured.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />For example, 8.95.<br /><br />
</div></td>
</tr>
<tr>
<td>batch</td>
<td>Contains information about the batch if the transaction is settled. This will not be present for unsettled transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>batchId</td>
<td>The identification number for the batch.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>settlementTimeUTC</td>
<td>Date and time when the batch was settled, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>settlementTimeLocal</td>
<td>Date and time when the batch was settled, expressed in merchant’s local time zone.<br /><br />
This element returns the time in the merchant time zone as set in the Merchant Interface.<br /><br />To update the time zone, log in to the Merchant Interface and click <strong>Account > Settings > Time Zone.</strong></td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>settlementState</td>
<td>Status of the batch.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>settledSuccessfully</code>, <code>settlementError</code>, or <code>pendingSettlement</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
 <tr>
<td class='twoBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>prepaidBalanceRemaining</td>
<td>The amount remaining on the prepaid card at the time of the transaction.<br /><br />
This element is provided only for prepaid card transactions.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
</div></td>
</tr>
<tr>
<td>taxExempt</td>
<td>Indicates whether the item is tax exempt.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>creditCard</td>
<td>This element is not returned if payment was by bank account.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>cardNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>expirationDate</td>
<td>The masked expiration date for the card.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardType</td>
<td>Type of credit card.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>bankAccount</td>
<td>This element is not returned if payment was by credit card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>routingNumber</td>
<td>The masked ABA routing number.<br /><br />
</td>
<td><div>String, 8 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>accountNumber</td>
<td>The masked bank account number.<br /><br />
</td>
<td><div>String, 8 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>nameOnAccount</td>
<td>Name of the person who holds the bank account.<br /><br />
</td>
<td><div>String, up to 22 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>echeckType</td>
<td>The type of eCheck transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>PPD</code>, <code>WEB</code>, <code>CCD</code>, <code>TEL</code>, <code>ARC</code>, or <code>BOC</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>billTo</td>
<td>Contains the billing address information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td>The first name associated with the customer's billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>lastName</td>
<td>The last name associated with the customer's billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>The company name associated with the customer's billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td>The customer's billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td>The city of the customer's billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td>The state or province of the customer's billing address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td>The postal code for the customer's billing address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td>The country of the customer's billing address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>shipTo</td>
<td>Contains the shipping address information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td>Postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td>recurringBilling</td>
<td>Indicates whether or not this is a recurring transaction.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>returnedItems</td>
<td>This element is a container for one or more returnedItem fields. Applies only to eCheck.Net transactions.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>returnedItem</td>
<td>Contains fields that contain returned item information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>Transaction ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>dateUTC</td>
<td>Date and time the item was returned, in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>dateLocal</td>
<td>Date and time the item was returned, in the merchant's time zone.<br /><br />
This element uses the merchant's time zone as configured in the Merchant Interface. If unconfigured, defaults to Mountain Time (UTC-7).</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The ACH return code.<br /><br />
To view a list of return codes, see our <a href="https://developer.authorize.net/hello_world/testing_guide/">Testing Guide.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>A text description of the reason for the return.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td>The name of the solution which submitted this transaction.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>vendorName</td>
<td>The name of the vendor which created the solution.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String<br /><br />
</div></td>
</tr>
<tr>
<td>customerIP</td>
<td>The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
</div></td>
</tr>
<tr>
<td>subscription</td>
<td>Contains subscription information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>id</td>
<td>The subscription ID.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>payNum</td>
<td>Identifies the number of this transaction, in terms of how many transactions have been submitted for this subscription.<br /><br />
For example, the third transaction processed for this subscription will return <code>payNum</code> set to <code>3</code>.</td>
<td><div>Numeric string, between 1 and 999.<br /><br />
</div></td>
</tr>
<tr>
<td>marketType</td>
<td>The market type of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
<td><div>String.<br /><br /> Either <code>Card Not Present</code> or <code>Card Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>mobileDeviceId</td>
<td>The unique identifier of the mobile device.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>profile</td>
<td>Contains customer profile information used for this transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>customerProfileId</td>
<td>The ID number associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerPaymentProfileId</td>
<td>The ID of the customer payment profile used to charge this transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>clientId</td>
<td>The name of the SDK used to generate the transaction, if using an SDK.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transrefId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If your request included <code>refId</code>, we will return the value in <code>transrefId</code>. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
 </div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-batch-statistics">Get Batch Statistics</h3>
<p>A call to getBatchStatisticsRequest returns statistics for a single batch, specified by the batch ID.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-batch-statisticsTryIt" href="#console-get-batch-statistics" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-batch-statisticsphp" href="#php-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-batch-statisticscs" href="#cs-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-batch-statisticsjava" href="#java-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-batch-statisticsrb" href="#ruby-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-batch-statisticspy" href="#python-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-batch-statisticsjs" href="#node-get-batch-statistics" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-batch-statistics">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-batch-statistics">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-batch-statistics">XML</button>
</div>
 <div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-batch-statistics" spellcheck="false" class="XML XMLRequest">&lt;getBatchStatisticsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;batchId&gt;12345&lt;/batchId&gt;
&lt;/getBatchStatisticsRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-batch-statistics" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getBatchStatisticsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;batchId&gt;12345&lt;/batchId&gt;
&lt;/getBatchStatisticsRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-batch-statistics" spellcheck="false" class="JSON JSONRequest">{
    &quot;getBatchStatisticsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;batchId&quot;: &quot;12345&quot;
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-batch-statistics" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getBatchStatisticsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;batchId&quot;: &quot;12345&quot;
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-batch-statistics" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-batch-statistics" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-batch-statistics"></span>


<div class="errorDetails" id="detailsDiv-get-batch-statistics">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
 <div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-batch-statistics">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getBatchStatisticsResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;batch&gt;
        &lt;batchId&gt;10198093&lt;/batchId&gt;
        &lt;settlementTimeUTC&gt;2014-10-24T18:59:12Z&lt;/settlementTimeUTC&gt;
        &lt;settlementTimeUTCSpecified&gt;true&lt;/settlementTimeUTCSpecified&gt;
        &lt;settlementTimeLocal&gt;2014-10-24T16:29:12&lt;/settlementTimeLocal&gt;
        &lt;settlementTimeLocalSpecified&gt;true&lt;/settlementTimeLocalSpecified&gt;
        &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
        &lt;paymentMethod&gt;eCheck&lt;/paymentMethod&gt;
        &lt;statistics&gt;
            &lt;accountType&gt;eCheck&lt;/accountType&gt;
            &lt;chargeAmount&gt;12.22&lt;/chargeAmount&gt;
            &lt;chargeCount&gt;1&lt;/chargeCount&gt;
            &lt;refundAmount&gt;0&lt;/refundAmount&gt;
            &lt;refundCount&gt;0&lt;/refundCount&gt;
            &lt;voidCount&gt;0&lt;/voidCount&gt;
            &lt;declineCount&gt;0&lt;/declineCount&gt;
            &lt;errorCount&gt;0&lt;/errorCount&gt;
            &lt;returnedItemAmount&gt;0&lt;/returnedItemAmount&gt;
            &lt;returnedItemAmountSpecified&gt;true&lt;/returnedItemAmountSpecified&gt;
            &lt;returnedItemCount&gt;0&lt;/returnedItemCount&gt;
            &lt;returnedItemCountSpecified&gt;true&lt;/returnedItemCountSpecified&gt;
            &lt;chargebackAmount&gt;0&lt;/chargebackAmount&gt;
            &lt;chargebackAmountSpecified&gt;true&lt;/chargebackAmountSpecified&gt;
            &lt;chargebackCount&gt;0&lt;/chargebackCount&gt;
            &lt;chargebackCountSpecified&gt;true&lt;/chargebackCountSpecified&gt;
            &lt;correctionNoticeCount&gt;0&lt;/correctionNoticeCount&gt;
            &lt;correctionNoticeCountSpecified&gt;true&lt;/correctionNoticeCountSpecified&gt;
            &lt;chargeChargeBackAmount&gt;0&lt;/chargeChargeBackAmount&gt;
            &lt;chargeChargeBackAmountSpecified&gt;true&lt;/chargeChargeBackAmountSpecified&gt;
            &lt;chargeChargeBackCount&gt;0&lt;/chargeChargeBackCount&gt;
            &lt;chargeChargeBackCountSpecified&gt;true&lt;/chargeChargeBackCountSpecified&gt;
            &lt;refundChargeBackAmount&gt;0&lt;/refundChargeBackAmount&gt;
            &lt;refundChargeBackAmountSpecified&gt;true&lt;/refundChargeBackAmountSpecified&gt;
            &lt;refundChargeBackCount&gt;0&lt;/refundChargeBackCount&gt;
            &lt;refundChargeBackCountSpecified&gt;true&lt;/refundChargeBackCountSpecified&gt;
            &lt;chargeReturnedItemsAmount&gt;12.21&lt;/chargeReturnedItemsAmount&gt;
            &lt;chargeReturnedItemsAmountSpecified&gt;true&lt;/chargeReturnedItemsAmountSpecified&gt;
            &lt;chargeReturnedItemsCount&gt;1&lt;/chargeReturnedItemsCount&gt;
            &lt;chargeReturnedItemsCountSpecified&gt;true&lt;/chargeReturnedItemsCountSpecified&gt;
            &lt;refundReturnedItemsAmount&gt;0&lt;/refundReturnedItemsAmount&gt;
            &lt;refundReturnedItemsAmountSpecified&gt;true&lt;/refundReturnedItemsAmountSpecified&gt;
            &lt;refundReturnedItemsCount&gt;0&lt;/refundReturnedItemsCount&gt;
            &lt;refundReturnedItemsCountSpecified&gt;true&lt;/refundReturnedItemsCountSpecified&gt;
        &lt;/statistics&gt;
    &lt;/batch&gt;
&lt;/getBatchStatisticsResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-batch-statistics" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getBatchStatisticsResponse
    xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;batch&gt;
        &lt;batchId&gt;10198093&lt;/batchId&gt;
        &lt;settlementTimeUTC&gt;2014-10-24T18:59:12Z&lt;/settlementTimeUTC&gt;
        &lt;settlementTimeUTCSpecified&gt;true&lt;/settlementTimeUTCSpecified&gt;
        &lt;settlementTimeLocal&gt;2014-10-24T16:29:12&lt;/settlementTimeLocal&gt;
        &lt;settlementTimeLocalSpecified&gt;true&lt;/settlementTimeLocalSpecified&gt;
        &lt;settlementState&gt;settledSuccessfully&lt;/settlementState&gt;
        &lt;paymentMethod&gt;eCheck&lt;/paymentMethod&gt;
        &lt;statistics&gt;
            &lt;accountType&gt;eCheck&lt;/accountType&gt;
            &lt;chargeAmount&gt;12.22&lt;/chargeAmount&gt;
            &lt;chargeCount&gt;1&lt;/chargeCount&gt;
            &lt;refundAmount&gt;0&lt;/refundAmount&gt;
            &lt;refundCount&gt;0&lt;/refundCount&gt;
            &lt;voidCount&gt;0&lt;/voidCount&gt;
            &lt;declineCount&gt;0&lt;/declineCount&gt;
            &lt;errorCount&gt;0&lt;/errorCount&gt;
            &lt;returnedItemAmount&gt;0&lt;/returnedItemAmount&gt;
            &lt;returnedItemAmountSpecified&gt;true&lt;/returnedItemAmountSpecified&gt;
            &lt;returnedItemCount&gt;0&lt;/returnedItemCount&gt;
            &lt;returnedItemCountSpecified&gt;true&lt;/returnedItemCountSpecified&gt;
            &lt;chargebackAmount&gt;0&lt;/chargebackAmount&gt;
            &lt;chargebackAmountSpecified&gt;true&lt;/chargebackAmountSpecified&gt;
            &lt;chargebackCount&gt;0&lt;/chargebackCount&gt;
            &lt;chargebackCountSpecified&gt;true&lt;/chargebackCountSpecified&gt;
            &lt;correctionNoticeCount&gt;0&lt;/correctionNoticeCount&gt;
            &lt;correctionNoticeCountSpecified&gt;true&lt;/correctionNoticeCountSpecified&gt;
            &lt;chargeChargeBackAmount&gt;0&lt;/chargeChargeBackAmount&gt;
            &lt;chargeChargeBackAmountSpecified&gt;true&lt;/chargeChargeBackAmountSpecified&gt;
            &lt;chargeChargeBackCount&gt;0&lt;/chargeChargeBackCount&gt;
            &lt;chargeChargeBackCountSpecified&gt;true&lt;/chargeChargeBackCountSpecified&gt;
            &lt;refundChargeBackAmount&gt;0&lt;/refundChargeBackAmount&gt;
            &lt;refundChargeBackAmountSpecified&gt;true&lt;/refundChargeBackAmountSpecified&gt;
            &lt;refundChargeBackCount&gt;0&lt;/refundChargeBackCount&gt;
            &lt;refundChargeBackCountSpecified&gt;true&lt;/refundChargeBackCountSpecified&gt;
            &lt;chargeReturnedItemsAmount&gt;12.21&lt;/chargeReturnedItemsAmount&gt;
            &lt;chargeReturnedItemsAmountSpecified&gt;true&lt;/chargeReturnedItemsAmountSpecified&gt;
            &lt;chargeReturnedItemsCount&gt;1&lt;/chargeReturnedItemsCount&gt;
            &lt;chargeReturnedItemsCountSpecified&gt;true&lt;/chargeReturnedItemsCountSpecified&gt;
            &lt;refundReturnedItemsAmount&gt;0&lt;/refundReturnedItemsAmount&gt;
            &lt;refundReturnedItemsAmountSpecified&gt;true&lt;/refundReturnedItemsAmountSpecified&gt;
            &lt;refundReturnedItemsCount&gt;0&lt;/refundReturnedItemsCount&gt;
            &lt;refundReturnedItemsCountSpecified&gt;true&lt;/refundReturnedItemsCountSpecified&gt;
        &lt;/statistics&gt;
    &lt;/batch&gt;
&lt;/getBatchStatisticsResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-batch-statistics">{
    &quot;batch&quot;: {
        &quot;batchId&quot;: &quot;10198093&quot;,
        &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:59:12Z&quot;,
        &quot;settlementTimeUTCSpecified&quot;: true,
        &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:29:12&quot;,
        &quot;settlementTimeLocalSpecified&quot;: true,
        &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
        &quot;paymentMethod&quot;: &quot;eCheck&quot;,
        &quot;statistics&quot;: [
            {
                &quot;accountType&quot;: &quot;eCheck&quot;,
                &quot;chargeAmount&quot;: 12.22,
                &quot;chargeCount&quot;: 1,
                &quot;refundAmount&quot;: 0,
                &quot;refundCount&quot;: 0,
                &quot;voidCount&quot;: 0,
                &quot;declineCount&quot;: 0,
                &quot;errorCount&quot;: 0,
                &quot;returnedItemAmount&quot;: 0,
                &quot;returnedItemAmountSpecified&quot;: true,
                &quot;returnedItemCount&quot;: 0,
                &quot;returnedItemCountSpecified&quot;: true,
                &quot;chargebackAmount&quot;: 0,
                &quot;chargebackAmountSpecified&quot;: true,
                &quot;chargebackCount&quot;: 0,
                &quot;chargebackCountSpecified&quot;: true,
                &quot;correctionNoticeCount&quot;: 0,
                &quot;correctionNoticeCountSpecified&quot;: true,
                &quot;chargeChargeBackAmount&quot;: 0,
                &quot;chargeChargeBackAmountSpecified&quot;: true,
                &quot;chargeChargeBackCount&quot;: 0,
                &quot;chargeChargeBackCountSpecified&quot;: true,
                &quot;refundChargeBackAmount&quot;: 0,
                &quot;refundChargeBackAmountSpecified&quot;: true,
                &quot;refundChargeBackCount&quot;: 0,
                &quot;refundChargeBackCountSpecified&quot;: true,
                &quot;chargeReturnedItemsAmount&quot;: 12.21,
                &quot;chargeReturnedItemsAmountSpecified&quot;: true,
                &quot;chargeReturnedItemsCount&quot;: 1,
                &quot;chargeReturnedItemsCountSpecified&quot;: true,
                &quot;refundReturnedItemsAmount&quot;: 0,
                &quot;refundReturnedItemsAmountSpecified&quot;: true,
                &quot;refundReturnedItemsCount&quot;: 0,
                &quot;refundReturnedItemsCountSpecified&quot;: true
            }
        ]
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-batch-statistics" style="display: none !important">{
    &quot;batch&quot;: {
        &quot;batchId&quot;: &quot;10198093&quot;,
        &quot;settlementTimeUTC&quot;: &quot;2014-10-24T18:59:12Z&quot;,
        &quot;settlementTimeUTCSpecified&quot;: true,
        &quot;settlementTimeLocal&quot;: &quot;2014-10-24T16:29:12&quot;,
        &quot;settlementTimeLocalSpecified&quot;: true,
        &quot;settlementState&quot;: &quot;settledSuccessfully&quot;,
        &quot;paymentMethod&quot;: &quot;eCheck&quot;,
        &quot;statistics&quot;: [
            {
                &quot;accountType&quot;: &quot;eCheck&quot;,
                &quot;chargeAmount&quot;: 12.22,
                &quot;chargeCount&quot;: 1,
                &quot;refundAmount&quot;: 0,
                &quot;refundCount&quot;: 0,
                &quot;voidCount&quot;: 0,
                &quot;declineCount&quot;: 0,
                &quot;errorCount&quot;: 0,
                &quot;returnedItemAmount&quot;: 0,
                &quot;returnedItemAmountSpecified&quot;: true,
                &quot;returnedItemCount&quot;: 0,
                &quot;returnedItemCountSpecified&quot;: true,
                &quot;chargebackAmount&quot;: 0,
                &quot;chargebackAmountSpecified&quot;: true,
                &quot;chargebackCount&quot;: 0,
                &quot;chargebackCountSpecified&quot;: true,
                &quot;correctionNoticeCount&quot;: 0,
                &quot;correctionNoticeCountSpecified&quot;: true,
                &quot;chargeChargeBackAmount&quot;: 0,
                &quot;chargeChargeBackAmountSpecified&quot;: true,
                &quot;chargeChargeBackCount&quot;: 0,
                &quot;chargeChargeBackCountSpecified&quot;: true,
                &quot;refundChargeBackAmount&quot;: 0,
                &quot;refundChargeBackAmountSpecified&quot;: true,
                &quot;refundChargeBackCount&quot;: 0,
                &quot;refundChargeBackCountSpecified&quot;: true,
                &quot;chargeReturnedItemsAmount&quot;: 12.21,
                &quot;chargeReturnedItemsAmountSpecified&quot;: true,
                &quot;chargeReturnedItemsCount&quot;: 1,
                &quot;chargeReturnedItemsCountSpecified&quot;: true,
                &quot;refundReturnedItemsAmount&quot;: 0,
                &quot;refundReturnedItemsAmountSpecified&quot;: true,
                &quot;refundReturnedItemsCount&quot;: 0,
                &quot;refundReturnedItemsCountSpecified&quot;: true
            }
        ]
    },
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-get-batch-statistics" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-batch-statistics">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-batch-statistics">
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-batch-statistics"></div>
<div id="showCode-php-get-batch-statistics">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-batch-statistics"></a>
</p>
<textarea class="php" id="textarea-php-get-batch-statistics" name="textarea-php-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-batch-statistics">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-batch-statistics">
 </div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-batch-statistics"></div>
<div id="showCode-cs-get-batch-statistics">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-batch-statistics"></a>
</p>
<textarea class="cs" id="textarea-cs-get-batch-statistics" name="textarea-cs-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-batch-statistics">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-batch-statistics">
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-batch-statistics"></div>
<div id="showCode-java-get-batch-statistics">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-batch-statistics"></a>
</p>
<textarea class="java" id="textarea-java-get-batch-statistics" name="textarea-java-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-batch-statistics">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-batch-statistics">
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

 <div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-batch-statistics"></div>
<div id="showCode-rb-get-batch-statistics">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-batch-statistics"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-batch-statistics" name="textarea-rb-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-batch-statistics">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-batch-statistics">
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-batch-statistics"></div>
<div id="showCode-py-get-batch-statistics">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-batch-statistics"></a>
</p>
<textarea class="python" id="textarea-py-get-batch-statistics" name="textarea-py-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-batch-statistics">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-batch-statistics">
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-batch-statistics"></div>
 <div id="showCode-js-get-batch-statistics">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-batch-statistics"></a>
</p>
<textarea class="node" id="textarea-js-get-batch-statistics" name="textarea-js-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-batch-statistics">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-batch-statistics">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-batch-statistics">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-batch-statistics">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-batch-statistics">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-batch-statistics">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-batch-statistics">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-batch-statistics">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-batch-statistics"></div>
<div id="showCode-php-get-batch-statistics">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-batch-statistics"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-batch-statistics" name="textarea-php-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-batch-statistics"></div>
<div id="showCode-cs-get-batch-statistics">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-batch-statistics"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-batch-statistics" name="textarea-cs-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-batch-statistics"></div>
<div id="showCode-java-get-batch-statistics">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-batch-statistics"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-batch-statistics" name="textarea-java-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-batch-statistics"></div>
<div id="showCode-rb-get-batch-statistics">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-batch-statistics"></a>
</p>
 <textarea class="sample-code" id="textarea-rb-get-batch-statistics" name="textarea-rb-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-batch-statistics"></div>
<div id="showCode-py-get-batch-statistics">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-batch-statistics"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-batch-statistics" name="textarea-py-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-batch-statistics"></div>
<div id="showCode-js-get-batch-statistics">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-batch-statistics"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-batch-statistics" name="textarea-js-get-batch-statistics" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-batch-statistics" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-batch-statistics">
<h4 class="panel-title">
<a data-parent="#accordion-get-batch-statistics">
Request Field Description
 </a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-batch-statistics" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-batch-statistics">
<div class="panel-body">
<p><em>getBatchStatisticsRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>batchId</td>
<td>The identification number for the batch.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-batch-statistics">
<h4 class="panel-title">
<a data-parent="#accordion-get-batch-statistics">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-batch-statistics">
<div class="panel-body">
<p><em>getBatchStatisticsResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to six characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>batch</td>
<td>Contains information specific to one batch.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>batchId</td>
<td>The identification number for the batch.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>settlementTimeUTC</td>
 <td>Date and time when the batch was settled, expressed in UTC.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>settlementTimeLocal</td>
<td>Date and time when the batch was settled, expressed in merchant’s local time zone.<br /><br />
This element returns the time in the merchant time zone as set in the Merchant Interface.<br /><br />To update the time zone, log in to the Merchant Interface and click <strong>Account > Settings > Time Zone.</strong></td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>settlementState</td>
<td>Status of the batch.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>settledSuccessfully</code>, <code>settlementError</code>, or <code>pendingSettlement</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>paymentMethod</td>
<td>Indicates whether the batch contains credit card transactions or eCheck.Net transactions.<br /><br />
Since credit cards and electronic checks have different settlement and clearance processes, we create separate batches for credit card transactions and eCheck.Net transactions.</td>
<td><div>String.<br /><br />Either <code>creditCard</code> or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>marketType</td>
<td>The market type of the batch.<br /><br />
Since e-commerce, MOTO, and retail transactions have different processing rules, we create separate batches for e-commerce transactions, MOTO transactions, and retail transactions.</td>
<td><div><code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>product</td>
<td>Indicates whether the card was present for the transaction.<br /><br />
</td>
 <td><div>String.<br /><br />Either <code>Card Present</code> or <code>Card Not Present</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>statistics</td>
<td>Contains one or more <code>statistic</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>statistic</td>
<td>One <code>statistic</code> element is returned for each <code>accountType</code>.<br /><br />
Returned only if the value of <code>includeStatistics</code> is <code>true</code>. The specific fields depend on the value of <code>accountType</code>.<br /><br />Please note that PayPal batches do not currently return <code>accountType</code> in their <code>statistic</code> element.</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeAmount</td>
<td>The total charge amount for the specified <code>accountType</code> in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeCount</td>
<td>The number of charge transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>refundAmount</td>
<td>The total refund amount for the specified <code>accountType</code> in a batch, expressed in the merchant's default currency.<br /><br />
</td>
 <td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>refundCount</td>
<td>The number of refund transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>voidCount</td>
<td>The number of voided transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>declineCount</td>
<td>The number of declined transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorCount</td>
<td>The number of errored transactions for the specified <code>accountType</code> in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>returnedItemAmount</td>
<td>The total amount of returned eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>returnedItemCount</td>
<td>The number of returned eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargebackAmount</td>
 <td>The total amount of chargeback eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargebackCount</td>
<td>The number of chargeback eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>correctionNoticeCount</td>
<td>The number of Notices of Change received for eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeChargeBackAmount</td>
<td>The total amount of charge eCheck.Net transactions charged back in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeChargeBackCount</td>
<td>The number of charge eCheck.Net transactions charged back in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>refundChargeBackAmount</td>
<td>The total amount of refund eCheck.Net transactions charged back in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
 <td class='threeBullet'>refundChargeBackCount</td>
<td>The number of refund eCheck.Net transactions charged back in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeReturnedItemsAmount</td>
<td>The total amount of returned charge eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>chargeReturnedItemsCount</td>
<td>The number of returned charge eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>refundReturnedItemsAmount</td>
<td>The total amount of returned refund eCheck.Net transactions in a batch, expressed in the merchant's default currency.<br /><br />
</td>
<td><div>Decimal.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>refundReturnedItemsCount</td>
<td>The number of returned refund eCheck.Net transactions in a batch.<br /><br />
</td>
<td><div>Integer.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-merchant-details">Get Merchant Details</h3>
<p>Call this function and supply your authentication information to receive merchant details in the response. The information that is returned is helpful for OAuth and Accept integrations.<br /><br />
Generate a PublicClientKey only if one is not generated or is not active. Only the most recently generated active key is returned. </p>
 <ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-merchant-detailsTryIt" href="#console-get-merchant-details" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-merchant-detailsphp" href="#php-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-merchant-detailscs" href="#cs-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-merchant-detailsjava" href="#java-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-merchant-detailsrb" href="#ruby-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-merchant-detailspy" href="#python-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-merchant-detailsjs" href="#node-get-merchant-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-merchant-details">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-merchant-details">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-merchant-details">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-merchant-details" spellcheck="false" class="XML XMLRequest">&lt;getMerchantDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
   &lt;merchantAuthentication&gt;
      &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
      &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
   &lt;/merchantAuthentication&gt;
&lt;/getMerchantDetailsRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-merchant-details" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getMerchantDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
   &lt;merchantAuthentication&gt;
      &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
      &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
   &lt;/merchantAuthentication&gt;
&lt;/getMerchantDetailsRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-merchant-details" spellcheck="false" class="JSON JSONRequest">{
    &quot;getMerchantDetailsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        }
    }  
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-merchant-details" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getMerchantDetailsRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        }
    }  
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-merchant-details" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-merchant-details" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-merchant-details"></span>


<div class="errorDetails" id="detailsDiv-get-merchant-details">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-merchant-details">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getMerchantDetailsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;isTestMode&gt;false&lt;/isTestMode&gt;
    &lt;processors&gt;
        &lt;processor&gt;
            &lt;name&gt;First Data Nashville&lt;/name&gt;
        &lt;/processor&gt;
    &lt;/processors&gt;
    &lt;merchantName&gt;fwHGwSdCaR&lt;/merchantName&gt;
    &lt;gatewayId&gt;565697&lt;/gatewayId&gt;
    &lt;marketTypes&gt;
        &lt;marketType&gt;eCommerce&lt;/marketType&gt;
    &lt;/marketTypes&gt;
    &lt;productCodes&gt;
        &lt;productCode&gt;CNP&lt;/productCode&gt;
    &lt;/productCodes&gt;
    &lt;paymentMethods&gt;
        &lt;paymentMethod&gt;AmericanExpress&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;DinersClub&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Discover&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;EnRoute&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;JCB&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Mastercard&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Visa&lt;/paymentMethod&gt;
    &lt;/paymentMethods&gt;
    &lt;currencies&gt;
        &lt;currency&gt;USD&lt;/currency&gt;
    &lt;/currencies&gt;
    &lt;publicClientKey&gt;9aptdYwtHt2F22XLRgr4B9AM4Pkt5eb6b6MC9d2Nn3m3YEptx3RFFuXmpYWDLHev&lt;/publicClientKey&gt;
&lt;/getMerchantDetailsResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-merchant-details" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getMerchantDetailsResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
    &lt;messages&gt;
        &lt;resultCode&gt;Ok&lt;/resultCode&gt;
        &lt;message&gt;
            &lt;code&gt;I00001&lt;/code&gt;
            &lt;text&gt;Successful.&lt;/text&gt;
        &lt;/message&gt;
    &lt;/messages&gt;
    &lt;isTestMode&gt;false&lt;/isTestMode&gt;
    &lt;processors&gt;
        &lt;processor&gt;
            &lt;name&gt;First Data Nashville&lt;/name&gt;
        &lt;/processor&gt;
    &lt;/processors&gt;
    &lt;merchantName&gt;fwHGwSdCaR&lt;/merchantName&gt;
    &lt;gatewayId&gt;565697&lt;/gatewayId&gt;
    &lt;marketTypes&gt;
        &lt;marketType&gt;eCommerce&lt;/marketType&gt;
    &lt;/marketTypes&gt;
    &lt;productCodes&gt;
        &lt;productCode&gt;CNP&lt;/productCode&gt;
    &lt;/productCodes&gt;
    &lt;paymentMethods&gt;
        &lt;paymentMethod&gt;AmericanExpress&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;DinersClub&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Discover&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;EnRoute&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;JCB&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Mastercard&lt;/paymentMethod&gt;
        &lt;paymentMethod&gt;Visa&lt;/paymentMethod&gt;
    &lt;/paymentMethods&gt;
    &lt;currencies&gt;
        &lt;currency&gt;USD&lt;/currency&gt;
    &lt;/currencies&gt;
    &lt;publicClientKey&gt;9aptdYwtHt2F22XLRgr4B9AM4Pkt5eb6b6MC9d2Nn3m3YEptx3RFFuXmpYWDLHev&lt;/publicClientKey&gt;
&lt;/getMerchantDetailsResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-merchant-details">{
	&quot;isTestMode&quot;: false,
	&quot;processors&quot;: [{
		&quot;name&quot;: &quot;First Data Nashville&quot;
	}],
	&quot;merchantName&quot;: &quot;fwHGwSdCaR&quot;,
	&quot;gatewayId&quot;: &quot;565697&quot;,
	&quot;marketTypes&quot;: [
		&quot;eCommerce&quot;
	],
	&quot;productCodes&quot;: [
		&quot;CNP&quot;
	],
	&quot;paymentMethods&quot;: [
		&quot;AmericanExpress&quot;,
		&quot;DinersClub&quot;,
		&quot;Discover&quot;,
		&quot;EnRoute&quot;,
		&quot;JCB&quot;,
		&quot;Mastercard&quot;,
		&quot;Visa&quot;
	],
	&quot;currencies&quot;: [
		&quot;USD&quot;
	],
        &quot;publicClientKey&quot;: &quot;9aptdYwtHt2F22XLRgr4B9AM4Pkt5eb6b6MC9d2Nn3m3YEptx3RFFuXmpYWDLHev&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-merchant-details" style="display: none !important">{
	&quot;isTestMode&quot;: false,
	&quot;processors&quot;: [{
		&quot;name&quot;: &quot;First Data Nashville&quot;
	}],
	&quot;merchantName&quot;: &quot;fwHGwSdCaR&quot;,
	&quot;gatewayId&quot;: &quot;565697&quot;,
	&quot;marketTypes&quot;: [
		&quot;eCommerce&quot;
	],
	&quot;productCodes&quot;: [
		&quot;CNP&quot;
	],
	&quot;paymentMethods&quot;: [
		&quot;AmericanExpress&quot;,
		&quot;DinersClub&quot;,
		&quot;Discover&quot;,
		&quot;EnRoute&quot;,
		&quot;JCB&quot;,
		&quot;Mastercard&quot;,
		&quot;Visa&quot;
	],
	&quot;currencies&quot;: [
		&quot;USD&quot;
	],
        &quot;publicClientKey&quot;: &quot;9aptdYwtHt2F22XLRgr4B9AM4Pkt5eb6b6MC9d2Nn3m3YEptx3RFFuXmpYWDLHev&quot;,
	&quot;messages&quot;: {
		&quot;resultCode&quot;: &quot;Ok&quot;,
		&quot;message&quot;: [{
			&quot;code&quot;: &quot;I00001&quot;,
			&quot;text&quot;: &quot;Successful.&quot;
		}]
	}
}</code>
                                                </pre>
<div id="txtRespLoader-get-merchant-details" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-merchant-details">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-merchant-details"></div>
<div id="showCode-php-get-merchant-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-merchant-details"></a>
</p>
<textarea class="php" id="textarea-php-get-merchant-details" name="textarea-php-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-merchant-details">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-merchant-details"></div>
<div id="showCode-cs-get-merchant-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-merchant-details"></a>
</p>
<textarea class="cs" id="textarea-cs-get-merchant-details" name="textarea-cs-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-merchant-details">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-merchant-details"></div>
<div id="showCode-java-get-merchant-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-merchant-details"></a>
</p>
<textarea class="java" id="textarea-java-get-merchant-details" name="textarea-java-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-merchant-details">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-merchant-details"></div>
<div id="showCode-rb-get-merchant-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-merchant-details"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-merchant-details" name="textarea-rb-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-merchant-details">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-merchant-details"></div>
<div id="showCode-py-get-merchant-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-merchant-details"></a>
</p>
<textarea class="python" id="textarea-py-get-merchant-details" name="textarea-py-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-merchant-details">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-merchant-details">
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-merchant-details"></div>
<div id="showCode-js-get-merchant-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-merchant-details"></a>
</p>
<textarea class="node" id="textarea-js-get-merchant-details" name="textarea-js-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-merchant-details">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-merchant-details">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-merchant-details">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-merchant-details">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-merchant-details">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-merchant-details">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-merchant-details">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-merchant-details">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-merchant-details"></div>
<div id="showCode-php-get-merchant-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-merchant-details" name="textarea-php-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-merchant-details"></div>
<div id="showCode-cs-get-merchant-details">
<p>
 This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-merchant-details" name="textarea-cs-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-merchant-details"></div>
<div id="showCode-java-get-merchant-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-merchant-details" name="textarea-java-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-merchant-details"></div>
<div id="showCode-rb-get-merchant-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-merchant-details" name="textarea-rb-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-merchant-details"></div>
<div id="showCode-py-get-merchant-details">
 <p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-merchant-details" name="textarea-py-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-merchant-details"></div>
<div id="showCode-js-get-merchant-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-merchant-details"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-merchant-details" name="textarea-js-get-merchant-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-merchant-details" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-merchant-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-merchant-details">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-merchant-details" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-merchant-details">
<div class="panel-body">
<p><em>getMerchantDetailsRequest</em>
</p>
 <table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
 <div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-merchant-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-merchant-details">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-merchant-details">
<div class="panel-body">
<p><em>getMerchantDetailsResponse </em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>isTestMode</td>
<td>Indicates whether the account is set to Test Mode.<br /><br />
Test Mode simulates transaction activity without actually submitting transactions to the merchant's processor for authorization or settlement. We do not record transaction requests submitted in Test Mode.</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>processors</td>
<td>Contains all processors configured on a merchant's account.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>processor</td>
<td>Contains information about one processor.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the processor.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>merchantName</td>
 <td>Merchant's name, as recorded by the merchant account.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>gatewayId</td>
<td>The ID of the gateway account.<br /><br />
Use <code>gatewayId</code> to identify a specific payment gateway account.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>marketTypes</td>
<td>Contains <code>marketType</code> information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>marketType</td>
<td>The market type for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>eCommerce</code>, <code>MOTO</code>, or <code>Retail</code><br /><br />
</div></td>
</tr>
<tr>
<td>productCodes</td>
<td>Contains <code>productCode</code> information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>productCode</td>
<td>Indicates whether the account supports card present transactions.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>CP</code> (Card Present), or <code>CNP</code> (Card Not Present).<br /><br />
</div></td>
</tr>
<tr>
<td>paymentMethods</td>
<td>The payment methods enabled on the payment gateway. Contains one or more <code>paymentMethod</code> fields.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>paymentMethod</td>
<td>One of the payment methods enabled on the payment gateway.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, <code>EnRoute</code>, <code>Paypal</code>, <code>VisaCheckout</code>, <code>ApplePay</code>, <code>AndroidPay</code>, <code>GooglePay</code>, or <code>Echeck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td>currencies</td>
<td>The currencies enabled on the payment gateway. Contains one or more <code>currency</code> fields.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>currency</td>
<td>String, three letters.<br /><br />Uses <a href="https://www.iso.org/iso-4217-currency-codes.html">ISO 4217</a> currency codes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td>publicClientKey</td>
<td>This is the value of the merchant's public client key.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>businessInformation</td>
<td>Contains geographical information about the merchant.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>company</td>
<td>Name of the merchant's company.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>address</td>
<td>Address of the merchant.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>city</td>
<td>City of the merchant.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>zip</td>
<td>ZIP code of the merchant.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>country</td>
<td>Country of the merchant.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>phoneNumber</td>
<td>Country of the merchant.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>merchantTimeZone</td>
<td>Time zone of the merchant.<br /><br />
</td>
<td><div>String.<br /><br /><br /><br />Use the <a href="https://www.iana.org/time-zones">IANA Time Zone Database name format</a>. For example: <br /><br /><code>America/Los_Angeles</code> <br /><br />
</div></td>
</tr>
<tr>
<td>contactDetails</td>
<td>Contains one or more <code>contactDetail</code>. See below.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>contactDetail</td>
<td>Contains first name, last name, and email address of the contact. There can be multiple <code>contactDetail</code> elements in <code>contactDetails</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td>Email address of the contact.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>fisrtName</td>
<td>First name of the contact.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name of the contact.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-account-updater-job-summary">Get Account Updater Job Summary</h3>
<p>Use this function to get a summary of the results of the Account Updater process for a particular month.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-account-updater-job-summaryTryIt" href="#console-get-account-updater-job-summary" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-account-updater-job-summaryphp" href="#php-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-account-updater-job-summarycs" href="#cs-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-account-updater-job-summaryjava" href="#java-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-account-updater-job-summaryrb" href="#ruby-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-account-updater-job-summarypy" href="#python-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-account-updater-job-summaryjs" href="#node-get-account-updater-job-summary" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-account-updater-job-summary">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-account-updater-job-summary">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-account-updater-job-summary">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-account-updater-job-summary" spellcheck="false" class="XML XMLRequest">&lt;getAUJobSummaryRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;month&gt;2017-06&lt;/month&gt;
&lt;/getAUJobSummaryRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-account-updater-job-summary" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getAUJobSummaryRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;month&gt;2017-06&lt;/month&gt;
&lt;/getAUJobSummaryRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-account-updater-job-summary" spellcheck="false" class="JSON JSONRequest">{
  &quot;getAUJobSummaryRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;month&quot;: &quot;2017-06&quot;
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-account-updater-job-summary" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;getAUJobSummaryRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;month&quot;: &quot;2017-06&quot;
  }
}</code>
                                                        </pre>
<p class="rightshift">
 <button type="button" id="btnSend-get-account-updater-job-summary" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-account-updater-job-summary" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-account-updater-job-summary"></span>


<div class="errorDetails" id="detailsDiv-get-account-updater-job-summary">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-account-updater-job-summary">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getAUJobSummaryResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;auSummary&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;ACL&lt;/auReasonCode&gt;
      &lt;profileCount&gt;11&lt;/profileCount&gt;
      &lt;reasonDescription&gt;AccountClosed&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;NAN&lt;/auReasonCode&gt;
      &lt;profileCount&gt;17&lt;/profileCount&gt;
      &lt;reasonDescription&gt;NewAccountNumber&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;profileCount&gt;23&lt;/profileCount&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
  &lt;/auSummary&gt;
&lt;/getAUJobSummaryResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-account-updater-job-summary" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getAUJobSummaryResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;auSummary&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;ACL&lt;/auReasonCode&gt;
      &lt;profileCount&gt;11&lt;/profileCount&gt;
      &lt;reasonDescription&gt;AccountClosed&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;NAN&lt;/auReasonCode&gt;
      &lt;profileCount&gt;17&lt;/profileCount&gt;
      &lt;reasonDescription&gt;NewAccountNumber&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
    &lt;auResponse&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;profileCount&gt;23&lt;/profileCount&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
    &lt;/auResponse&gt;
  &lt;/auSummary&gt;
&lt;/getAUJobSummaryResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-account-updater-job-summary">{
  &quot;auSummary&quot;: 
  {
    &quot;auResponse&quot;: 
    [
      {
        &quot;auReasonCode&quot;: &quot;ACL&quot;,
        &quot;profileCount&quot;: 11,
        &quot;reasonDescription&quot;: &quot;AccountClosed&quot;
      },
      {
        &quot;auReasonCode&quot;: &quot;NAN&quot;,
        &quot;profileCount&quot;: 17,
        &quot;reasonDescription&quot;: &quot;NewAccountNumber&quot;
      },
      {
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;profileCount&quot;: 23,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;
      }
    ]
  },
  &quot;refId&quot;: 123456,
  &quot;messages&quot;: 
  {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: 
    {
      &quot;code&quot;: &quot;I00001&quot;,
      &quot;text&quot;: &quot;Successful.&quot;
    }
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-account-updater-job-summary" style="display: none !important">{
  &quot;auSummary&quot;: 
  {
    &quot;auResponse&quot;: 
    [
      {
        &quot;auReasonCode&quot;: &quot;ACL&quot;,
        &quot;profileCount&quot;: 11,
        &quot;reasonDescription&quot;: &quot;AccountClosed&quot;
      },
      {
        &quot;auReasonCode&quot;: &quot;NAN&quot;,
        &quot;profileCount&quot;: 17,
        &quot;reasonDescription&quot;: &quot;NewAccountNumber&quot;
      },
      {
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;profileCount&quot;: 23,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;
      }
    ]
  },
  &quot;refId&quot;: 123456,
  &quot;messages&quot;: 
  {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: 
    {
      &quot;code&quot;: &quot;I00001&quot;,
      &quot;text&quot;: &quot;Successful.&quot;
    }
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-account-updater-job-summary" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-account-updater-job-summary">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-account-updater-job-summary">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-account-updater-job-summary"></div>
<div id="showCode-php-get-account-updater-job-summary">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-account-updater-job-summary"></a>
</p>
<textarea class="php" id="textarea-php-get-account-updater-job-summary" name="textarea-php-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-account-updater-job-summary">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-account-updater-job-summary">
 </div>
<div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-account-updater-job-summary"></div>
<div id="showCode-cs-get-account-updater-job-summary">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-account-updater-job-summary"></a>
</p>
<textarea class="cs" id="textarea-cs-get-account-updater-job-summary" name="textarea-cs-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-account-updater-job-summary">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-account-updater-job-summary">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-account-updater-job-summary"></div>
<div id="showCode-java-get-account-updater-job-summary">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-account-updater-job-summary"></a>
</p>
<textarea class="java" id="textarea-java-get-account-updater-job-summary" name="textarea-java-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-account-updater-job-summary">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-account-updater-job-summary">
</div>
 <div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-account-updater-job-summary"></div>
<div id="showCode-rb-get-account-updater-job-summary">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-account-updater-job-summary"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-account-updater-job-summary" name="textarea-rb-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-account-updater-job-summary">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-account-updater-job-summary">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-account-updater-job-summary"></div>
<div id="showCode-py-get-account-updater-job-summary">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-account-updater-job-summary"></a>
</p>
<textarea class="python" id="textarea-py-get-account-updater-job-summary" name="textarea-py-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-account-updater-job-summary">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-account-updater-job-summary">
</div>
 <div class="showCodeCont" id="showCode-get-account-updater-job-summary">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-account-updater-job-summary"></div>
<div id="showCode-js-get-account-updater-job-summary">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-account-updater-job-summary"></a>
</p>
<textarea class="node" id="textarea-js-get-account-updater-job-summary" name="textarea-js-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-account-updater-job-summary">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-account-updater-job-summary">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-account-updater-job-summary">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-account-updater-job-summary">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-account-updater-job-summary">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-account-updater-job-summary">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-account-updater-job-summary">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-summary">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-account-updater-job-summary"></div>
<div id="showCode-php-get-account-updater-job-summary">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-account-updater-job-summary" name="textarea-php-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-account-updater-job-summary"></div>
<div id="showCode-cs-get-account-updater-job-summary">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-account-updater-job-summary" name="textarea-cs-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-account-updater-job-summary"></div>
<div id="showCode-java-get-account-updater-job-summary">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-account-updater-job-summary" name="textarea-java-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-account-updater-job-summary"></div>
<div id="showCode-rb-get-account-updater-job-summary">
 <p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-account-updater-job-summary" name="textarea-rb-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-account-updater-job-summary"></div>
<div id="showCode-py-get-account-updater-job-summary">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-account-updater-job-summary" name="textarea-py-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-account-updater-job-summary"></div>
<div id="showCode-js-get-account-updater-job-summary">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-account-updater-job-summary"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-account-updater-job-summary" name="textarea-js-get-account-updater-job-summary" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-account-updater-job-summary" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-account-updater-job-summary">
<h4 class="panel-title">
<a data-parent="#accordion-get-account-updater-job-summary">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-account-updater-job-summary" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-account-updater-job-summary">
<div class="panel-body">
<p><em>getAUJobSummaryRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>month</td>
<td><strong>Required.</strong><br />
The month in which the Account Updater process was run.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-account-updater-job-summary">
<h4 class="panel-title">
<a data-parent="#accordion-get-account-updater-job-summary">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-account-updater-job-summary">
<div class="panel-body">
<p><em>getAUJobSummaryResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
 </thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>auSummary</td>
<td>Contains one or more <code>auResponse</code> elements, each containing a summary of a specific reason for update or deletion.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>auResponse</td>
<td>Contains a summary of cards updated or deleted for one specific reason.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>auReasonCode</td>
<td>A code representing the reason for the card update or deletion.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NAN</code> (New Account Number), <code>NED</code> (New Expiration Date), <code>ACL</code> (Account Closed), or <code>CCH</code> (Contact Cardholder).<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>profileCount</td>
<td>The number of payment profiles (for example, individual cards) that were updated or deleted for this specific reason code.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>reasonDescription</td>
<td>A description of the <code>auReasonCode</code>.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NewAccountNumber</code>, <code>NewExpirationDate</code>, <code>AccountClosed</code>, or <code>ContactCardholder</code>.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="transaction-reporting-get-account-updater-job-details">Get Account Updater Job Details</h3>
<p>Use this function to get details of each card updated or deleted by the Account Updater process for a particular month. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit.
No input parameters are required other than the authentication information and a batch ID. However, you can add the sorting and paging options shown below to customize the result set.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-account-updater-job-detailsTryIt" href="#console-get-account-updater-job-details" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-account-updater-job-detailsphp" href="#php-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-account-updater-job-detailscs" href="#cs-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-account-updater-job-detailsjava" href="#java-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-account-updater-job-detailsrb" href="#ruby-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-account-updater-job-detailspy" href="#python-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-account-updater-job-detailsjs" href="#node-get-account-updater-job-details" class="transaction-reporting" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-account-updater-job-details">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-account-updater-job-details">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-account-updater-job-details">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-account-updater-job-details" spellcheck="false" class="XML XMLRequest">&lt;getAUJobDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;month&gt;2017-06&lt;/month&gt;
  &lt;modifiedTypeFilter&gt;all&lt;/modifiedTypeFilter&gt;
  &lt;paging&gt;
    &lt;limit&gt;100&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getAUJobDetailsRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-account-updater-job-details" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getAUJobDetailsRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;month&gt;2017-06&lt;/month&gt;
  &lt;modifiedTypeFilter&gt;all&lt;/modifiedTypeFilter&gt;
  &lt;paging&gt;
    &lt;limit&gt;100&lt;/limit&gt;
    &lt;offset&gt;1&lt;/offset&gt;
  &lt;/paging&gt;
&lt;/getAUJobDetailsRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-account-updater-job-details" spellcheck="false" class="JSON JSONRequest">{
  &quot;getAUJobDetailsRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;month&quot;: &quot;2017-06&quot;,
    &quot;modifiedTypeFilter&quot;: &quot;all&quot;,
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-account-updater-job-details" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;getAUJobDetailsRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;month&quot;: &quot;2017-06&quot;,
    &quot;modifiedTypeFilter&quot;: &quot;all&quot;,
    &quot;paging&quot;: {
      &quot;limit&quot;: &quot;100&quot;,
      &quot;offset&quot;: &quot;1&quot;
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-account-updater-job-details" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-account-updater-job-details" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-account-updater-job-details"></span>


<div class="errorDetails" id="detailsDiv-get-account-updater-job-details">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-account-updater-job-details">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getAUJobDetailsResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;totalNumInResultSet&gt;4&lt;/totalNumInResultSet&gt;
  &lt;auDetails&gt;
    &lt;auDelete&gt;
      &lt;customerProfileID&gt;2&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;2&lt;/customerPaymentProfileID&gt;
      &lt;firstName /&gt;
      &lt;lastName /&gt;
      &lt;updateTimeUTC&gt;6/28/2017 1:31:01 PM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;ACL&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;AccountClosed&lt;/reasonDescription&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/auDelete&gt;
    &lt;auUpdate&gt;
      &lt;customerProfileID&gt;88&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;117&lt;/customerPaymentProfileID&gt;
      &lt;firstName /&gt;
      &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
      &lt;updateTimeUTC&gt;6/27/2017 9:24:47 AM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
      &lt;newCreditCard&gt;
        &lt;cardNumber&gt;XXXX2222&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/newCreditCard&gt;
      &lt;oldCreditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
    &lt;auUpdate&gt;
      &lt;customerProfileID&gt;89&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;118&lt;/customerPaymentProfileID&gt;
      &lt;firstName&gt;First name to bill_123&lt;/firstName&gt;
      &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
      &lt;updateTimeUTC&gt;6/27/2017 9:25:09 AM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
      &lt;newCreditCard&gt;
        &lt;cardNumber&gt;XXXX1212&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/newCreditCard&gt;
      &lt;oldCreditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
    &lt;auUpdate&gt;
    &lt;customerProfileID&gt;90&lt;/customerProfileID&gt;
    &lt;customerPaymentProfileID&gt;119&lt;/customerPaymentProfileID&gt;
    &lt;firstName&gt;First name to bill_123&lt;/firstName&gt;
    &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
    &lt;updateTimeUTC&gt;6/27/2017 9:40:35 AM&lt;/updateTimeUTC&gt;
    &lt;auReasonCode&gt;NAN&lt;/auReasonCode&gt;
    &lt;reasonDescription&gt;NewAccountNumber&lt;/reasonDescription&gt;
    &lt;newCreditCard&gt;
      &lt;cardNumber&gt;XXXX3333&lt;/cardNumber&gt;
      &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
    &lt;/newCreditCard&gt;
    &lt;oldCreditCard&gt;
      &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
      &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
    &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
  &lt;/auDetails&gt;
&lt;/getAUJobDetailsResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-account-updater-job-details" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getAUJobDetailsResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;totalNumInResultSet&gt;4&lt;/totalNumInResultSet&gt;
  &lt;auDetails&gt;
    &lt;auDelete&gt;
      &lt;customerProfileID&gt;2&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;2&lt;/customerPaymentProfileID&gt;
      &lt;firstName /&gt;
      &lt;lastName /&gt;
      &lt;updateTimeUTC&gt;6/28/2017 1:31:01 PM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;ACL&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;AccountClosed&lt;/reasonDescription&gt;
      &lt;creditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/creditCard&gt;
    &lt;/auDelete&gt;
    &lt;auUpdate&gt;
      &lt;customerProfileID&gt;88&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;117&lt;/customerPaymentProfileID&gt;
      &lt;firstName /&gt;
      &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
      &lt;updateTimeUTC&gt;6/27/2017 9:24:47 AM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
      &lt;newCreditCard&gt;
        &lt;cardNumber&gt;XXXX2222&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/newCreditCard&gt;
      &lt;oldCreditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
    &lt;auUpdate&gt;
      &lt;customerProfileID&gt;89&lt;/customerProfileID&gt;
      &lt;customerPaymentProfileID&gt;118&lt;/customerPaymentProfileID&gt;
      &lt;firstName&gt;First name to bill_123&lt;/firstName&gt;
      &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
      &lt;updateTimeUTC&gt;6/27/2017 9:25:09 AM&lt;/updateTimeUTC&gt;
      &lt;auReasonCode&gt;NED&lt;/auReasonCode&gt;
      &lt;reasonDescription&gt;NewExpirationDate&lt;/reasonDescription&gt;
      &lt;newCreditCard&gt;
        &lt;cardNumber&gt;XXXX1212&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/newCreditCard&gt;
      &lt;oldCreditCard&gt;
        &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
        &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
      &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
    &lt;auUpdate&gt;
    &lt;customerProfileID&gt;90&lt;/customerProfileID&gt;
    &lt;customerPaymentProfileID&gt;119&lt;/customerPaymentProfileID&gt;
    &lt;firstName&gt;First name to bill_123&lt;/firstName&gt;
    &lt;lastName&gt;Last name to bill_123&lt;/lastName&gt;
    &lt;updateTimeUTC&gt;6/27/2017 9:40:35 AM&lt;/updateTimeUTC&gt;
    &lt;auReasonCode&gt;NAN&lt;/auReasonCode&gt;
    &lt;reasonDescription&gt;NewAccountNumber&lt;/reasonDescription&gt;
    &lt;newCreditCard&gt;
      &lt;cardNumber&gt;XXXX3333&lt;/cardNumber&gt;
      &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
    &lt;/newCreditCard&gt;
    &lt;oldCreditCard&gt;
      &lt;cardNumber&gt;XXXX1111&lt;/cardNumber&gt;
      &lt;expirationDate&gt;XXXX&lt;/expirationDate&gt;
    &lt;/oldCreditCard&gt;
    &lt;/auUpdate&gt;
  &lt;/auDetails&gt;
&lt;/getAUJobDetailsResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-account-updater-job-details">{
  &quot;totalNumInResultSet&quot;: 4,
  &quot;auDetails&quot;: 
  {
    &quot;auDelete&quot;: 
    {
      &quot;customerProfileID&quot;: 2,
      &quot;customerPaymentProfileID&quot;: 2,
      &quot;firstName&quot;: &quot;&quot;,
      &quot;lastName&quot;: &quot;&quot;,
      &quot;updateTimeUTC&quot;: &quot;6/28/2017 1:31:01 PM&quot;,
      &quot;auReasonCode&quot;: &quot;ACL&quot;,
      &quot;reasonDescription&quot;: &quot;AccountClosed&quot;,
      &quot;creditCard&quot;: 
      {
        &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
        &quot;expirationDate&quot;: &quot;XXXX&quot;
      }
    },
    &quot;auUpdate&quot;: 
    [
      {
        &quot;customerProfileID&quot;: 88,
        &quot;customerPaymentProfileID&quot;: 117,
        &quot;firstName&quot;: &quot;&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:24:47 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX2222&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      },
      {
        &quot;customerProfileID&quot;: 89,
        &quot;customerPaymentProfileID&quot;: 118,
        &quot;firstName&quot;: &quot;First name to bill_123&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:25:09 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1212&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      },
      {
        &quot;customerProfileID&quot;: 90,
        &quot;customerPaymentProfileID&quot;: 119,
        &quot;firstName&quot;: &quot;First name to bill_123&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:40:35 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NAN&quot;,
        &quot;reasonDescription&quot;: &quot;NewAccountNumber&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX3333&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      }
    ]
  },
  &quot;refId&quot;: 123456,
  &quot;messages&quot;: 
  {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: 
    {
      &quot;code&quot;: &quot;I00001&quot;,
      &quot;text&quot;: &quot;Successful.&quot;
    }
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-account-updater-job-details" style="display: none !important">{
  &quot;totalNumInResultSet&quot;: 4,
  &quot;auDetails&quot;: 
  {
    &quot;auDelete&quot;: 
    {
      &quot;customerProfileID&quot;: 2,
      &quot;customerPaymentProfileID&quot;: 2,
      &quot;firstName&quot;: &quot;&quot;,
      &quot;lastName&quot;: &quot;&quot;,
      &quot;updateTimeUTC&quot;: &quot;6/28/2017 1:31:01 PM&quot;,
      &quot;auReasonCode&quot;: &quot;ACL&quot;,
      &quot;reasonDescription&quot;: &quot;AccountClosed&quot;,
      &quot;creditCard&quot;: 
      {
        &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
        &quot;expirationDate&quot;: &quot;XXXX&quot;
      }
    },
    &quot;auUpdate&quot;: 
    [
      {
        &quot;customerProfileID&quot;: 88,
        &quot;customerPaymentProfileID&quot;: 117,
        &quot;firstName&quot;: &quot;&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:24:47 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX2222&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      },
      {
        &quot;customerProfileID&quot;: 89,
        &quot;customerPaymentProfileID&quot;: 118,
        &quot;firstName&quot;: &quot;First name to bill_123&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:25:09 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NED&quot;,
        &quot;reasonDescription&quot;: &quot;NewExpirationDate&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1212&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      },
      {
        &quot;customerProfileID&quot;: 90,
        &quot;customerPaymentProfileID&quot;: 119,
        &quot;firstName&quot;: &quot;First name to bill_123&quot;,
        &quot;lastName&quot;: &quot;Last name to bill_123&quot;,
        &quot;updateTimeUTC&quot;: &quot;6/27/2017 9:40:35 AM&quot;,
        &quot;auReasonCode&quot;: &quot;NAN&quot;,
        &quot;reasonDescription&quot;: &quot;NewAccountNumber&quot;,
        &quot;newCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX3333&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        },
        &quot;oldCreditCard&quot;: 
        {
          &quot;cardNumber&quot;: &quot;XXXX1111&quot;,
          &quot;expirationDate&quot;: &quot;XXXX&quot;
        }
      }
    ]
  },
  &quot;refId&quot;: 123456,
  &quot;messages&quot;: 
  {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: 
    {
      &quot;code&quot;: &quot;I00001&quot;,
      &quot;text&quot;: &quot;Successful.&quot;
    }
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-account-updater-job-details" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-account-updater-job-details">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-account-updater-job-details"></div>
<div id="showCode-php-get-account-updater-job-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-account-updater-job-details"></a>
</p>
<textarea class="php" id="textarea-php-get-account-updater-job-details" name="textarea-php-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-account-updater-job-details">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-account-updater-job-details"></div>
<div id="showCode-cs-get-account-updater-job-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-account-updater-job-details"></a>
</p>
<textarea class="cs" id="textarea-cs-get-account-updater-job-details" name="textarea-cs-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-account-updater-job-details">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-account-updater-job-details"></div>
<div id="showCode-java-get-account-updater-job-details">
 <p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-account-updater-job-details"></a>
</p>
<textarea class="java" id="textarea-java-get-account-updater-job-details" name="textarea-java-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-account-updater-job-details">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-account-updater-job-details"></div>
<div id="showCode-rb-get-account-updater-job-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-account-updater-job-details"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-account-updater-job-details" name="textarea-rb-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-account-updater-job-details">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-account-updater-job-details"></div>
<div id="showCode-py-get-account-updater-job-details">
<p>
 This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-account-updater-job-details"></a>
</p>
<textarea class="python" id="textarea-py-get-account-updater-job-details" name="textarea-py-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-account-updater-job-details">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-account-updater-job-details">
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-account-updater-job-details"></div>
<div id="showCode-js-get-account-updater-job-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-account-updater-job-details"></a>
</p>
<textarea class="node" id="textarea-js-get-account-updater-job-details" name="textarea-js-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-account-updater-job-details">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-account-updater-job-details">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-account-updater-job-details">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-account-updater-job-details">Java</button>
 <button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-account-updater-job-details">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-account-updater-job-details">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-account-updater-job-details">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-account-updater-job-details">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-account-updater-job-details"></div>
<div id="showCode-php-get-account-updater-job-details">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-account-updater-job-details" name="textarea-php-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-account-updater-job-details"></div>
<div id="showCode-cs-get-account-updater-job-details">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-account-updater-job-details" name="textarea-cs-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-account-updater-job-details"></div>
<div id="showCode-java-get-account-updater-job-details">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-account-updater-job-details" name="textarea-java-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-account-updater-job-details"></div>
<div id="showCode-rb-get-account-updater-job-details">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-account-updater-job-details" name="textarea-rb-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-account-updater-job-details"></div>
<div id="showCode-py-get-account-updater-job-details">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-account-updater-job-details" name="textarea-py-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
 <div class="sampleWarningCont" id="warning-js-get-account-updater-job-details"></div>
<div id="showCode-js-get-account-updater-job-details">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-account-updater-job-details"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-account-updater-job-details" name="textarea-js-get-account-updater-job-details" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-account-updater-job-details" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-account-updater-job-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-account-updater-job-details">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-account-updater-job-details" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-account-updater-job-details">
<div class="panel-body">
<p><em>getAUJobDetailsRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>month</td>
<td><strong>Required.</strong><br />
The month in which the Account Updater process was run.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td>modifiedTypeFilter</td>
<td><strong>Optional.</strong><br />Filter the results to to include only updates, only deletes, or all changes.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>all</code>, <code>updates</code>, or <code>deletes</code>.<br /><br />
</div></td>
 </tr>
<tr>
<td>paging</td>
<td>Contains paging information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>limit</td>
<td>The number of transactions per page.<br /><br />
You can request up to 1000 transactions per page of results.</td>
<td><div>Decimal, between 1 and 1000.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>offset</td>
<td>The number of the page to return results from.<br /><br />
For example, if you use a <code>limit</code> of 100, setting <code>offset</code> to 1 will return the first 100 transactions, setting <code>offset</code> to 2 will return the second 100 transactions, and so forth.</td>
<td><div>Decimal, between 1 and 100000.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-account-updater-job-details">
<h4 class="panel-title">
<a data-parent="#accordion-get-account-updater-job-details">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-account-updater-job-details">
<div class="panel-body">
<p><em>getAUJobDetailsResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
 </thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
 <td>totalNumInResultSet</td>
<td>Shows the number of results for this request.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>auDetails</td>
<td>Contains one or more <code>auUpdate</code> or <code>auDelete</code> fields, each containing details of a specific update or deletion.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>auUpdate</td>
<td>Contains sub-elements with details for a card that was updated.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>The ID of the customer profile containing the payment profile that was updated.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td>The ID of the specific customer payment profile (for example, a credit card) that was updated.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>Customer's first name.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Customer's last name.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>updateTimeUTC</td>
<td>The time in UTC that the card was updated.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>auReasonCode</td>
<td>A code representing the reason for the card update or deletion.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NAN</code> (New Account Number), <code>NED</code> (New Expiration Date), <code>ACL</code> (Account Closed), or <code>CCH</code> (Contact Cardholder).<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>reasonDescription</td>
<td>A description of the <code>auReasonCode</code>.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NewAccountNumber</code>, <code>NewExpirationDate</code>, <code>AccountClosed</code>, or <code>ContactCardholder</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>newCreditCard</td>
<td>Container element that contains information about the new card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>A masked version of the card number showing the last four digits.<br /><br />
</td>
<td><div>String.<br /><br>For example, XXXX1234.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>The card's expiration date.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>oldCreditCard</td>
<td>Container element that contains information about the old card.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>A masked version of the card number showing the last four digits.<br /><br />
</td>
<td><div>String.<br /><br>For example, XXXX1234.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>The card's expiration date.<br /><br />
</td>
<td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>auDelete</td>
<td>Contains sub-elements with details for a card that was deleted.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>The ID of the customer profile containing the payment profile that was updated.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>customerPaymentProfileId</td>
<td>The ID of the specific customer payment profile (for example, a credit card) that was updated.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>Customer's first name.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>lastName</td>
<td>Customer's last name.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>updateTimeUTC</td>
<td>The time in UTC that the card was updated.<br /><br />
</td>
<td><div>String.<br /><br />Use XML dateTime (YYYY-MM-DDThh:mm:ss) formatting.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>auReasonCode</td>
<td>A code representing the reason for the card update or deletion.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NAN</code> (New Account Number), <code>NED</code> (New Expiration Date), <code>ACL</code> (Account Closed), or <code>CCH</code> (Contact Cardholder).<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>reasonDescription</td>
<td>A description of the <code>auReasonCode</code>.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>NewAccountNumber</code>, <code>NewExpirationDate</code>, <code>AccountClosed</code>, or <code>ContactCardholder</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>creditCard</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>cardNumber</td>
<td>A masked version of the card number showing the last four digits.<br /><br />
</td>
<td><div>String.<br /><br>For example, XXXX1234.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>expirationDate</td>
<td>The card's expiration date.<br /><br />
</td>
 <td><div>String, 7 characters.<br /><br />Use XML <a href="https://www.w3.org/TR/xmlschema11-2/#gYearMonth">gYearMonth</a> (YYYY-MM) formatting.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="bs-docs-section col-md-12" id="LeftMenuList">
<h2 id="accept-suite" class="section-title">Accept Suite</h2>
<p class="lead">Authorize.Net Accept is a suite of developer tools for building websites and mobile applications without increasing PCI burden for merchants. It offers a range of integration options, including JavaScript libraries, mobile SDKs and hosted forms.</p>
<h3 id="accept-suite-create-an-accept-payment-transaction">Create an Accept Payment Transaction</h3>
<p>Use this function to create an Authorize.Net payment transaction request, using the Accept Payment nonce in place of card data.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="create-an-accept-payment-transactionTryIt" href="#console-create-an-accept-payment-transaction" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="create-an-accept-payment-transactionphp" href="#php-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="create-an-accept-payment-transactioncs" href="#cs-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="create-an-accept-payment-transactionjava" href="#java-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="create-an-accept-payment-transactionrb" href="#ruby-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="create-an-accept-payment-transactionpy" href="#python-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="create-an-accept-payment-transactionjs" href="#node-create-an-accept-payment-transaction" class="accept-suite" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-create-an-accept-payment-transaction">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="create-an-accept-payment-transaction">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="create-an-accept-payment-transaction">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-create-an-accept-payment-transaction" spellcheck="false" class="XML XMLRequest">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.ACCEPT.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-create-an-accept-payment-transaction" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;createTransactionRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;5&lt;/amount&gt;
    &lt;payment&gt;
      &lt;opaqueData&gt;
        &lt;dataDescriptor&gt;COMMON.ACCEPT.INAPP.PAYMENT&lt;/dataDescriptor&gt;
        &lt;dataValue&gt;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&lt;/dataValue&gt;
      &lt;/opaqueData&gt;  
    &lt;/payment&gt;
    &lt;lineItems&gt;
      &lt;lineItem&gt;
        &lt;itemId&gt;1&lt;/itemId&gt;
        &lt;name&gt;vase&lt;/name&gt;
        &lt;description&gt;Cannes logo &lt;/description&gt;
        &lt;quantity&gt;18&lt;/quantity&gt;
        &lt;unitPrice&gt;45.00&lt;/unitPrice&gt;
      &lt;/lineItem&gt;
    &lt;/lineItems&gt;
    &lt;poNumber&gt;456654&lt;/poNumber&gt;
    &lt;billTo&gt;
      &lt;firstName&gt;Ellen&lt;/firstName&gt;
      &lt;lastName&gt;Johnson&lt;/lastName&gt;
      &lt;company&gt;Souveniropolis&lt;/company&gt;
      &lt;address&gt;14 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
    &lt;shipTo&gt;
      &lt;firstName&gt;China&lt;/firstName&gt;
      &lt;lastName&gt;Bayles&lt;/lastName&gt;
      &lt;company&gt;Thyme for Tea&lt;/company&gt;
      &lt;address&gt;12 Main Street&lt;/address&gt;
      &lt;city&gt;Pecan Springs&lt;/city&gt;
      &lt;state&gt;TX&lt;/state&gt;
      &lt;zip&gt;44628&lt;/zip&gt;
      &lt;country&gt;USA&lt;/country&gt;
    &lt;/shipTo&gt;
    &lt;customerIP&gt;192.168.1.1&lt;/customerIP&gt;
  &lt;/transactionRequest&gt;
&lt;/createTransactionRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-create-an-accept-payment-transaction" spellcheck="false" class="JSON JSONRequest">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.ACCEPT.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-create-an-accept-payment-transaction" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;createTransactionRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;refId&quot;: &quot;123456&quot;,
        &quot;transactionRequest&quot;: {
            &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
            &quot;amount&quot;: &quot;5&quot;,
            &quot;payment&quot;: {
                &quot;opaqueData&quot;: {
                    &quot;dataDescriptor&quot;: &quot;COMMON.ACCEPT.INAPP.PAYMENT&quot;,
                    &quot;dataValue&quot;: &quot;1234567890ABCDEF1111AAAA2222BBBB3333CCCC4444DDDD5555EEEE6666FFFF7777888899990000&quot;
                }
            },
            &quot;lineItems&quot;: {
                &quot;lineItem&quot;: {
                    &quot;itemId&quot;: &quot;1&quot;,
                    &quot;name&quot;: &quot;vase&quot;,
                    &quot;description&quot;: &quot;Cannes logo&quot;,
                    &quot;quantity&quot;: &quot;18&quot;,
                    &quot;unitPrice&quot;: &quot;45.00&quot;
                }
            },
            &quot;poNumber&quot;: &quot;456654&quot;,
            &quot;billTo&quot;: {
                &quot;firstName&quot;: &quot;Ellen&quot;,
                &quot;lastName&quot;: &quot;Johnson&quot;,
                &quot;company&quot;: &quot;Souveniropolis&quot;,
                &quot;address&quot;: &quot;14 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;shipTo&quot;: {
                &quot;firstName&quot;: &quot;China&quot;,
                &quot;lastName&quot;: &quot;Bayles&quot;,
                &quot;company&quot;: &quot;Thyme for Tea&quot;,
                &quot;address&quot;: &quot;12 Main Street&quot;,
                &quot;city&quot;: &quot;Pecan Springs&quot;,
                &quot;state&quot;: &quot;TX&quot;,
                &quot;zip&quot;: &quot;44628&quot;,
                &quot;country&quot;: &quot;USA&quot;
            },
            &quot;customerIP&quot;: &quot;192.168.1.1&quot;,
            &quot;userFields&quot;: {
                &quot;userField&quot;: [
                    {
                        &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                        &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
                    },
                    {
                        &quot;name&quot;: &quot;favorite_color&quot;,
                        &quot;value&quot;: &quot;blue&quot;
                    }
                ]
            }
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-create-an-accept-payment-transaction" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-create-an-accept-payment-transaction" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-create-an-accept-payment-transaction"></span>


<div class="errorDetails" id="detailsDiv-create-an-accept-payment-transaction">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-create-an-accept-payment-transaction">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-create-an-accept-payment-transaction" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;createTransactionResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;refId&gt;123456&lt;/refId&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;transactionResponse&gt;
    &lt;responseCode&gt;1&lt;/responseCode&gt;
    &lt;authCode&gt;UGELQC&lt;/authCode&gt;
    &lt;avsResultCode&gt;E&lt;/avsResultCode&gt;
    &lt;cavvResultCode /&gt;
    &lt;transId&gt;2148061808&lt;/transId&gt;
    &lt;refTransID /&gt;
    &lt;transHash&gt;0B428D8A928AAC61121AF2F6EAC5FF3F&lt;/transHash&gt;
    &lt;accountNumber&gt;XXXX0015&lt;/accountNumber&gt;
    &lt;accountType&gt;Mastercard&lt;/accountType&gt;
    &lt;message&gt;
      &lt;code&gt;1&lt;/code&gt;
      &lt;description&gt;This transaction has been approved.&lt;/description&gt;
    &lt;/message&gt;
    &lt;userFields&gt;
      &lt;userField&gt;
        &lt;name&gt;MerchantDefinedFieldName1&lt;/name&gt;
        &lt;value&gt;MerchantDefinedFieldValue1&lt;/value&gt;
      &lt;/userField&gt;
      &lt;userField&gt;
        &lt;name&gt;favorite_color&lt;/name&gt;
        &lt;value&gt;lavender&lt;/value&gt;
      &lt;/userField&gt;
    &lt;/userFields&gt;
  &lt;/transactionResponse&gt;
&lt;/createTransactionResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-create-an-accept-payment-transaction">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-create-an-accept-payment-transaction" style="display: none !important">{
    &quot;transactionResponse&quot;: {
        &quot;responseCode&quot;: &quot;1&quot;,
        &quot;authCode&quot;: &quot;2768NO&quot;,
        &quot;avsResultCode&quot;: &quot;Y&quot;,
        &quot;cvvResultCode&quot;: &quot;P&quot;,
        &quot;cavvResultCode&quot;: &quot;2&quot;,
        &quot;transId&quot;: &quot;60006537898&quot;,
        &quot;refTransID&quot;: &quot;&quot;,
        &quot;transHash&quot;: &quot;B3BDC21A6B341938D8F1927492F4D516&quot;,
        &quot;accountNumber&quot;: &quot;XXXX0005&quot;,
        &quot;accountType&quot;: &quot;AmericanExpress&quot;,
        &quot;messages&quot;: [
            {
                &quot;code&quot;: &quot;1&quot;,
                &quot;description&quot;: &quot;This transaction has been approved.&quot;
            }
        ],
        &quot;userFields&quot;: [
            {
                &quot;name&quot;: &quot;MerchantDefinedFieldName1&quot;,
                &quot;value&quot;: &quot;MerchantDefinedFieldValue1&quot;
            },
            {
                &quot;name&quot;: &quot;favorite_color&quot;,
                &quot;value&quot;: &quot;blue&quot;
            }
        ],
        &quot;transHashSha2&quot;: &quot;&quot;
    },
    &quot;refId&quot;: &quot;123456&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-create-an-accept-payment-transaction" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-create-an-accept-payment-transaction">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-create-an-accept-payment-transaction"></div>
<div id="showCode-php-create-an-accept-payment-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-an-accept-payment-transaction"></a>
</p>
<textarea class="php" id="textarea-php-create-an-accept-payment-transaction" name="textarea-php-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-create-an-accept-payment-transaction">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-create-an-accept-payment-transaction"></div>
<div id="showCode-cs-create-an-accept-payment-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
 <p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-an-accept-payment-transaction"></a>
</p>
<textarea class="cs" id="textarea-cs-create-an-accept-payment-transaction" name="textarea-cs-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-create-an-accept-payment-transaction">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-create-an-accept-payment-transaction"></div>
<div id="showCode-java-create-an-accept-payment-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-an-accept-payment-transaction"></a>
</p>
<textarea class="java" id="textarea-java-create-an-accept-payment-transaction" name="textarea-java-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-create-an-accept-payment-transaction">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-create-an-accept-payment-transaction"></div>
<div id="showCode-rb-create-an-accept-payment-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
 </p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-an-accept-payment-transaction"></a>
 </p>
<textarea class="ruby" id="textarea-rb-create-an-accept-payment-transaction" name="textarea-rb-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-create-an-accept-payment-transaction">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-create-an-accept-payment-transaction"></div>
<div id="showCode-py-create-an-accept-payment-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-an-accept-payment-transaction"></a>
</p>
<textarea class="python" id="textarea-py-create-an-accept-payment-transaction" name="textarea-py-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-create-an-accept-payment-transaction">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="create-an-accept-payment-transaction">
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-create-an-accept-payment-transaction"></div>
<div id="showCode-js-create-an-accept-payment-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-an-accept-payment-transaction"></a>
</p>
<textarea class="node" id="textarea-js-create-an-accept-payment-transaction" name="textarea-js-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-create-an-accept-payment-transaction">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="create-an-accept-payment-transaction">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="create-an-accept-payment-transaction">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="create-an-accept-payment-transaction">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="create-an-accept-payment-transaction">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="create-an-accept-payment-transaction">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="create-an-accept-payment-transaction">Node</button>
</div>
<div class="showCodeCont" id="showCode-create-an-accept-payment-transaction">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-create-an-accept-payment-transaction"></div>
<div id="showCode-php-create-an-accept-payment-transaction">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-php-create-an-accept-payment-transaction" name="textarea-php-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
 <div class="sampleWarningCont" id="warning-cs-create-an-accept-payment-transaction"></div>
<div id="showCode-cs-create-an-accept-payment-transaction">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-cs-create-an-accept-payment-transaction" name="textarea-cs-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-create-an-accept-payment-transaction"></div>
<div id="showCode-java-create-an-accept-payment-transaction">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-java-create-an-accept-payment-transaction" name="textarea-java-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-create-an-accept-payment-transaction"></div>
<div id="showCode-rb-create-an-accept-payment-transaction">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-rb-create-an-accept-payment-transaction" name="textarea-rb-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
 </div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-create-an-accept-payment-transaction"></div>
<div id="showCode-py-create-an-accept-payment-transaction">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-py-create-an-accept-payment-transaction" name="textarea-py-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-create-an-accept-payment-transaction"></div>
<div id="showCode-js-create-an-accept-payment-transaction">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-create-an-accept-payment-transaction"></a>
</p>
<textarea class="sample-code" id="textarea-js-create-an-accept-payment-transaction" name="textarea-js-create-an-accept-payment-transaction" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-create-an-accept-payment-transaction" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-create-an-accept-payment-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-an-accept-payment-transaction">
Request Field Description
 </a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-create-an-accept-payment-transaction" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-create-an-accept-payment-transaction">
<div class="panel-body">
<p><em>createTransactionRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td>Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction, or use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>payment</td>
<td>This element contains payment information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>opaqueData</td>
<td><strong>Required.</strong><br />
Contains <code>dataDescriptor</code> and <code>dataValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>dataDescriptor</td>
<td><strong>Required.</strong><br />
Specifies how the request should be processed.<br /><br />
The value of <code>dataDescriptor</code> is based on the source of the value of <code>dataValue</code>.</td>
<td><div>String, 128 characters.<br /><br />Use <code>COMMON.ACCEPT.INAPP.PAYMENT</code> for Accept transactions.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>dataValue</td>
<td><strong>Required.</strong><br />
Base64 encoded data that contains encrypted payment data, known as the payment nonce. The nonce is valid for 15 minutes.<br /><br />
The payment gateway expects the encrypted payment data and meta data for the encryption keys.</td>
<td><div>String, 8192 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>terminalNumber</td>
<td>The merchant's in-store terminal number. Can identify the cashiers or kiosks used.<br /><br />
Do not use your processor's terminal ID for this field.</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
 <td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
<td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
 <td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
For example, janedoe@example.com.</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customerIP</td>
<td><strong>Conditional.</strong><br /><br />The IPv4 address of the customer initiating the transaction. Defaults to 255.255.255.255 if not included in your request.<br /><br />
Required only when the merchant is using customer IP based AFDS filters. </td>
<td><div>String, up to 15 characters.<br /><br />Use dot-decimal formatting.<br /><br />
 For example, 255.255.255.255.</div></td>
</tr>
<tr>
<td class='oneBullet'>cardholderAuthentication</td>
<td>Merchants using a third party cardholder authentication solution can submit the following authentication values with Visa and Mastercard transactions.<br /><br />
Invalid combinations of card type, <code>authenticationIndicator</code>, and <code>cardholderAuthenticationValue</code> will result in Response Reason Code 118.</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>authenticationIndicator</td>
<td><strong>Conditional.</strong><br /><br />The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>authenticationIndicator</code> will result in Response Reason Code 116.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>cardholderAuthenticationValue</td>
<td><strong>Conditional.</strong><br /><br />The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction.<br /><br />
Required only for <code>authorizationOnlyTransaction</code> and <code>authCaptureTransaction</code> requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or Mastercard Identity Check. When submitted with other values for <code>transactionValue</code>, this element is ignored.<br /><br />Invalid values of <code>cardholderAuthenticationValue</code> will result in Response Reason Code 117.<br /><br />This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>employeeId</td>
<td>Merchant-assigned employee ID.<br /><br />
This field is required for the EVO processor, and is supported on the TSYS processor.</td>
<td><div>Numeric string, 4 digits. Defaults to <code>0000</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionSettings</td>
<td>This element contains one or more <code>setting</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>settingName</td>
<td>Name of a specific setting to be modified for this transaction.<br /><br />
For a list of valid <code>settingName</code> values and their uses, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />One of the following:<br /><code>allowPartialAuth</code><br /><code>duplicateWindow</code><br /><code>emailCustomer</code><br /><code>headerEmailReceipt</code><br /><code>footerEmailReceipt</code><br /><code>recurringBilling</code><br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>settingValue</td>
<td>Indicates whether the specified setting is enabled or disabled.<br /><br />
For a list of permitted <code>settingValue</code> formats, please see the <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Transaction_Settings">Transaction Settings</a> section of the Payment Transactions page.</td>
<td><div>String.<br /><br />Permitted values depend on the value of <code>settingName</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>surcharge</td>
<td>Used to record payment card surcharges that are passed along to customers. Contains an <code>amount</code> and a <code>description</code> child element.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
 <tr>
<td class='twoBullet'>description</td>
<td>Describes the reason or details for the surcharge.<br /><br />
Currently supported for TSYS merchants.<br /><br />For details on surcharge rules, please see <a href="https://www.visa.com/merchantsurcharging">Visa's merchant regulations and fees.</a></td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tip</td>
<td>The amount of the tip authorized by the cardholder.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-create-an-accept-payment-transaction">
<h4 class="panel-title">
<a data-parent="#accordion-create-an-accept-payment-transaction">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-create-an-accept-payment-transaction">
<div class="panel-body">
<p><em>createTransactionResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionResponse</td>
<td></td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>avsResultCode</td>
<td>Address Verification Service (AVS) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>A</code> -- The street address matched, but the postal code did not.<br /><code>B</code> -- No address information was provided.<br /><code>E</code> -- The AVS check returned an error.<br /><code>G</code> -- The card was issued by a bank outside the U.S. and does not support AVS.<br /><code>N</code> -- Neither the street address nor postal code matched.<br /><code>P</code> -- AVS is not applicable for this transaction.<br /><code>R</code> -- Retry — AVS was unavailable or timed out.<br /><code>S</code> -- AVS is not supported by card issuer.<br /><code>U</code> -- Address information is unavailable.<br /><code>W</code> -- The US ZIP+4 code matches, but the street address does not.<br /><code>X</code> -- Both the street address and the US ZIP+4 code matched.<br /><code>Y</code> -- The street address and postal code matched.<br /><code>Z</code> -- The postal code matched, but the street address did not.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cvvResultCode</td>
<td>Card code verification (CCV) response code.<br /><br />
</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br /><code>M</code> -- CVV matched.<br /><code>N</code> -- CVV did not match.<br /><code>P</code> -- CVV was not processed.<br /><code>S</code> -- CVV should have been present but was not indicated.<br /><code>U</code> -- The issuer was unable to process the CVV check.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>cavvResultCode</td>
<td>Cardholder authentication verification response code.<br /><br />
<emphasis>Note:</emphasis> Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.</td>
<td><div>String, 1 character.<br /><br />One of the following:<br /><br />Blank or not present -- CAVV not validated.<br /><code>0</code> -- CAVV was not validated because erroneous data was submitted.<br /><code>1</code> -- CAVV failed validation.<br /><code>2</code> -- CAVV passed validation.<br /><code>3</code> -- CAVV validation could not be performed; issuer attempt incomplete.<br /><code>4</code> -- CAVV validation could not be performed; issuer system error.<br /><code>5</code> -- Reserved for future use.<br /><code>6</code> -- Reserved for future use.<br /><code>7</code> -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>8</code> -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.<br /><code>9</code> -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>A</code> -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.<br /><code>B</code> -- CAVV passed validation, information only, no liability shift.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>refTransId</td>
<td>The transaction ID of a related, previously settled transaction.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transHash</td>
<td>Payment gateway-generated MD5 hash value that can be used to authenticate the transaction response.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>accountNumber</td>
<td>The masked card number or bank account number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
 For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, <code>JCB</code>, or <code>eCheck</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='threeBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
 </tr>
<tr>
<td class='oneBullet'>errors</td>
<td>This element contains one or more <code>error</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>error</td>
<td>This element contains detailed information about any errors returned.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>errorCode</td>
<td>Error code returned.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>errorText</td>
<td>Text description of error.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>splitTenderPayments</td>
<td>If the transaction was a partial authorization transaction, then the split tender payment details are contained in this element.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>splitTenderPayment</td>
<td>Contains information about one split tender transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='threeBullet'>transId</td>
<td>The Authorize.Net assigned identification number for a transaction.<br /><br />
Use this value to reference at a later time the transaction generated by this API call. You may need the transaction ID for follow-on transactions such as credits, voids, and captures of unsettled transactions, as well as for reporting calls.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseCode</td>
<td>The overall status of the transaction.<br /><br />
</td>
<td><div>String.<br /><br />One of the following:<br /><br /><code>1</code> -- Approved<br /><code>2</code> -- Declined<br /><code>3</code> -- Error<br /><code>4</code> -- Held for Review<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>responseToCustomer</td>
<td>The response reason code.<br /><br />
For a complete list of response codes, see the <a href="https://developer.authorize.net/api/reference/responseCodes.html">Response Code Tool.</a></td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>authCode</td>
<td>The authorization code granted by the card issuing bank for this transaction.<br /><br />
</td>
<td><div>String, 6 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>accountNumber</td>
<td>The masked card number used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />
For example, XXXX1234.</div></td>
</tr>
<tr>
<td class='threeBullet'>accountType</td>
<td>The account type used for the transaction.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Visa</code>, <code>Mastercard</code>, <code>Discover</code>, <code>AmericanExpress</code>, <code>DinersClub</code>, or <code>JCB</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>requestedAmount</td>
<td>Amount requested in original authorization.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>approvedAmount</td>
<td>Amount approved.<br /><br />
Present if the current transaction is for a prepaid card or if a <code>splitTenderId</code> value was sent.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>balanceOnCard</td>
<td>Balance on the debit card or prepaid card.<br /><br />
Can be a positive or negative number. Has a value only if the current transaction is for a prepaid card.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
 <tr>
<td class='oneBullet'>userFields</td>
<td>These elements may be used to pass through information, such as session IDs and order details. The merchant will receive these elements in the response, exactly as it was submitted in the request. Authorize.Net will not store these values.<br /><br />Do not use these fields to pass through sensitive details as doing so may be a violation of the PCI Data Security Standard.<br /><br />Worldpay RAFT 610 merchants can view the first two <b>userField</b> elements in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>userField</td>
<td>The element for individual user-defined fields. Contains the <code>name</code> and <code>value</code> child elements.<br /><br />
Up to 20 <code>userField</code> elements may be submitted per request.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>Name of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>value</td>
<td>Value of the user-defined field.<br /><br />
User reference field provided for the merchant’s use. The merchant will receive this field in the response, exactly as it was submitted in the request. Authorize.Net will not store this value.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<h3 id="accept-suite-get-accept-customer-profile-page">Get Accept Customer Profile Page</h3>
<p>Use this function to initiate a request for direct access to the Authorize.Net website.</p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
 <li id="console" class="active">
<a id="get-accept-customer-profile-pageTryIt" href="#console-get-accept-customer-profile-page" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-accept-customer-profile-pagephp" href="#php-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-accept-customer-profile-pagecs" href="#cs-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-accept-customer-profile-pagejava" href="#java-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-accept-customer-profile-pagerb" href="#ruby-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-accept-customer-profile-pagepy" href="#python-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-accept-customer-profile-pagejs" href="#node-get-accept-customer-profile-page" class="accept-suite" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-accept-customer-profile-page">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-accept-customer-profile-page">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-accept-customer-profile-page">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-accept-customer-profile-page" spellcheck="false" class="XML XMLRequest">&lt;getHostedProfilePageRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;YourProfileID&lt;/customerProfileId&gt;
  &lt;hostedProfileSettings&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfileReturnUrl&lt;/settingName&gt;
      &lt;settingValue&gt;https://returnurl.com/return/&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfileReturnUrlText&lt;/settingName&gt;
      &lt;settingValue&gt;Continue to confirmation page.&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfilePageBorderVisible&lt;/settingName&gt;
      &lt;settingValue&gt;true&lt;/settingValue&gt;
    &lt;/setting&gt;
 &lt;/hostedProfileSettings&gt;
&lt;/getHostedProfilePageRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-accept-customer-profile-page" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getHostedProfilePageRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;customerProfileId&gt;YourProfileID&lt;/customerProfileId&gt;
  &lt;hostedProfileSettings&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfileReturnUrl&lt;/settingName&gt;
      &lt;settingValue&gt;https://returnurl.com/return/&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfileReturnUrlText&lt;/settingName&gt;
      &lt;settingValue&gt;Continue to confirmation page.&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedProfilePageBorderVisible&lt;/settingName&gt;
      &lt;settingValue&gt;true&lt;/settingValue&gt;
    &lt;/setting&gt;
 &lt;/hostedProfileSettings&gt;
&lt;/getHostedProfilePageRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-accept-customer-profile-page" spellcheck="false" class="JSON JSONRequest">{
    &quot;getHostedProfilePageRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;YourProfileID&quot;,
        &quot;hostedProfileSettings&quot;: {
            &quot;setting&quot;: [
                {
                    &quot;settingName&quot;: &quot;hostedProfileReturnUrl&quot;,
                    &quot;settingValue&quot;: &quot;https://returnurl.com/return/&quot;
                },
                {
                    &quot;settingName&quot;: &quot;hostedProfileReturnUrlText&quot;,
                    &quot;settingValue&quot;: &quot;Continue to confirmation page.&quot;
                },
                {
                    &quot;settingName&quot;: &quot;hostedProfilePageBorderVisible&quot;,
                    &quot;settingValue&quot;: &quot;true&quot;
                }
            ]
        }
    }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-accept-customer-profile-page" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
    &quot;getHostedProfilePageRequest&quot;: {
        &quot;merchantAuthentication&quot;: {
            &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
            &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
        },
        &quot;customerProfileId&quot;: &quot;YourProfileID&quot;,
        &quot;hostedProfileSettings&quot;: {
            &quot;setting&quot;: [
                {
                    &quot;settingName&quot;: &quot;hostedProfileReturnUrl&quot;,
                    &quot;settingValue&quot;: &quot;https://returnurl.com/return/&quot;
                },
                {
                    &quot;settingName&quot;: &quot;hostedProfileReturnUrlText&quot;,
                    &quot;settingValue&quot;: &quot;Continue to confirmation page.&quot;
                },
                {
                    &quot;settingName&quot;: &quot;hostedProfilePageBorderVisible&quot;,
                    &quot;settingValue&quot;: &quot;true&quot;
                }
            ]
        }
    }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-accept-customer-profile-page" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-accept-customer-profile-page" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-accept-customer-profile-page"></span>


<div class="errorDetails" id="detailsDiv-get-accept-customer-profile-page">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-accept-customer-profile-page">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getHostedProfilePageResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;token&gt;+ZeWDaUOPoQPRGTHcKd7DYbMfcAFDrhO8GPOFNt+ACzJnvkz+aWO0SYSAA9x602jAIKKfUHUt2ybwQRaG8LzHluuR5dRgsuh+kjarKvD0hpieGjLHmnz0LHmFv1Xe9P3zpmawqBCSB/d4jcSg9dAxecNBUzMwIuYzY+vGUGLUXgr9QPaRh93HqWZrV4Mbwop&lt;/token&gt;
&lt;/getHostedProfilePageResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-accept-customer-profile-page" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getHostedProfilePageResponse xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;token&gt;+ZeWDaUOPoQPRGTHcKd7DYbMfcAFDrhO8GPOFNt+ACzJnvkz+aWO0SYSAA9x602jAIKKfUHUt2ybwQRaG8LzHluuR5dRgsuh+kjarKvD0hpieGjLHmnz0LHmFv1Xe9P3zpmawqBCSB/d4jcSg9dAxecNBUzMwIuYzY+vGUGLUXgr9QPaRh93HqWZrV4Mbwop&lt;/token&gt;
&lt;/getHostedProfilePageResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-accept-customer-profile-page">{
    &quot;token&quot;: &quot;e3X1JmlCM01EV4HVLqJhdbfStNUmKMkeQ/bm+jBGrFwpeLnaX3E6wmquJZtLXEyMHlcjhNPx471VoGzyrYF1/VIDKk/qcDKT9BShN64Noft0toiYq07nn1CD+w4AzK2kwpSJkjS3I92h9YompnDXSkPKJWopwUesi6n/trJ96CP/m4rf4Xv6vVQqS0DEu+e+foNGkobJwjop2qHPYOp6e+oNGNIYcGYc06VkwE3kQ+ZbBpBhlkKRYdjJdBYRwdSRtcE7YPia2ENTFGNuMYZvFv7rBaoBftWMvapK7Leb1QcE1uQ+t/9X0wlamazbJmubdiE4Gg5GSiFFeVMcMEhUGJyloDCkTzY/Yv1tg0kAK7GfLXLcD+1pwu+YAR4MasCwnFMduwOc3sFOEWmhnU/cvQ&#x3D;&#x3D;&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-accept-customer-profile-page" style="display: none !important">{
    &quot;token&quot;: &quot;e3X1JmlCM01EV4HVLqJhdbfStNUmKMkeQ/bm+jBGrFwpeLnaX3E6wmquJZtLXEyMHlcjhNPx471VoGzyrYF1/VIDKk/qcDKT9BShN64Noft0toiYq07nn1CD+w4AzK2kwpSJkjS3I92h9YompnDXSkPKJWopwUesi6n/trJ96CP/m4rf4Xv6vVQqS0DEu+e+foNGkobJwjop2qHPYOp6e+oNGNIYcGYc06VkwE3kQ+ZbBpBhlkKRYdjJdBYRwdSRtcE7YPia2ENTFGNuMYZvFv7rBaoBftWMvapK7Leb1QcE1uQ+t/9X0wlamazbJmubdiE4Gg5GSiFFeVMcMEhUGJyloDCkTzY/Yv1tg0kAK7GfLXLcD+1pwu+YAR4MasCwnFMduwOc3sFOEWmhnU/cvQ&#x3D;&#x3D;&quot;,
    &quot;messages&quot;: {
        &quot;resultCode&quot;: &quot;Ok&quot;,
        &quot;message&quot;: [
            {
                &quot;code&quot;: &quot;I00001&quot;,
                &quot;text&quot;: &quot;Successful.&quot;
            }
        ]
    }
}</code>
                                                </pre>
<div id="txtRespLoader-get-accept-customer-profile-page" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-accept-customer-profile-page">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-accept-customer-profile-page"></div>
<div id="showCode-php-get-accept-customer-profile-page">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-accept-customer-profile-page"></a>
</p>
<textarea class="php" id="textarea-php-get-accept-customer-profile-page" name="textarea-php-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-accept-customer-profile-page">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-accept-customer-profile-page"></div>
<div id="showCode-cs-get-accept-customer-profile-page">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-accept-customer-profile-page"></a>
</p>
<textarea class="cs" id="textarea-cs-get-accept-customer-profile-page" name="textarea-cs-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-accept-customer-profile-page">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-accept-customer-profile-page"></div>
<div id="showCode-java-get-accept-customer-profile-page">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-accept-customer-profile-page"></a>
</p>
<textarea class="java" id="textarea-java-get-accept-customer-profile-page" name="textarea-java-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-accept-customer-profile-page">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-accept-customer-profile-page"></div>
<div id="showCode-rb-get-accept-customer-profile-page">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-accept-customer-profile-page"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-accept-customer-profile-page" name="textarea-rb-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-accept-customer-profile-page">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-accept-customer-profile-page"></div>
<div id="showCode-py-get-accept-customer-profile-page">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-accept-customer-profile-page"></a>
</p>
<textarea class="python" id="textarea-py-get-accept-customer-profile-page" name="textarea-py-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-accept-customer-profile-page">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-accept-customer-profile-page">
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-accept-customer-profile-page"></div>
<div id="showCode-js-get-accept-customer-profile-page">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-accept-customer-profile-page"></a>
</p>
<textarea class="node" id="textarea-js-get-accept-customer-profile-page" name="textarea-js-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-accept-customer-profile-page">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-accept-customer-profile-page">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-accept-customer-profile-page">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-accept-customer-profile-page">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-accept-customer-profile-page">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-accept-customer-profile-page">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-accept-customer-profile-page">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-accept-customer-profile-page">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-accept-customer-profile-page"></div>
<div id="showCode-php-get-accept-customer-profile-page">
 <p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-accept-customer-profile-page" name="textarea-php-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-accept-customer-profile-page"></div>
<div id="showCode-cs-get-accept-customer-profile-page">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-accept-customer-profile-page" name="textarea-cs-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-accept-customer-profile-page"></div>
<div id="showCode-java-get-accept-customer-profile-page">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-accept-customer-profile-page" name="textarea-java-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
 <div class="sampleWarningCont" id="warning-rb-get-accept-customer-profile-page"></div>
<div id="showCode-rb-get-accept-customer-profile-page">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-accept-customer-profile-page" name="textarea-rb-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-accept-customer-profile-page"></div>
<div id="showCode-py-get-accept-customer-profile-page">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-accept-customer-profile-page" name="textarea-py-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-accept-customer-profile-page"></div>
<div id="showCode-js-get-accept-customer-profile-page">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-accept-customer-profile-page"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-accept-customer-profile-page" name="textarea-js-get-accept-customer-profile-page" cols="80" rows="6"></textarea>
</div>
 </div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-accept-customer-profile-page" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-accept-customer-profile-page">
<h4 class="panel-title">
<a data-parent="#accordion-get-accept-customer-profile-page">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-accept-customer-profile-page" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-accept-customer-profile-page">
<div class="panel-body">
<p><em>getHostedProfilePageRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
 <td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>customerProfileId</td>
<td>Payment gateway assigned ID associated with the customer profile.<br /><br />
</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td>hostedProfileSettings</td>
<td>This is an array of settings for the session (optional). For more information on these parameters, see the 'Guidelines for Parameter Setting' section in our <a href="features/customer_profiles.html">Customer Profiles developer guide</a>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>settingName</td>
<td>The name of the setting you wish to change.<br /><br />
</td>
<td><div>String.<br /><br />One of:<br /><code>hostedProfileReturnUrl</code><br /><code>hostedProfileReturnUrlText</code><br /><code>hostedProfileHeadingBgColor</code><br /><code>hostedProfilePageBorderVisible</code><br /><code>hostedProfileIFrameCommunicatorUrl</code><br /><code>hostedProfileValidationMode</code><br /><code>hostedProfileBillingAddressRequired</code><br /><code>hostedProfileCardCodeRequired</code><br /><code>hostedProfileBillingAddressOptions</code><br /><code>hostedProfileManageOptions</code><br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>settingValue</td>
<td>The value of the setting you wish to change.<br /><br />
For more information on <code>settingValue</code>, see the 'Guidelines for Parameter Setting' section in our <a href="features/customer_profiles.html">Customer Profiles developer guide</a>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
<div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-accept-customer-profile-page">
<h4 class="panel-title">
<a data-parent="#accordion-get-accept-customer-profile-page">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-accept-customer-profile-page">
<div class="panel-body">
<p><em>getHostedProfilePageResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>token</td>
<td>An encrypted string that the merchant must include when posting to the Authorize.Net web page.<br /><br />
If not used within 15 minutes of the original API call, the token expires.<br /><br />The customer’s browser posts the token, Authorize.Net validates it, and makes sure the timestamp is less than 15 minutes old.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
 </div>
</div>
</div>
</div>
<h3 id="accept-suite-get-an-accept-payment-page">Get an Accept Payment Page</h3>
<p>Use this function to retrieve a form token which can be used to request the Authorize.Net Accept hosted payment page. For more information on using the hosted payment page, see the <a href="https://developer.authorize.net/api/reference/features/accept_hosted.html">Accept Hosted developer guide.</a></p>
<ul id="myTab" class="nav console-sample-code-nav nav-tabs ">
<li id="console" class="active">
<a id="get-an-accept-payment-pageTryIt" href="#console-get-an-accept-payment-page" data-toggle="tab">API Live Console</a>
</li>
<li id="PHP">
<a id="get-an-accept-payment-pagephp" href="#php-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-php">PHP</a>
</li>
<li id="CS">
<a id="get-an-accept-payment-pagecs" href="#cs-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-cs">CS</a>
</li>
<li id="JAVA">
<a id="get-an-accept-payment-pagejava" href="#java-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-java">JAVA</a>
</li>
<li id="RUBY">
<a id="get-an-accept-payment-pagerb" href="#ruby-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-ruby">RUBY</a>
</li>
<li id="PYTHON">
<a id="get-an-accept-payment-pagepy" href="#python-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-python">PYTHON</a>
</li>
<li id="NODE">
<a id="get-an-accept-payment-pagejs" href="#node-get-an-accept-payment-page" class="accept-suite" data-toggle="tab" navtabs="tab-js">NODE</a>
</li>
</ul>
<div id="myTabContent" class="tab-content">
<div class="tab-pane fade in active" id="console-get-an-accept-payment-page">
<form method="post" action="">
<div class="toggleButton-cont ">
<span class="header"><strong>Request:</strong></span>
<button type="button" class="btn btn-xs showJSONAPI btn-inner-tab" textareaid="get-an-accept-payment-page">JSON</button>
<button type="button" class="btn btn-primary btn-xs showXMLAPI btn-inner-tab" textareaid="get-an-accept-payment-page">XML</button>
</div>
<div class="showCodeCont">
<pre class="sample-request" name="txtReqXml" style="display: none !important">
															<code contentEditable="true" id="txtReqXml-get-an-accept-payment-page" spellcheck="false" class="XML XMLRequest">&lt;getHostedPaymentPageRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;20.00&lt;/amount&gt;
    &lt;profile&gt;
      &lt;customerProfileId&gt;123456789&lt;/customerProfileId&gt;
    &lt;/profile&gt;
    &lt;customer&gt;
      &lt;email&gt;ellen@mail.com&lt;/email&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
        &lt;firstName&gt;Ellen&lt;/firstName&gt;
        &lt;lastName&gt;Johnson&lt;/lastName&gt;
        &lt;company&gt;Souveniropolis&lt;/company&gt;
        &lt;address&gt;14 Main Street&lt;/address&gt;
        &lt;city&gt;Pecan Springs&lt;/city&gt;
        &lt;state&gt;TX&lt;/state&gt;
        &lt;zip&gt;44628&lt;/zip&gt;
        &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
  &lt;/transactionRequest&gt;
  &lt;hostedPaymentSettings&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentReturnOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;showReceipt&quot;: true, &quot;url&quot;: &quot;https://mysite.com/receipt&quot;, &quot;urlText&quot;: &quot;Continue&quot;, &quot;cancelUrl&quot;: &quot;https://mysite.com/cancel&quot;, &quot;cancelUrlText&quot;: &quot;Cancel&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentButtonOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;text&quot;: &quot;Pay&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentStyleOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;bgColor&quot;: &quot;blue&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentPaymentOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;cardCodeRequired&quot;: false, &quot;showCreditCard&quot;: true, &quot;showBankAccount&quot;: true}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentSecurityOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;captcha&quot;: false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentShippingAddressOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: false, &quot;required&quot;: false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentBillingAddressOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: true, &quot;required&quot;:false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentCustomerOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;showEmail&quot;: false, &quot;requiredEmail&quot;: false, &quot;addPaymentProfile&quot;: true}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentOrderOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: true, &quot;merchantName&quot;: &quot;G and S Questions Inc.&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentIFrameCommunicatorUrl&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;url&quot;: &quot;https://mysite.com/special&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
  &lt;/hostedPaymentSettings&gt;
&lt;/getHostedPaymentPageRequest&gt;</code>
                                                        	<code contentEditable="true" id="txtReqXml-Demo-get-an-accept-payment-page" spellcheck="false" class="XML XMLRequest" style="display: none !important">&lt;getHostedPaymentPageRequest xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;merchantAuthentication&gt;
    &lt;name&gt;API_LOGIN_ID&lt;/name&gt;
    &lt;transactionKey&gt;API_TRANSACTION_KEY&lt;/transactionKey&gt;
  &lt;/merchantAuthentication&gt;
  &lt;transactionRequest&gt;
    &lt;transactionType&gt;authCaptureTransaction&lt;/transactionType&gt;
    &lt;amount&gt;20.00&lt;/amount&gt;
    &lt;profile&gt;
      &lt;customerProfileId&gt;123456789&lt;/customerProfileId&gt;
    &lt;/profile&gt;
    &lt;customer&gt;
      &lt;email&gt;ellen@mail.com&lt;/email&gt;
    &lt;/customer&gt;
    &lt;billTo&gt;
        &lt;firstName&gt;Ellen&lt;/firstName&gt;
        &lt;lastName&gt;Johnson&lt;/lastName&gt;
        &lt;company&gt;Souveniropolis&lt;/company&gt;
        &lt;address&gt;14 Main Street&lt;/address&gt;
        &lt;city&gt;Pecan Springs&lt;/city&gt;
        &lt;state&gt;TX&lt;/state&gt;
        &lt;zip&gt;44628&lt;/zip&gt;
        &lt;country&gt;USA&lt;/country&gt;
    &lt;/billTo&gt;
  &lt;/transactionRequest&gt;
  &lt;hostedPaymentSettings&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentReturnOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;showReceipt&quot;: true, &quot;url&quot;: &quot;https://mysite.com/receipt&quot;, &quot;urlText&quot;: &quot;Continue&quot;, &quot;cancelUrl&quot;: &quot;https://mysite.com/cancel&quot;, &quot;cancelUrlText&quot;: &quot;Cancel&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentButtonOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;text&quot;: &quot;Pay&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentStyleOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;bgColor&quot;: &quot;blue&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentPaymentOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;cardCodeRequired&quot;: false, &quot;showCreditCard&quot;: true, &quot;showBankAccount&quot;: true}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentSecurityOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;captcha&quot;: false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentShippingAddressOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: false, &quot;required&quot;: false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentBillingAddressOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: true, &quot;required&quot;:false}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentCustomerOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;showEmail&quot;: false, &quot;requiredEmail&quot;: false, &quot;addPaymentProfile&quot;: true}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentOrderOptions&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;show&quot;: true, &quot;merchantName&quot;: &quot;G and S Questions Inc.&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
    &lt;setting&gt;
      &lt;settingName&gt;hostedPaymentIFrameCommunicatorUrl&lt;/settingName&gt;
      &lt;settingValue&gt;{&quot;url&quot;: &quot;https://mysite.com/special&quot;}&lt;/settingValue&gt;
    &lt;/setting&gt;
  &lt;/hostedPaymentSettings&gt;
&lt;/getHostedPaymentPageRequest&gt;</code>
                                                        </pre>
<pre class="sample-json-request" name="txtReqJsn">
															<code contentEditable="true" id="txtReqJsn-get-an-accept-payment-page" spellcheck="false" class="JSON JSONRequest">{
  &quot;getHostedPaymentPageRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;transactionRequest&quot;: {
      &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
      &quot;amount&quot;: &quot;20.00&quot;,
      &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;123456789&quot;
      },
      &quot;customer&quot;: {
        &quot;email&quot;: &quot;ellen@mail.com&quot;
      },
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;Ellen&quot;,
        &quot;lastName&quot;: &quot;Johnson&quot;,
        &quot;company&quot;: &quot;Souveniropolis&quot;,
        &quot;address&quot;: &quot;14 Main Street&quot;,
        &quot;city&quot;: &quot;Pecan Springs&quot;,
        &quot;state&quot;: &quot;TX&quot;,
        &quot;zip&quot;: &quot;44628&quot;,
        &quot;country&quot;: &quot;USA&quot;
      }
    },
    &quot;hostedPaymentSettings&quot;: {
      &quot;setting&quot;: [{
        &quot;settingName&quot;: &quot;hostedPaymentReturnOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;showReceipt\&quot;: true, \&quot;url\&quot;: \&quot;https://mysite.com/receipt\&quot;, \&quot;urlText\&quot;: \&quot;Continue\&quot;, \&quot;cancelUrl\&quot;: \&quot;https://mysite.com/cancel\&quot;, \&quot;cancelUrlText\&quot;: \&quot;Cancel\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentButtonOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;text\&quot;: \&quot;Pay\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentStyleOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;bgColor\&quot;: \&quot;blue\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentPaymentOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;cardCodeRequired\&quot;: false, \&quot;showCreditCard\&quot;: true, \&quot;showBankAccount\&quot;: true}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentSecurityOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;captcha\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentShippingAddressOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: false, \&quot;required\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentBillingAddressOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: true, \&quot;required\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentCustomerOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;showEmail\&quot;: false, \&quot;requiredEmail\&quot;: false, \&quot;addPaymentProfile\&quot;: true}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentOrderOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: true, \&quot;merchantName\&quot;: \&quot;G and S Questions Inc.\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentIFrameCommunicatorUrl&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;url\&quot;: \&quot;https://mysite.com/special\&quot;}&quot;
      }]
    }
  }
}</code>
                                                        	<code contentEditable="true" id="txtReqJsn-Demo-get-an-accept-payment-page" spellcheck="false" class="JSON JSONRequest" style="display: none !important">{
  &quot;getHostedPaymentPageRequest&quot;: {
    &quot;merchantAuthentication&quot;: {
      &quot;name&quot;: &quot;API_LOGIN_ID&quot;,
      &quot;transactionKey&quot;: &quot;API_TRANSACTION_KEY&quot;
    },
    &quot;transactionRequest&quot;: {
      &quot;transactionType&quot;: &quot;authCaptureTransaction&quot;,
      &quot;amount&quot;: &quot;20.00&quot;,
      &quot;profile&quot;: {
        &quot;customerProfileId&quot;: &quot;123456789&quot;
      },
      &quot;customer&quot;: {
        &quot;email&quot;: &quot;ellen@mail.com&quot;
      },
      &quot;billTo&quot;: {
        &quot;firstName&quot;: &quot;Ellen&quot;,
        &quot;lastName&quot;: &quot;Johnson&quot;,
        &quot;company&quot;: &quot;Souveniropolis&quot;,
        &quot;address&quot;: &quot;14 Main Street&quot;,
        &quot;city&quot;: &quot;Pecan Springs&quot;,
        &quot;state&quot;: &quot;TX&quot;,
        &quot;zip&quot;: &quot;44628&quot;,
        &quot;country&quot;: &quot;USA&quot;
      }
    },
    &quot;hostedPaymentSettings&quot;: {
      &quot;setting&quot;: [{
        &quot;settingName&quot;: &quot;hostedPaymentReturnOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;showReceipt\&quot;: true, \&quot;url\&quot;: \&quot;https://mysite.com/receipt\&quot;, \&quot;urlText\&quot;: \&quot;Continue\&quot;, \&quot;cancelUrl\&quot;: \&quot;https://mysite.com/cancel\&quot;, \&quot;cancelUrlText\&quot;: \&quot;Cancel\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentButtonOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;text\&quot;: \&quot;Pay\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentStyleOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;bgColor\&quot;: \&quot;blue\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentPaymentOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;cardCodeRequired\&quot;: false, \&quot;showCreditCard\&quot;: true, \&quot;showBankAccount\&quot;: true}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentSecurityOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;captcha\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentShippingAddressOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: false, \&quot;required\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentBillingAddressOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: true, \&quot;required\&quot;: false}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentCustomerOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;showEmail\&quot;: false, \&quot;requiredEmail\&quot;: false, \&quot;addPaymentProfile\&quot;: true}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentOrderOptions&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;show\&quot;: true, \&quot;merchantName\&quot;: \&quot;G and S Questions Inc.\&quot;}&quot;
      }, {
        &quot;settingName&quot;: &quot;hostedPaymentIFrameCommunicatorUrl&quot;,
        &quot;settingValue&quot;: &quot;{\&quot;url\&quot;: \&quot;https://mysite.com/special\&quot;}&quot;
      }]
    }
  }
}</code>
                                                        </pre>
<p class="rightshift">
<button type="button" id="btnSend-get-an-accept-payment-page" name="btnSend" class="btn btn-xs button-secondary btn-primary">SEND</button>
<button type="button" id="btnReset-get-an-accept-payment-page" name="btnReset" class="btn  " onclick="">RESET</button>
<span class="ie9msg btn bg-danger" disabled="" style="font-style: italic;">Live API Console requests are not supported in IE9 or below.</span>
</p>
</div>
</form>
<div>
<span id="spnStatusCode-get-an-accept-payment-page"></span>


<div class="errorDetails" id="detailsDiv-get-an-accept-payment-page">
<div class="tblErrors">
</div>
</div>
<span class="header" style="display:block;"><strong>Response:</strong></span>
</div>
<div style="position:relative;">
<pre class="sample-response" name="txtRespXml" style="display: none !important">
                                                    <code class="XML" id="txtRespXml-get-an-accept-payment-page">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getHostedPaymentPageResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;token&gt;fpXAkWfQzJUD6zzuU+yz9olx2YkoHd2bPzjm6u/teYYsKi3KmR9xmszKsEvw8bafqxwpshKqAUuXUp0uPMvWjelVNZDv+TYDcsq2+X+B7kuoQpnQeBnhMZg&lt;/token&gt;
&lt;/getHostedPaymentPageResponse&gt;</code>
                                                	<code class="XML" id="txtRespXml-Demo-get-an-accept-payment-page" style="display: none !important">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;getHostedPaymentPageResponse xmlns:xsi&#x3D;&quot;https://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd&#x3D;&quot;https://www.w3.org/2001/XMLSchema&quot; xmlns&#x3D;&quot;AnetApi/xml/v1/schema/AnetApiSchema.xsd&quot;&gt;
  &lt;messages&gt;
    &lt;resultCode&gt;Ok&lt;/resultCode&gt;
    &lt;message&gt;
      &lt;code&gt;I00001&lt;/code&gt;
      &lt;text&gt;Successful.&lt;/text&gt;
    &lt;/message&gt;
  &lt;/messages&gt;
  &lt;token&gt;fpXAkWfQzJUD6zzuU+yz9olx2YkoHd2bPzjm6u/teYYsKi3KmR9xmszKsEvw8bafqxwpshKqAUuXUp0uPMvWjelVNZDv+TYDcsq2+X+B7kuoQpnQeBnhMZg&lt;/token&gt;
&lt;/getHostedPaymentPageResponse&gt;</code>
                                                </pre>
<pre class="sample-json-response" name="txtRespJsn">
													<code class="JSON" id="txtRespJsn-get-an-accept-payment-page">{
  &quot;token&quot;: &quot;FCfc6VbKGFztf8g4sI0B1bG35quHGGlnJx7G8zRpqV0gha2862KkqRQ/NaGa6y2SIhueCAsP/CQKQDQ0QJr8mOfnZD2D0EfogSWP6tQvG3xlv1LS28wFKZHt2U/DSH64eA3jLIwEdU+++++++++++++shortened_for_brevity++++++++WC1mNVQNKv2Z+ 1msH4oiwoXVleb2Q7ezqHYl1FgS8jDAYzA7ls+AYf05s&#x3D;.89nE4Beh&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                    <code class="JSON" id="txtRespJsn-Demo-get-an-accept-payment-page" style="display: none !important">{
  &quot;token&quot;: &quot;FCfc6VbKGFztf8g4sI0B1bG35quHGGlnJx7G8zRpqV0gha2862KkqRQ/NaGa6y2SIhueCAsP/CQKQDQ0QJr8mOfnZD2D0EfogSWP6tQvG3xlv1LS28wFKZHt2U/DSH64eA3jLIwEdU+++++++++++++shortened_for_brevity++++++++WC1mNVQNKv2Z+ 1msH4oiwoXVleb2Q7ezqHYl1FgS8jDAYzA7ls+AYf05s&#x3D;.89nE4Beh&quot;,
  &quot;messages&quot;: {
    &quot;resultCode&quot;: &quot;Ok&quot;,
    &quot;message&quot;: [
      {
        &quot;code&quot;: &quot;I00001&quot;,
        &quot;text&quot;: &quot;Successful.&quot;
      }
    ]
  }
}</code>
                                                </pre>
<div id="txtRespLoader-get-an-accept-payment-page" class="loaderContainer">
<div class="loaderbg">Loading...</div>
<div class="loader"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="php-get-an-accept-payment-page">
<div class="  bpn-show-php  bpn-php" textareasection="php" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont phpCodeCont">
<div class="sampleWarningCont" id="warning-php-get-an-accept-payment-page"></div>
<div id="showCode-php-get-an-accept-payment-page">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-an-accept-payment-page"></a>
</p>
<textarea class="php" id="textarea-php-get-an-accept-payment-page" name="textarea-php-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="cs-get-an-accept-payment-page">
<div class="bpn-show-cs bpn-cs" textareasection="cs" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont csCodeCont">
<div class="sampleWarningCont" id="warning-cs-get-an-accept-payment-page"></div>
<div id="showCode-cs-get-an-accept-payment-page">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-an-accept-payment-page"></a>
 </p>
<textarea class="cs" id="textarea-cs-get-an-accept-payment-page" name="textarea-cs-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="java-get-an-accept-payment-page">
<div class=" bpn-show-java  bpn-java " textareasection="java" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont javaCodeCont">
<div class="sampleWarningCont" id="warning-java-get-an-accept-payment-page"></div>
<div id="showCode-java-get-an-accept-payment-page">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-an-accept-payment-page"></a>
</p>
<textarea class="java" id="textarea-java-get-an-accept-payment-page" name="textarea-java-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="ruby-get-an-accept-payment-page">
<div class=" bpn-show-rb bpn-ruby " textareasection="rb" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont rbCodeCont">
<div class="sampleWarningCont" id="warning-rb-get-an-accept-payment-page"></div>
<div id="showCode-rb-get-an-accept-payment-page">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-an-accept-payment-page"></a>
</p>
<textarea class="ruby" id="textarea-rb-get-an-accept-payment-page" name="textarea-rb-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="python-get-an-accept-payment-page">
<div class="bpn-show-py bpn-python" textareasection="py" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont pyCodeCont">
<div class="sampleWarningCont" id="warning-py-get-an-accept-payment-page"></div>
<div id="showCode-py-get-an-accept-payment-page">
<p>
This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-an-accept-payment-page"></a>
</p>
<textarea class="python" id="textarea-py-get-an-accept-payment-page" name="textarea-py-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
<div class="tab-pane fade" id="node-get-an-accept-payment-page">
<div class="bpn-show-js bpn-node " textareasection="js" textareaid="get-an-accept-payment-page">
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">

<div class="sampleCont jsCodeCont">
<div class="sampleWarningCont" id="warning-js-get-an-accept-payment-page"></div>
<div id="showCode-js-get-an-accept-payment-page">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-an-accept-payment-page"></a>
</p>
<textarea class="node" id="textarea-js-get-an-accept-payment-page" name="textarea-js-get-an-accept-payment-page" cols="80" rows="6"></textarea>
 </div>
</div>
</div>
</div>
<div class="tab-pane fade" id="sample-get-an-accept-payment-page">
<div class="toggleButton-cont">
<span class="header"><strong>View : </strong></span>
<button type="button" class="btn btn-xs btn-show-php btn-inner-tab btn-sample" textareasection="php" textareaid="get-an-accept-payment-page">PHP</button>
<button type="button" class="btn btn-xs btn-show-cs btn-inner-tab btn-sample btn-primary" textareasection="cs" textareaid="get-an-accept-payment-page">C#</button>
<button type="button" class="btn btn-xs btn-show-java btn-inner-tab btn-sample btn-primary" textareasection="java" textareaid="get-an-accept-payment-page">Java</button>
<button type="button" class="btn btn-xs btn-show-rb btn-inner-tab btn-sample btn-primary" textareasection="rb" textareaid="get-an-accept-payment-page">Ruby</button>
<button type="button" class="btn btn-xs btn-show-py btn-inner-tab btn-sample btn-primary" textareasection="py" textareaid="get-an-accept-payment-page">Python</button>
<button type="button" class="btn btn-xs btn-show-js btn-inner-tab btn-sample btn-primary" textareasection="js" textareaid="get-an-accept-payment-page">Node</button>
</div>
<div class="showCodeCont" id="showCode-get-an-accept-payment-page">
<div class="sampleCont sampleCodeCont-php">
<div class="sampleWarningCont" id="warning-php-get-an-accept-payment-page"></div>
<div id="showCode-php-get-an-accept-payment-page">
<p>
This sample PHP code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-php" target="_blank" rel="noopener noreferrer">PHP SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-php-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-php-get-an-accept-payment-page" name="textarea-php-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-cs">
<div class="sampleWarningCont" id="warning-cs-get-an-accept-payment-page"></div>
<div id="showCode-cs-get-an-accept-payment-page">
<p>
This sample C# code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-dotnet" target="_blank" rel="noopener noreferrer">.NET SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-cs-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-cs-get-an-accept-payment-page" name="textarea-cs-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-java">
<div class="sampleWarningCont" id="warning-java-get-an-accept-payment-page"></div>
<div id="showCode-java-get-an-accept-payment-page">
<p>
This sample Java code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-java" target="_blank" rel="noopener noreferrer">Java SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-java-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-java-get-an-accept-payment-page" name="textarea-java-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-rb">
<div class="sampleWarningCont" id="warning-rb-get-an-accept-payment-page"></div>
<div id="showCode-rb-get-an-accept-payment-page">
<p>
This sample Ruby code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-ruby" target="_blank" rel="noopener noreferrer">Ruby SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-rb-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-rb-get-an-accept-payment-page" name="textarea-rb-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-py">
<div class="sampleWarningCont" id="warning-py-get-an-accept-payment-page"></div>
<div id="showCode-py-get-an-accept-payment-page">
<p>
 This sample Python code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-python" target="_blank" rel="noopener noreferrer">Python SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-py-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-py-get-an-accept-payment-page" name="textarea-py-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
<div class="sampleCont sampleCodeCont-js">
<div class="sampleWarningCont" id="warning-js-get-an-accept-payment-page"></div>
<div id="showCode-js-get-an-accept-payment-page">
<p>
This sample JavaScript code demonstrates how to perform this function using our <a href="https://github.com/AuthorizeNet/sdk-node" target="_blank" rel="noopener noreferrer">Node.js SDK</a>.
</p>
<p>
<strong>URL:</strong> <a target="_blank" rel="noopener noreferrer" href="" id="url-js-get-an-accept-payment-page"></a>
</p>
<textarea class="sample-code" id="textarea-js-get-an-accept-payment-page" name="textarea-js-get-an-accept-payment-page" cols="80" rows="6"></textarea>
</div>
</div>
</div>
</div>
</div>
<div class="req-res-description">
<div class="panel-group" id="accordion-get-an-accept-payment-page" role="tablist" aria-multiselectable="true">
<div class="panel">
<div class="panel-heading collapsibleResponseField" role="tab" id="headingReq-get-an-accept-payment-page">
<h4 class="panel-title">
<a data-parent="#accordion-get-an-accept-payment-page">
Request Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseReq-get-an-accept-payment-page" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReq-get-an-accept-payment-page">
<div class="panel-body">
<p><em>getHostedPaymentPageRequest</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>merchantAuthentication</td>
<td><strong>Required.</strong><br />
Contains merchant authentication information.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>name</td>
<td><strong>Required.</strong><br />
Merchant’s unique API Login ID.<br /><br />
The merchant API Login ID is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 25 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>transactionKey</td>
<td><strong>Required.</strong><br />
Merchant’s unique Transaction Key.<br /><br />
The merchant Transaction Key is provided in the Merchant Interface and must be stored securely.<br /><br /> The API Login ID and Transaction Key together provide the merchant authentication required for access to the payment gateway.</td>
<td><div>String, up to 16 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value is included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>transactionRequest</td>
<td><strong>Required.</strong><br />
This element is a container for transaction specific information.<br /><br />
 </td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>transactionType</td>
<td><strong>Required.</strong><br />
Type of credit card transaction.<br /><br />
If the value submitted does not match a supported value, the transaction is rejected.</td>
<td><div>String.<br /><br />Use <code>authCaptureTransaction</code> to authorize and automatically capture the transaction, or use <code>authOnlyTransaction</code> to authorize the transaction for capture at a later time.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>amount</td>
<td><strong>Required.</strong><br />
Amount of the transaction.<br /><br />
This is the total amount and must include tax, shipping, tips, and any other charges.</td>
<td><div>Decimal, up to 15 digits with a decimal point.<br /><br />Do not use currency symbols.<br /><br />
For example, 8.95.</div></td>
</tr>
<tr>
<td class='oneBullet'>profile</td>
<td>The following fields enable you to charge a transaction using payment or shipping profiles.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>customerProfileId</td>
<td>The ID of the customer profile.<br /><br />
If this value is included in the response, the customer will be able to choose saved payment methods in the payment form.</td>
<td><div>Numeric string.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>solution</td>
<td>Contains information about the software that generated the transaction.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique Solution ID which you generate and associate with your solution through the <a href="https://account.authorize.net/interfaces/reseller/frontend/login.aspx">Partner Interface</a>.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>The name is generated by the solution provider and provided to Authorize.Net.<br /><br />
See the <a href="https://developer.authorize.net/api/solution_id/">Solution ID Implementation Guide</a> for details.</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>order</td>
<td>Contains information about the order.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>invoiceNumber</td>
<td>Merchant-defined invoice number associated with the order.<br /><br />Worldpay RAFT 610 merchants can view the invoice number in the Worldpay Reporting Portal.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the item purchased.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>lineItems</td>
<td>Contains one or more <code>lineItem</code> elements, up to a maximum of 30 line items.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>lineItem</td>
<td>Contains information about one item.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='threeBullet'>itemId</td>
<td>Item identification.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>name</td>
<td>The human-readable name for the item.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>description</td>
<td>A description of the item.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='threeBullet'>quantity</td>
<td>The quantity of items sold.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='threeBullet'>unitPrice</td>
<td>The cost per unit, excluding tax, freight, and duty.<br /><br />
</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='threeBullet'>taxable</td>
<td>Indicates whether the item is taxable.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>tax</td>
<td>Contains information about applicable taxes.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
 <td class='twoBullet'>amount</td>
<td>Amount of tax.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of tax.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of tax.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>duty</td>
<td>Contains information about any duty applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of duty.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of duty.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of duty.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>shipping</td>
 <td>Items in this element describe shipping charges applied.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>amount</td>
<td>Amount of the shipping charges.<br /><br />
The total transaction amount must include this value.</td>
<td><div>Decimal, up to four decimal places.<br /><br />
For example, 5.4321.</div></td>
</tr>
<tr>
<td class='twoBullet'>name</td>
<td>Name of the shipping charges.<br /><br />
</td>
<td><div>String, up to 31 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>description</td>
<td>Description of the shipping charges.<br /><br />
</td>
<td><div>String, up to 255 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>taxExempt</td>
<td>Indicates whether or not order is exempt from tax.<br /><br />
</td>
<td><div>Boolean.<br /><br />Either <code>true</code> or <code>false</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>poNumber</td>
<td>The merchant-assigned purchase order number.<br /><br />
If you use purchase order numbers, your solution should generate the purchase order number and send it with your transaction requests. Authorize.Net does not generate purchase order numbers.</td>
<td><div>String, up to 25 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>customer</td>
<td>The following fields contain customer information.<br /><br />
</td>
<td><div></div></td>
 </tr>
<tr>
<td class='twoBullet'>type</td>
<td>Type of customer.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>individual</code> or <code>business</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>id</td>
<td>The unique customer ID used to represent the customer associated with the transaction.<br /><br />
If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.</td>
<td><div>String, up to 20 characters.<br /><br />Use alphanumeric characters only, without spaces, dashes, or other symbols.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>email</td>
<td><strong>Conditional.</strong><br /><br />The customer’s valid email address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a><br /><br />If you enable Email Receipts in the Merchant Interface, and if the email address format is valid, the customer will receive an Authorize.Net generated email receipt.</td>
<td><div>String, up to 255 characters.<br /><br />
For example, janedoe@example.com.</div></td>
</tr>
<tr>
<td class='oneBullet'>billTo</td>
<td>This element contains billing address information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>billTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td><strong>Conditional.</strong><br /><br />First name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
 </tr>
<tr>
<td class='twoBullet'>lastName</td>
<td><strong>Conditional.</strong><br /><br />Last name associated with customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td><strong>Conditional.</strong><br /><br />Customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td><strong>Conditional.</strong><br /><br />City of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td><strong>Conditional.</strong><br /><br />State of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
 <td><strong>Conditional.</strong><br /><br />The postal code of customer’s billing address.<br /><br />
Required if merchant would like to use the Address Verification Service security feature.<br /><br />Required when using GPN Canada or Worldpay Streamline Processing Platform.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td><strong>Conditional.</strong><br /><br />Country of customer’s billing address.<br /><br />
Required only when using a <a href="https://developer.authorize.net/api/reference/features/payment_transactions.html#Payment_Processors">European payment processor.</a></td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>phoneNumber</td>
<td>Phone number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='twoBullet'>faxNumber</td>
<td>Fax number associated with customer’s billing address.<br /><br />
</td>
<td><div>String, up to 25 characters.<br /><br />
For example, (123) 555-1234.</div></td>
</tr>
<tr>
<td class='oneBullet'>shipTo</td>
<td>This element contains shipping information.<br /><br />
If EVO is your payment processor and you submit any of the following <code>shipTo</code> fields, you must submit all of them.<br /><br /><code>firstName</code><br /><code>lastName</code><br /><code>address</code><br /><code>city</code><br /><code>state</code><br /><code>zip</code></td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>firstName</td>
<td>First name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
 </div></td>
</tr>
<tr>
<td class='twoBullet'>lastName</td>
<td>Last name associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>company</td>
<td>Company associated with customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 50 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>address</td>
<td>Customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 60 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>city</td>
<td>City of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>state</td>
<td>State of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 40 characters.<br /><br />For US states, use the <a href="https://pe.usps.com/text/pub28/28apb.htm">USPS two-character abbreviation</a> for the state.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>zip</td>
<td>The postal code of customer’s shipping address.<br /><br />
</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>country</td>
<td>Country of customer’s shipping address.<br /><br />
 </td>
<td><div>String, up to 60 characters.<br /><br />For international payment processors, use the <a href="https://www.iso.org/obp/ui/#search/code/">ISO 3166 alpha-3 code</a> for the country.<br /><br />
</div></td>
</tr>
<tr>
<td>hostedPaymentSettings</td>
<td><strong>Required.</strong><br />
This is an array of settings for the session.<br /><br />
Within this element, you must also submit at least one setting. For more information on these parameters, see the 'Hosted Form Parameter Settings' section in our <a href="https://developer.authorize.net/api/reference/features/accept_hosted.html">Accept Hosted developer guide</a>.</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>setting</td>
<td>Contains <code>settingName</code> and <code>settingValue</code>.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>settingName</td>
<td><strong>Conditional.</strong><br /><br />One of:<br /><code>hostedPaymentReturnOptions</code><br /><code>hostedPaymentButtonOptions</code><br /><code>hostedPaymentStyleOptions</code><br /><code>hostedPaymentPaymentOptions</code><br /><code>hostedPaymentSecurityOptions</code><br /><code>hostedPaymentShippingAddressOptions</code><br /><code>hostedPaymentBillingAddressOptions</code><br /><code>hostedPaymentCustomerOptions</code><br /><code>hostedPaymentOrderOptions</code><br /><code>hostedPaymentIFrameCommunicatorUrl</code><br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td class='twoBullet'>settingValue</td>
<td>Parameters and values for the specific setting.<br /><br />
For more information on possible parameters for <code>settingValue</code>, see the 'Hosted Form Parameter Settings' section in our <a href="https://developer.authorize.net/api/reference/features/accept_hosted.html">Accept Hosted developer guide</a>.</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="panel">
 <div class="panel-heading collapsibleResponseField " role="tab" id="headingResp-get-an-accept-payment-page">
<h4 class="panel-title">
<a data-parent="#accordion-get-an-accept-payment-page">
Response Field Description
</a>
</h4>
</div>
<div class="DetailsResponse" id="collapseResp-get-an-accept-payment-page">
<div class="panel-body">
<p><em>getHostedPaymentPageResponse</em>
</p>
<table class="table table-condensed">
<thead>
<tr>
<th>Element</th>
<th>Description</th>
<th>Format</th>
</tr>
</thead>
<tbody>
<tr>
<td>refId</td>
<td>Merchant-assigned reference ID for the request.<br /><br />
If included in the request, this value will be included in the response. This feature might be especially useful for multi-threaded applications.</td>
<td><div>String, up to 20 characters.<br /><br />
</div></td>
</tr>
<tr>
<td>messages</td>
<td>This element contains a <code>resultCode</code> and one or more <code>message</code> elements.<br /><br />
</td>
<td><div></div></td>
</tr>
<tr>
<td class='oneBullet'>resultCode</td>
<td>States whether the request was handled successfully, or ended with an error.<br /><br />
</td>
<td><div>String.<br /><br />Either <code>Ok</code> or <code>Error</code>.<br /><br />
</div></td>
</tr>
<tr>
<td class='oneBullet'>message</td>
<td>Contains details about the result.<br /><br />
</td>
 <td><div></div></td>
</tr>
<tr>
<td class='twoBullet'>code</td>
<td>The code number for the result.<br /><br />
For a comprehensive list of possible values, or to look up a returned value, see <a href="https://developer.authorize.net/api/reference/responseCodes.html">the Response Code Tool.</a></td>
<td><div>String, up to 6 characters.<br /><br />The first character is either an I for informational responses, or E for error responses. The remaining characters are numeric and indicate the type of informational or error response.<br /><br />
For example, <code>I00001</code> or <code>E00001</code>.</div></td>
</tr>
<tr>
<td class='twoBullet'>text</td>
<td>Text explanation of the code for the result.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
<tr>
<td>token</td>
<td>An encrypted string that the merchant must include when posting to the Authorize.Net web page.<br /> If not used within 15 minutes of the original API call, this token expires.<br /><br />
</td>
<td><div>String.<br /><br />
</div></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>


<footer class="container " style="position: relative">
<div class="wrap footer-wrapper">
<div class="row">
<div class="col-md-3 dev-footer-col">
<h3>ABOUT US</h3>
<ul>
<li><a href="https://www.authorize.net/about-us/" target="_blank" rel="noopener noreferrer">Authorize.Net</a></li>
<li><a href="https://www.authorize.net/resources/blog/" target="_blank" rel="noopener noreferrer">Corporate Blog</a></li>
<li><a href="https://twitter.com/authorizenetdev" target="_blank" rel="noopener noreferrer">Twitter</a></li>
<li><a href="https://status.authorize.net" target="_blank" rel="noopener noreferrer">Status</a></li>
</ul>
</div>
<div class="col-md-3 dev-footer-col">
<h3>HOW PAYMENTS WORK</h3>
<ul>
<li><a href="https://www.authorize.net/resources/how-payments-work/" target="_blank" rel="noopener noreferrer">Understanding Credit Card Processing</a></li>
<li><a href="https://www.authorize.net/resources/blog/understanding-pci-compliance/" target="_blank" rel="noopener noreferrer">PCI Compliance</a></li>
</ul>
</div>
<div class="col-md-3 dev-footer-col">
<h3>FIND A PARTNER</h3>
<ul>
<li><a href="https://www.authorize.net/sign-up/sell-authorizenet-services/affiliate-program/" target="_blank" rel="noopener noreferrer">Affiliate Program</a></li>
<li><a href="https://www.authorize.net/sign-up/sell-authorizenet-services/" target="_blank" rel="noopener noreferrer">Certification Program</a></li>
<li><a href="https://www.authorize.net/resources/find-a-partner/?category=category-one" target="_blank" rel="noopener noreferrer">Certified 3rd Party Products and Services</a></li>
<li><a href="https://www.cybersource.com/" target="_blank" rel="noopener noreferrer">CyberSource.com</a></li>
</ul>
</div>
<div class="col-md-3 dev-footer-col last">
<ul>
<li class="bbb-logo">
<a class="ruhzbum" target="_blank" rel="noopener noreferrer" title="Authorize.Net is a BBB Accredited Credit Card Payment Processor." href="http://www.bbb.org/utah/business-reviews/credit-card-processing-service/authorize-net-a-cybersource-solution-in-american-fork-ut-2009493/#bbblogo"> <img src="https://developer.authorize.net/content/dam/developer/images/bbb-logo.png" alt="Authorize.Net is a BBB Accredited Credit Card Payment Processor." />
</a>
</li>
</ul>
</div>
</div>
<div class="divider"></div>
<div class="row dev-footer-bottom">
<div class="col-md-3 left">
<a href="https://www.authorize.net/"> <img src="https://developer.authorize.net/content/dam/developer/images/anet-logo-white.png" alt="Developer.Authorize.Net Logo" style="width: 250px" style="height: 33px" />
</a>
</div>
<div class="col-md-9 align-right right" style="padding-top:16px;">
<a href="https://developer.authorize.net/sitemap.html" target="_blank" rel="noopener noreferrer">Site Map </a>
<a href="https://www.authorize.net/company/privacy/" target="_blank" rel="noopener noreferrer">Privacy</a>
<a href="https://www.authorize.net/company/terms/" target="_blank" rel="noopener noreferrer">Terms of Use</a>
<p class="copyright text-uppercase">© 2018-2019. Authorize.Net. All rights reserved.
All brand names and logos are the property of their respective owners, are used for identification purposes only, and do not imply product endorsement or affiliation with Authorize.Net.</p>
</div>
</div>
</div>
</footer>
</div>
</div>
</div>
</div>





<script src="dist/js/app.js" type="text/javascript"></script>
<script src="external/bootstrap.min.js"></script>
<script src="external/bootstrap-tourist.js"></script>
<script src="external/doc.min.js"></script>
<script src="external/codemirror.min.js"></script>
<script src="external/xml.min.js"></script>
<script src="external/javascript.min.js"></script>
<script src="external/xml-hint.js"></script>
<script src="external/show-hint.js"></script>
<script src="api.js"></script>
<script src="formatting.js"></script>
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-20120532-2']);
    _gaq.push(['_trackPageview']);
    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script>
<script type='text/javascript' src="external/xml2json.min.js"></script>
<script src="json_support.js"></script>
<script src="external/jquery-ui.min.js"></script>
<link rel="stylesheet" href="dist/css/jquery-ui.min.css">

<script type="text/javascript">
        if(navigator.userAgent.indexOf('Edge/') > 0)
        {
            document.find("script").attr("src","dist/js/jquery.min.js").remove();
        }
    </script>









</body>
</html>
